package Libraries.Language.Compile.Test

use Libraries.Language.Compile.all
use Libraries.Containers.HashTable
use Libraries.Containers.Array
use Libraries.Language.Compile.Parser
use Libraries.System.File
use Libraries.Containers.Blueprints.Iterator
use Libraries.Language.Compile.Translate.JarGenerator
use Libraries.System.StackTraceItem

class TypeCheckTester 
    CompilerTestSuite suite = undefined
    text path = "Library/Tests/TypeChecker/"
    text passPath = path + "Pass/"
    text failPath = path + "Fail/"
    Array<text> passTests

    action Test
        path = passPath
        AutoBoxingAndMethodOverloadingInt()
        AutoBoxingAndMethodOverloadingNum()
        AutoboxBoolObj()
        AutoboxBoolObjSemiWrapped()
        AutoboxBoolean()
        AutoboxBooleanSemiWrapped()
        AutoboxIntObj()
        AutoboxIntObjSemiWrapped()
        AutoboxInteger()
        AutoboxIntegerSemiWrapped()
        AutoboxNumObj()
        AutoboxNumObjSemiWrapped()
        AutoboxNumber()
        AutoboxNumberSemiWrapped()
        AutoboxText()
        AutoboxTextObj()
        AutoboxTextObjSemiWrapped()
        AutoboxTextSemiWrapped()
        BooleanCompare()
        BooleanEquals()
        BooleanGetText()
        CastFieldIntObjDest()
        CastFieldIntObjSource()
        CastFieldIntObjSourceDest()
        CastFieldObjIntDest()
        CastFieldObjIntSource()
        CastFieldObjIntSourceDest()
        CastLocalVarIntObj()
        CastLocalVarObjInt()
        CastParamIntObj()
        CastParamObjInt()
        CompareBugTest()

        ExpAssignBoolObjBoolObj()
        ExpAssignBoolObjBoolean()
        ExpAssignBoolObjObject()
        ExpAssignBoolObjUndefined()
        ExpAssignBooleanBoolObj()
        ExpAssignBooleanBoolean()
        ExpAssignBooleanObject()
        ExpAssignBooleanText()
        ExpAssignIntObjIntObj()
        ExpAssignIntObjInteger()
        ExpAssignIntObjObject()
        ExpAssignIntObjUndefined()
        ExpAssignIntegerIntObj()
        ExpAssignIntegerInteger()
        ExpAssignIntegerNumber()
        ExpAssignIntegerObject()
        ExpAssignIntegerText()
        ExpAssignNumObjNumObj()
        ExpAssignNumObjNumber()
        ExpAssignNumObjObject()
        ExpAssignNumObjUndefined()
        ExpAssignNumberInteger()
        ExpAssignNumberNumObj()
        ExpAssignNumberNumber()
        ExpAssignNumberObject()
        ExpAssignNumberText()
        ExpAssignObjectBoolObj()
        ExpAssignObjectBoolean()
        ExpAssignObjectIntObj()
        ExpAssignObjectInteger()
        ExpAssignObjectNumObj()
        ExpAssignObjectNumber()
        ExpAssignObjectObject()
        ExpAssignObjectText()
        ExpAssignObjectTextObj()
        ExpAssignObjectUndefined()
        ExpAssignTextBoolean()
        ExpAssignTextInteger()
        ExpAssignTextNumber()
        ExpAssignTextObject()
        ExpAssignTextText()
        ExpAssignTextTextObj()
        ExpAssignTextUndefined()
        ExpAssignTextObjObject()
        ExpAssignTextObjText()
        ExpAssignTextObjTextObj()
        ExpAssignTextObjUndefined()
        ExpAssignBoolObjBoolObjField()
        ExpAssignBoolObjBooleanField()
        ExpAssignBoolObjObjectField()
        ExpAssignBoolObjUndefinedField()
        ExpAssignBooleanBoolObjField()
        ExpAssignBooleanBooleanField()
        ExpAssignBooleanObjectField()
        ExpAssignBooleanTextField()
        ExpAssignIntObjIntObjField()
        ExpAssignIntObjIntegerField()
        ExpAssignIntObjObjectField()
        ExpAssignIntObjUndefinedField()
        ExpAssignIntegerIntObjField()
        ExpAssignIntegerIntegerField()
        ExpAssignIntegerNumberField()
        ExpAssignIntegerObjectField()
        ExpAssignIntegerTextField()
        ExpAssignNumObjNumObjField()
        ExpAssignNumObjNumberField()
        ExpAssignNumObjObjectField()
        ExpAssignNumObjUndefinedField()
        ExpAssignNumberIntegerField()
        ExpAssignNumberNumObjField()
        ExpAssignNumberNumberField()
        ExpAssignNumberObjectField()
        ExpAssignNumberTextField()
        ExpAssignObjectBoolObjField()
        ExpAssignObjectBooleanField()
        ExpAssignObjectIntObjField()
        ExpAssignObjectIntegerField()
        ExpAssignObjectNumObjField()
        ExpAssignObjectNumberField()
        ExpAssignObjectObjectField()
        ExpAssignObjectTextField()
        ExpAssignObjectTextObjField()
        ExpAssignObjectUndefinedField()
        ExpAssignTextBooleanField()
        ExpAssignTextIntegerField()
        ExpAssignTextNumberField()
        ExpAssignTextObjectField()
        ExpAssignTextTextField()
        ExpAssignTextTextObjField()
        ExpAssignTextUndefinedField()
        ExpAssignTextObjObjectField()
        ExpAssignTextObjTextField()
        ExpAssignTextObjTextObjField()
        ExpAssignTextObjUndefinedField()

        IndexOfPrefix()
        IndexOfPrefixIndex()
        InstanceTypeChildOfChild()
        InstanceTypeCurrent()
        InstanceTypeDirectChild()
        InstanceTypeDirectParent()
        InstanceTypeObject()
        InstanceTypeParentOfParent()
        IntegerBitCount()
        IntegerCompare()
        IntegerEquals()
        IntegerGetBinary()
        IntegerGetOctal()
        IntegerGetText()
        IntegerHighestOneBit()
        IntegerLeadingZeros()
        IntegerLowestOneBit()
        IntegerReverse()
        IntegerRotateLeft()
        IntegerRotateRight()
        IntegerTrailingZeros()
        NumberCompare()
        NumberEquals()
        NumberGetHex()
        NumberGetInteger()
        NumberGetText()
        NumberIsInfinite()
        NumberIsNotANumber()
        ReturningIntegerInPlaceOfNumber()
        TextAppend()
        TextCompare()
        TextContains()
        TextEndsWith()
        TextEquals()
        TextEqualsIgnoringCase()
        TextGetCharacter()
        TextGetLength()
        TextGetSubtext()
        TextGetSubtextWithEnd()
        TextIsEmpty()
        TextReplace()
        TextSetAndGetValue()
        TextStartsWith()
        TextToLowerCase()
        TextToUpperCase()
        TextTrim()
        TypeInferenceBoolean()
        TypeInferenceBooleanAnd()
        TypeInferenceCast()
        TypeInferenceInteger()
        TypeInferenceLiterals()
        TypeInferenceNestedFunctionCalls()
        TypeInferenceNumber()
        TypeInferenceReturnTypesInt()
        TypeInferenceReturnTypesIntNum()
        TypeInferenceReturnTypesNum()
        TypeInferenceText()

//FAIL TESTS
        path = failPath
        
        ExpAssignBoolObjIntObj()
        ExpAssignBoolObjIntObjField()
        ExpAssignBoolObjInteger()
        ExpAssignBoolObjIntegerField()
        ExpAssignBoolObjNumObj()
        ExpAssignBoolObjNumObjField()
        ExpAssignBoolObjNumber()
        ExpAssignBoolObjNumberField()
        ExpAssignBoolObjText()
        ExpAssignBoolObjTextField()
        ExpAssignBoolObjTextObj()
        ExpAssignBoolObjTextObjField()
        ExpAssignBooleanIntObj()
        ExpAssignBooleanIntObjField()
        ExpAssignBooleanInteger()
        ExpAssignBooleanIntegerField()
        ExpAssignBooleanNumObj()
        ExpAssignBooleanNumObjField()
        ExpAssignBooleanNumber()
        ExpAssignBooleanNumberField()
        ExpAssignBooleanTextObj()
        ExpAssignBooleanTextObjField()
        ExpAssignBooleanUndefined()
        ExpAssignBooleanUndefinedField()
        ExpAssignIntObjBoolObj()
        ExpAssignIntObjBoolObjField()
        ExpAssignIntObjBoolean()
        ExpAssignIntObjBooleanField()
        ExpAssignIntObjNumObj()
        ExpAssignIntObjNumObjField()
        ExpAssignIntObjNumber()
        ExpAssignIntObjNumberField()
        ExpAssignIntObjText()
        ExpAssignIntObjTextField()
        ExpAssignIntObjTextObj()
        ExpAssignIntObjTextObjField()
        ExpAssignIntegerBoolObj()
        ExpAssignIntegerBoolObjField()
        ExpAssignIntegerBoolean()
        ExpAssignIntegerBooleanField()
        ExpAssignIntegerNumObj()
        ExpAssignIntegerNumObjField()
        ExpAssignIntegerTextObj()
        ExpAssignIntegerTextObjField()
        ExpAssignIntegerUndefined()
        ExpAssignIntegerUndefinedField()
        ExpAssignNumObjBoolObj()
        ExpAssignNumObjBoolObjField()
        ExpAssignNumObjBoolean()
        ExpAssignNumObjBooleanField()
        ExpAssignNumObjIntObj()
        ExpAssignNumObjIntObjField()
        ExpAssignNumObjInteger()
        ExpAssignNumObjIntegerField()
        ExpAssignNumObjText()
        ExpAssignNumObjTextField()
        ExpAssignNumObjTextObj()
        ExpAssignNumObjTextObjField()
        ExpAssignNumberBoolObj()
        ExpAssignNumberBoolObjField()
        ExpAssignNumberBoolean()
        ExpAssignNumberBooleanField()
        ExpAssignNumberIntObj()
        ExpAssignNumberIntObjField()
        ExpAssignNumberTextObj()
        ExpAssignNumberTextObjField()
        ExpAssignNumberUndefined()
        ExpAssignNumberUndefinedField()
        ExpAssignTextBoolObj()
        ExpAssignTextBoolObjField()
        ExpAssignTextIntObj()
        ExpAssignTextIntObjField()
        ExpAssignTextNumbObj()
        ExpAssignTextNumbObjField()
        ExpAssignTextObjBoolObj()
        ExpAssignTextObjBoolObjField()
        ExpAssignTextObjBoolean()
        ExpAssignTextObjBooleanField()
        ExpAssignTextObjIntObj()
        ExpAssignTextObjIntObjField()
        ExpAssignTextObjInteger()
        ExpAssignTextObjIntegerField()
        ExpAssignTextObjNumObj()
        ExpAssignTextObjNumObjField()
        ExpAssignTextObjNumber()
        ExpAssignTextObjNumberField()
        ExpAssignUndefinedObject()
        ExpAssignUndefinedObjectField()

        PrimitiveTextGetValue()
        PrimitiveTextSetValue()
        InstanceTypeUnrelatedTypes()
        TypeInferenceDifferentLiteralTypes()
        TypeInferenceDifferentReturnTypes()
        TypeInferenceDifferentTypes()
    end

    action GetName returns text
        return "Type Check Tests"
    end

    action GetCompilerTestSuite returns CompilerTestSuite
        return suite
    end

    action SetCompilerTestSuite(CompilerTestSuite suite)
        me:suite = suite
    end

    action AutoBoxingAndMethodOverloadingInt
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "AutoBoxingAndMethodOverloadingInt.quorum")
        files:Add(main)
        results:Add(0, "2")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

action AutoBoxingAndMethodOverloadingNum
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "AutoBoxingAndMethodOverloadingNum.quorum")
        files:Add(main)
        results:Add(0, "1.0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxBoolObj
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxBoolObj.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxBoolObjSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxBoolObjSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxBoolean
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxBoolean.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxBooleanSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxBooleanSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxIntObj
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxIntObj.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxIntObjSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxIntObjSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxInteger
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxInteger.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxIntegerSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxIntegerSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxNumObj
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxNumObj.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxNumObjSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxNumObjSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxNumber
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxNumber.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxNumberSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxNumberSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxText
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxText.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "text")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxTextObj
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxTextObj.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "text")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxTextObjSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxTextObjSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "text")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxTextSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxTextSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "text")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action BooleanCompare 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "BooleanCompare.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action BooleanEquals 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "BooleanEquals.quorum")
        files:Add(main)
        results:Add(0, "false")
        results:Add(1, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action BooleanGetText 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "BooleanGetText.quorum")
        files:Add(main)
        results:Add(0, "false")
        results:Add(1, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastFieldIntObjDest 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastFieldIntObjDest.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastFieldIntObjSource 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastFieldIntObjSource.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastFieldIntObjSourceDest 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastFieldIntObjSourceDest.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastFieldObjIntDest 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastFieldObjIntDest.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastFieldObjIntSource 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastFieldObjIntSource.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastFieldObjIntSourceDest 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastFieldObjIntSourceDest.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastLocalVarIntObj 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastLocalVarIntObj.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastLocalVarObjInt 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastLocalVarObjInt.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastParamIntObj 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastParamIntObj.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastParamObjInt 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastParamObjInt.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CompareBugTest
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CompareBugTest.quorum")
        files:Add(main)
        results:Add(0, "a")
        results:Add(1, "0")
        results:Add(2, "Equal")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBoolObjBoolObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBoolObjBoolObj.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBoolObjBoolean
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBoolObjBoolean.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBoolObjObject
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBoolObjObject.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBoolObjUndefined
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBoolObjUndefined.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanBoolObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanBoolObj.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanBoolean
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanBoolean.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanObject
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanObject.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanText.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntObjIntObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntObjIntObj.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntObjInteger
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntObjInteger.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntObjObject
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntObjObject.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntObjUndefined
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntObjUndefined.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerIntObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerIntObj.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerInteger
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerInteger.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerNumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerNumber.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerObject
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerObject.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerText.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumObjNumObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumObjNumObj.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumObjNumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumObjNumber.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumObjObject
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumObjObject.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumObjUndefined
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumObjUndefined.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberInteger
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberInteger.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberNumObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberNumObj.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberNumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberNumber.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberObject
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberObject.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberText.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectBoolObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectBoolObj.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectBoolean
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectBoolean.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectIntObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectIntObj.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectInteger
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectInteger.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectNumObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectNumObj.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectNumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectNumber.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectObject
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectObject.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectText.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectTextObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectTextObj.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectUndefined
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectUndefined.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextBoolean
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextBoolean.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextInteger 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextInteger.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextNumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextNumber.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextObject
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextObject.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextText.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextTextObj 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextTextObj.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextUndefined
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextUndefined.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextObjObject
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextObjObject.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextObjText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextObjText.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextObjTextObj 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextObjTextObj.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextObjUndefined
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextObjUndefined.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBoolObjBoolObjField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBoolObjBoolObjField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBoolObjBooleanField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBoolObjBooleanField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBoolObjObjectField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBoolObjObjectField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBoolObjUndefinedField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBoolObjUndefinedField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanBoolObjField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanBoolObjField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanBooleanField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanBooleanField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanObjectField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanObjectField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanTextField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanTextField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntObjIntObjField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntObjIntObjField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntObjIntegerField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntObjIntegerField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntObjObjectField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntObjObjectField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntObjUndefinedField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntObjUndefinedField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerIntObjField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerIntObjField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerIntegerField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerIntegerField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerNumberField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerNumberField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerObjectField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerObjectField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerTextField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerTextField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumObjNumObjField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumObjNumObjField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumObjNumberField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumObjNumberField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumObjObjectField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumObjObjectField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumObjUndefinedField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumObjUndefinedField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberIntegerField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberIntegerField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberNumObjField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberNumObjField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberNumberField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberNumberField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberObjectField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberObjectField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberTextField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberTextField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectBoolObjField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectBoolObjField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectBooleanField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectBooleanField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectIntObjField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectIntObjField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectIntegerField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectIntegerField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectNumObjField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectNumObjField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectNumberField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectNumberField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectObjectField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectObjectField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectTextField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectTextField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectTextObjField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectTextObjField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignObjectUndefinedField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignObjectUndefinedField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextBooleanField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextBooleanField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextIntegerField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextIntegerField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextNumberField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextNumberField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextObjectField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextObjectField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextTextField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextTextField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextTextObjField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextTextObjField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextUndefinedField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextUndefinedField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextObjObjectField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextObjObjectField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextObjTextField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextObjTextField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextObjTextObjField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextObjTextObjField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextObjUndefinedField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextObjUndefinedField.quorum")
        files:Add(main)
        results:Add(0, "passed")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IndexOfPrefix 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IndexOfPrefix.quorum")
        files:Add(main)
        results:Add(0, "2")
        results:Add(1, "2")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IndexOfPrefixIndex 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IndexOfPrefixIndex.quorum")
        files:Add(main)
        results:Add(0, "3")
        results:Add(1, "3")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action InstanceTypeChildOfChild 
        Array<File> files
        Array<text> results
        File main
        File dependent1
        File dependent2
        File dependent3
        main:SetPath(path + "InstanceTypeChildOfChild.quorum")
        dependent1:SetPath(path + "A.quorum")
        dependent2:SetPath(path + "B.quorum")
        dependent3:SetPath(path + "C.quorum")
        files:Add(main)
        files:Add(dependent1)
        files:Add(dependent2)
        files:Add(dependent3)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action InstanceTypeCurrent
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "InstanceTypeCurrent.quorum")
        dependent1:SetPath(path + "A.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action InstanceTypeDirectChild
        Array<File> files
        Array<text> results
        File main
        File dependent1
        File dependent2
        main:SetPath(path + "InstanceTypeDirectChild.quorum")
        dependent1:SetPath(path + "A.quorum")
        dependent2:SetPath(path + "B.quorum")
        files:Add(main)
        files:Add(dependent1)
        files:Add(dependent2)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action InstanceTypeDirectParent
        Array<File> files
        Array<text> results
        File main
        File dependent1
        File dependent2
        File dependent3
        main:SetPath(path + "InstanceTypeDirectParent.quorum")
        dependent1:SetPath(path + "A.quorum")
        dependent2:SetPath(path + "B.quorum")
        dependent3:SetPath(path + "C.quorum")
        files:Add(main)
        files:Add(dependent1)
        files:Add(dependent2)
        files:Add(dependent3)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action InstanceTypeObject
        Array<File> files
        Array<text> results
        File main
        File dependent1
        File dependent2
        File dependent3
        main:SetPath(path + "InstanceTypeObject.quorum")
        dependent1:SetPath(path + "A.quorum")
        dependent2:SetPath(path + "B.quorum")
        dependent3:SetPath(path + "C.quorum")
        files:Add(main)
        files:Add(dependent1)
        files:Add(dependent2)
        files:Add(dependent3)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action InstanceTypeParentOfParent
        Array<File> files
        Array<text> results
        File main
        File dependent1
        File dependent2
        File dependent3
        main:SetPath(path + "InstanceTypeParentOfParent.quorum")
        dependent1:SetPath(path + "A.quorum")
        dependent1:SetPath(path + "B.quorum")
        dependent1:SetPath(path + "C.quorum")
        files:Add(main)
        files:Add(dependent1)
        files:Add(dependent2)
        files:Add(dependent3)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerBitCount
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerBitCount.quorum")
        files:Add(main)
        results:Add(0, "7")
        results:Add(1, "7")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerCompare
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerCompare.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerEquals
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerEquals.quorum")
        files:Add(main)
        results:Add(0, "false")
        results:Add(1, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerGetBinary
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerGetBinary.quorum")
        files:Add(main)
        results:Add(0, "101111101")
        results:Add(1, "101111101")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerGetOctal
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerGetOctal.quorum")
        files:Add(main)
        results:Add(0, "575")
        results:Add(1, "575")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerGetText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerGetText.quorum")
        files:Add(main)
        results:Add(0, "5")
        results:Add(1, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerHighestOneBit
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerHighestOneBit.quorum")
        files:Add(main)
        results:Add(0, "256")
        results:Add(1, "256")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerLeadingZeros
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerLeadingZeros.quorum")
        files:Add(main)
        results:Add(0, "23")
        results:Add(1, "23")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerLowestOneBit
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerLowestOneBit.quorum")
        files:Add(main)
        results:Add(0, "1")
        results:Add(1, "1")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerReverse
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerReverse.quorum")
        files:Add(main)
        results:Add(0, "-1098907648")
        results:Add(1, "-1098907648")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerRotateLeft
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerRotateLeft.quorum")
        files:Add(main)
        results:Add(0, "1524")
        results:Add(1, "1524")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerRotateRight
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerRotateRight.quorum")
        files:Add(main)
        results:Add(0, "1073741919")
        results:Add(1, "1073741919")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerTrailingZeros
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerTrailingZeros.quorum")
        files:Add(main)
        results:Add(0, "0")
        results:Add(1, "0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action NumberCompare
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "NumberCompare.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action NumberEquals
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "NumberEquals.quorum")
        files:Add(main)
        results:Add(0, "false")
        results:Add(1, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action NumberGetHex
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "NumberGetHex.quorum")
        files:Add(main)
        results:Add(0, "0x1.4cccccccccccdp2")
        results:Add(1, "0x1.4cccccccccccdp2")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action NumberGetInteger
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "NumberGetInteger.quorum")
        files:Add(main)
        results:Add(0, "5")
        results:Add(1, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action NumberGetText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "NumberGetText.quorum")
        files:Add(main)
        results:Add(0, "5.2")
        results:Add(1, "5.2")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action NumberIsInfinite
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "NumberIsInfinite.quorum")
        files:Add(main)
        results:Add(0, "false")
        results:Add(1, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action NumberIsNotANumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "NumberIsNotANumber.quorum")
        files:Add(main)
        results:Add(0, "false")
        results:Add(1, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ReturningIntegerInPlaceOfNumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ReturningIntegerInPlaceOfNumber.quorum")
        files:Add(main)
        results:Add(0, "4.0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextAppend
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextAppend.quorum")
        files:Add(main)
        results:Add(0, "hello5")
        results:Add(1, "hello5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextCompare
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextCompare.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextContains
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextContains.quorum")
        files:Add(main)
        results:Add(0, "true")
        results:Add(1, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextEndsWith
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextEndsWith.quorum")
        files:Add(main)
        results:Add(0, "true")
        results:Add(1, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextEquals
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextEquals.quorum")
        files:Add(main)
        results:Add(0, "false")
        results:Add(1, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextEqualsIgnoringCase
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextEqualsIgnoringCase.quorum")
        files:Add(main)
        results:Add(0, "true")
        results:Add(1, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextGetCharacter
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextGetCharacter.quorum")
        files:Add(main)
        results:Add(0, "o")
        results:Add(1, "o")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextGetLength
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextGetLength.quorum")
        files:Add(main)
        results:Add(0, "5")
        results:Add(1, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextGetSubtext
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextGetSubtext.quorum")
        files:Add(main)
        results:Add(0, "llo")
        results:Add(1, "llo")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextGetSubtextWithEnd
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextGetSubtextWithEnd.quorum")
        files:Add(main)
        results:Add(0, "lo")
        results:Add(1, "lo")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextIsEmpty
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextIsEmpty.quorum")
        files:Add(main)
        results:Add(0, "true")
        results:Add(1, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextReplace
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextReplace.quorum")
        files:Add(main)
        results:Add(0, "help")
        results:Add(1, "help")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextSetAndGetValue
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextSetAndGetValue.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextStartsWith
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextStartsWith.quorum")
        files:Add(main)
        results:Add(0, "he")
        results:Add(1, "he")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextToLowerCase
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextToLowerCase.quorum")
        files:Add(main)
        results:Add(0, "hello")
        results:Add(1, "hello")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextToUpperCase
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextToUpperCase.quorum")
        files:Add(main)
        results:Add(0, "HELLO")
        results:Add(1, "HELLO")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextTrim
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextTrim.quorum")
        files:Add(main)
        results:Add(0, "hello")
        results:Add(1, "hello")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceBoolean
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceBoolean.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceBooleanAnd
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceBooleanAnd.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceCast
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceCast.quorum")
        files:Add(main)
        results:Add(0, "3")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceInteger
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceInteger.quorum")
        files:Add(main)
        results:Add(0, "3")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceLiterals
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceLiterals.quorum")
        files:Add(main)
        results:Add(0, "1")
        results:Add(1, "1.9")
        results:Add(2, "true")
        results:Add(3, "hello")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceNestedFunctionCalls
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceNestedFunctionCalls.quorum")
        files:Add(main)
        results:Add(0, "4")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceNumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceNumber.quorum")
        files:Add(main)
        results:Add(0, "3.0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceReturnTypesInt
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceReturnTypesInt.quorum")
        files:Add(main)
        results:Add(0, "3")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceReturnTypesIntNum
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceReturnTypesIntNum.quorum")
        files:Add(main)
        results:Add(0, "3.4")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceReturnTypesNum
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceReturnTypesNum.quorum")
        files:Add(main)
        results:Add(0, "3.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceText.quorum")
        files:Add(main)
        results:Add(0, "hello world")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    //FAIL TESTS

    action ExpAssignBoolObjIntObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjIntObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjIntObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjIntObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjInteger
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjInteger.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjIntegerField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjIntegerField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjNumObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjNumObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjNumObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjNumObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjNumber
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjNumberField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjNumberField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjText
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjText.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjTextField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjTextField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjTextObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjTextObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjTextObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjTextObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBooleanIntObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanIntObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBooleanIntObjField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanIntObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBooleanInteger
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanInteger.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBooleanIntegerField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanIntegerField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBooleanNumObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanNumObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBooleanNumObjField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanNumObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBooleanNumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBooleanNumberField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanNumberField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBooleanTextObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanTextObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBooleanTextObjField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanTextObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBooleanUndefined
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanUndefined.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBooleanUndefinedField
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanUndefinedField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjBoolObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjBoolObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjBoolObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjBoolObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjBoolean
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjBooleanField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjBooleanField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjNumObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjNumObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjNumObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjNumObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjNumber
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjNumberField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjNumberField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjText
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjText.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjTextField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjTextField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjTextObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjTextObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjTextObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjTextObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntegerBoolObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntegerBoolObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntegerBoolObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntegerBoolObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end
    
    action ExpAssignIntegerNumObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntegerNumObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntegerNumObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntegerNumObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntegerBoolean
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntegerBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntegerBooleanField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntegerBooleanField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntegerTextObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntegerTextObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntegerTextObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntegerTextObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntegerUndefined
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntegerUndefined.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntegerUndefinedField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntegerUndefinedField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjBoolObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjBoolObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjBoolObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjBoolObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjBoolean
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjBooleanField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjBooleanField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjIntObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjIntObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjIntObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjIntObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjInteger
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjInteger.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjIntegerField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjIntegerField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjText
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjText.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjTextField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjTextField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjTextObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjTextObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjTextObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjTextObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumberBoolObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumberBoolObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumberBoolObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumberBoolObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumberBoolean
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumberBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumberBooleanField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumberBooleanField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumberIntObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumberIntObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumberIntObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumberIntObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumberTextObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumberTextObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumberTextObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumberTextObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumberUndefined
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumberUndefined.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumberUndefinedField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumberUndefinedField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextBoolObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextBoolObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextBoolObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextBoolObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextIntObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextIntObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextIntObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextIntObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextNumbObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextNumbObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextNumbObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextNumbObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjBoolObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjBoolObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjBoolObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjBoolObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjBoolean
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjBooleanField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjBooleanField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjIntObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjIntObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjIntObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjIntObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjInteger
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjInteger.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjIntegerField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjIntegerField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjNumObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjNumObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjNumObjField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjNumObjField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjNumber
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjNumberField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjNumberField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignUndefinedObject
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignUndefinedObject.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignUndefinedObjectField
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignUndefinedObjectField.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action InstanceTypeUnrelatedTypes
        Array<File> files
        File main
        main:SetPath(path + "InstanceTypeUnrelatedTypes.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action PrimitiveTextGetValue
        Array<File> files
        File main
        main:SetPath(path + "PrimitiveTextGetValue.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action PrimitiveTextSetValue
        Array<File> files
        File main
        main:SetPath(path + "PrimitiveTextSetValue.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action TypeInferenceDifferentLiteralTypes
        Array<File> files
        File main
        main:SetPath(path + "TypeInferenceDifferentLiteralTypes.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action TypeInferenceDifferentReturnTypes
        Array<File> files
        File main
        main:SetPath(path + "TypeInferenceDifferentReturnTypes.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action TypeInferenceDifferentTypes
        Array<File> files
        File main
        main:SetPath(path + "TypeInferenceDifferentTypes.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

end

