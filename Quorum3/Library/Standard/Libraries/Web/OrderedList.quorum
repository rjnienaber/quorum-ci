package Libraries.Web

use Libraries.Web.WebTag
use Libraries.Web.Attribute
use Libraries.Web.Attributes

/*
The OrderedList class represents HTML's (Hypertext Markup Language) ol tag which is
used to create an ordered list that can be ordered numerically or alphabetically.
You can find more information about this tag at: 
        <a href="http://www.w3schools.com/tags/tag_ol.asp">The ol attribute</a>.

Attribute: Example
use Libraries.Web.all

class Main
    action main
      WebPage page

      OrderedList ol

      ListItem li
      li:SetDescription("A")
      
      ol:Add(li)

      page:AddToBody(ol)
      output page:Generate()
    end
end
*/
class OrderedList is WebTag
    constant text reversed = "reversed"
    constant text startValue = "start"
    constant text type = "type"

    public constant text numericalType = "1"
    public constant text alphabeticalLowerCaseType = "a"
    public constant text alphabeticalUpperCaseType = "A"
    public constant text romanNumberLowerCaseType = "i"
    public constant text romanNumberUpperCaseType = "I"

    /*
        This action sets the start value of the ordered list.
        

        Attribute: Parameter value The start value of the list.

        Attribute: Example
        use Libraries.Web.Attribute
        use Libraries.Web.OrderedList
        OrderedList ol
        ol:SetStartValue("3")
        
    */
    action SetStartValue(text value)
        AddAttribute(startValue, value)
    end

    /*
        This action gets the start value of the ordered list.
        

        Attribute: Returns The start value of the list.

        Attribute: Example
        use Libraries.Web.Attribute
        use Libraries.Web.OrderedList
        OrderedList ol
        ol:SetStartValue("3")
        Attribute startVal = ol:GetStartValue()
        
    */
    action GetStartValue returns Attribute
        return me:GetAttribute(startValue)
    end

    /*
        This action sets the type of marker on the ordered list(e.g. 1, A, a, I, i)
        

        Attribute: Parameter value The marker of the list.

        Attribute: Example
        use Libraries.Web.Attribute
        use Libraries.Web.OrderedList
        OrderedList ol
        ol:SetType("A")
        
    */
    action SetType(text value)
        AddAttribute(type, value)
    end

    /*
        This action gets the type of marker on the ordered list(e.g. 1, A, a, I, i)
        

        Attribute: Returns The marker of the list.

        Attribute: Example
        use Libraries.Web.Attribute
        use Libraries.Web.OrderedList
        OrderedList ol
        ol:SetType("A")
        Attribute type = ol:GetType()
        
    */
    action GetType returns Attribute
        return me:GetAttribute(type)
    end

    /*
        This action sets the ordered list to descending order when true.
        

        Attribute: Parameter value True for descending order false for assending order.

        Attribute: Example
        use Libraries.Web.Attribute
        use Libraries.Web.OrderedList
        OrderedList ol
        ol:SetReversed(true)
        
    */
    action SetReversed(boolean value)
        if value
            AddAttribute(reversed, reversed)
        else
            RemoveAttribute(reversed)
        end
    end

    /*
        This action gets wether the ordered list is in descending order or not.
        

        Attribute: Returns True for descending order false for assending order.

        Attribute: Example
        use Libraries.Web.Attribute
        use Libraries.Web.OrderedList
        OrderedList ol
        ol:SetReversed(true)
        boolean isDescending = ol:GetReversed()
        
    */
    action GetReversed returns boolean
        return me:HasAttribute(reversed)
    end

    action Generate returns text
        text result = "<ol " 
        Attributes attributes = parent:WebTag:GetAttributes()
        attributeText = attributes:Generate()
        result = result + attributeText + ">"
        result = result + me:GenerateNestedTags()
        result = result + GetDescription() + "</ol>"
        return result
    end
end