package Libraries.Web
use Libraries.Web.AttributeAccepter
use Libraries.Web.Attribute
use Libraries.Web.Attributes
/*
The GlobalAttributeAccepter class is designed as a helper to ease adding and removing
attributes from particular WebTag objects. While there is 
no harm in creating an object of this type, it is used most commonly by 
sub-classes that need to use attributes. The example for this class shows how to
subclass the GlobalAttributeAccepter class.

Attribute: Example

use Libraries.Web.GlobalAttributeAccepter

class WebTag is GlobalAttributeAccepter, WebGenerator
    action Generate returns text
        text result = "<button " 
        Attributes attributes = parent:WebTag:GetAttributes()
        attributeText = attributes:Generate()
        result = result + attributeText + ">"
        result = result + me:GenerateNestedTags()
        result = result + GetDescription() + "</button>"
        return result
    end
end
*/
class GlobalAttributeAccepter is AttributeAccepter
    constant text accessKey = "accessKey"
    constant text classAttribute = "class"
    constant text contentEditable = "contenteditable"
    constant text contextMenu = "contextmenu"
    constant text textDirection = "dir"
    constant text draggable = "draggable"
    constant text dropZone = "dropzone"
    constant text hidden = "hidden"
    constant text identifier = "id"
    constant text language = "lang"
    constant text spellcheck = "spellcheck"
    constant text style = "style"
    constant text tabIndex = "tabindex"
    constant text title = "title"

    /*
        Returns the AccessKey attribute. Specifies a shortcut key for the web element.
        
        Attribute: Returns The current AccessKey attribute.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        Attribute attribute = accept:GetAccessKey()
    */
    action GetAccessKey returns Attribute
        Attributes attributes = parent:AttributeAccepter:GetAttributes()
        return attributes:GetAttribute(accessKey)
    end

    /*
        Returns the ClassAttribute attribute. 
        
        Attribute: Returns The current ClassAttribute attribute.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        Attribute attribute = accept:GetClassAttribute()
    */
    action GetClassAttribute returns Attribute
        Attributes attributes = parent:AttributeAccepter:GetAttributes()
        return attributes:GetAttribute(classAttribute)
    end

    /*
        Returns the ContentEditable attribute. 
        
        Attribute: Returns The current ContentEditable attribute.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        Attribute attribute = accept:GetContentEditable()
    */
    action GetContentEditable returns Attribute
        Attributes attributes = parent:AttributeAccepter:GetAttributes()
        return attributes:GetAttribute(contentEditable)
    end

    /*
        Returns the ContextMenu attribute. 
        
        Attribute: Returns The current ContextMenu attribute.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        Attribute attribute = accept:GetContextMenu()
    */
    action GetContextMenu returns Attribute
        Attributes attributes = parent:AttributeAccepter:GetAttributes()
        return attributes:GetAttribute(contextMenu)
    end

    /*
        Returns the TextDirection attribute. 
        
        Attribute: Returns The current TextDirection attribute.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        Attribute attribute = accept:GetTextDirection()
    */
    action GetTextDirection returns Attribute
        Attributes attributes = parent:AttributeAccepter:GetAttributes()
        return attributes:GetAttribute(textDirection)
    end

    /*
        Returns the Draggable attribute. 
        
        Attribute: Returns The current Draggable attribute.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        Attribute attribute = accept:GetDraggable()
    */
    action GetDraggable returns Attribute
        Attributes attributes = parent:AttributeAccepter:GetAttributes()
        return attributes:GetAttribute(draggable)
    end

    /*
        Returns the DropZone attribute. 
        
        Attribute: Returns The current DropZone attribute.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        Attribute attribute = accept:GetDropZone()
    */
    action GetDropZone returns Attribute
        Attributes attributes = parent:AttributeAccepter:GetAttributes()
        return attributes:GetAttribute(dropZone)
    end

    /*
        Returns the Hidden attribute. 
        
        Attribute: Returns The current Hidden attribute.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        Attribute attribute = accept:GetHidden()
    */
    action GetHidden returns Attribute
        Attributes attributes = parent:AttributeAccepter:GetAttributes()
        return attributes:GetAttribute(hidden)
    end

    /*
        Returns the Identifier attribute. 
        
        Attribute: Returns The current Identifier attribute.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        Attribute attribute = accept:GetIdentifier()
    */
    action GetIdentifier returns Attribute
        Attributes attributes = parent:AttributeAccepter:GetAttributes()
        return attributes:GetAttribute(identifier)
    end

    /*
        Returns the Language attribute. 
        
        Attribute: Returns The current Language attribute.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        Attribute attribute = accept:GetLanguage()
    */
    action GetLanguage returns Attribute
        Attributes attributes = parent:AttributeAccepter:GetAttributes()
        return attributes:GetAttribute(language)
    end

    /*
        Returns the Spellcheck attribute. 
        
        Attribute: Returns The current Spellcheck attribute.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        Attribute attribute = accept:GetSpellcheck()
    */
    action GetSpellcheck returns Attribute
        Attributes attributes = parent:AttributeAccepter:GetAttributes()
        return attributes:GetAttribute(spellcheck)
    end

    /*
        Returns the Style attribute. 
        
        Attribute: Returns The current Style attribute.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        Attribute attribute = accept:GetStyle()
    */
    action GetStyle returns Attribute
        Attributes attributes = parent:AttributeAccepter:GetAttributes()
        return attributes:GetAttribute(style)
    end

    /*
        Returns the TabIndex attribute. 
        
        Attribute: Returns The current TabIndex attribute.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        Attribute attribute = accept:GetTabIndex()
    */
    action GetTabIndex returns Attribute
        Attributes attributes = parent:AttributeAccepter:GetAttributes()
        return attributes:GetAttribute(tabIndex)
    end

    /*
        Returns the Title attribute. 
        
        Attribute: Returns The current Title attribute.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        Attribute attribute = accept:GetTitle()
    */
    action GetTitle returns Attribute
        Attributes attributes = parent:AttributeAccepter:GetAttributes()
        return attributes:GetAttribute(title)
    end

    /*
        Sets the AccessKey attribute. Specifies a shortcut key for the web element.
        
        Attribute: Parameter value The current AccessKey.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        accept:SetAccessKey("z")
    */
    action SetAccessKey(text value)
        AddAttribute(accessKey, value)
    end

    /*
        Sets the ClassAttribute attribute. Specifies a class name for the element.
        
        Attribute: Parameter value The current ClassAttribute.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        accept:SetClassAttribute("myClass")
    */
    action SetClassAttribute(text value)
        AddAttribute(classAttribute, value)
    end

    /*
        Sets the ContentEditable attribute. Specifies wether content in an
        element is editable.

        Attribute: Parameter value The current ContentEditable.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        accept:SetContentEditable("true")
    */
    action SetContentEditable(text value)
        AddAttribute(contentEditable, value)
    end

    /*
        Sets the ContextMenu attribute. Specifies a context menu that contains the
        element.
        
        Attribute: Parameter value The current ContextMenu.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        accept:SetContextMenu("parentmenu")
    */
    action SetContextMenu(text value)
        AddAttribute(contextMenu, value)
    end

    /*
        Sets the TextDirection attribute. Specifies a direction for the text to
        be written. For example, "ltr" is left-to-right.
        
        Attribute: Parameter value The current TextDirection.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        accept:SetTextDirection("rtl")
    */
    action SetTextDirection(text value)
        AddAttribute(textDirection, value)
    end

    /*
        Sets the Draggable attribute. Specifies wether an element is draggable or not.
        
        Attribute: Parameter value The current Draggable.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        accept:SetDraggable(true)
    */
    action SetDraggable(boolean value)
        AddAttribute(draggable, "" + value)
    end

    /*
        Sets the DropZone attribute. This element specifies what happens 
        when an element is dropped on a web page. The three valid values 
        are copy, move, and link.
        
        Attribute: Parameter value The current DropZone.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        accept:SetDropZone("move")
    */
    action SetDropZone(text value)
        AddAttribute(dropZone, value)
    end

    /*
        Sets the AccessKey attribute. Specifies wether an element is hidden or not.
        
        Attribute: Parameter value To true to hide element and false to make it visible.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        accept:SetHidden(false)
    */
    action SetHidden(boolean value)
        AddAttribute(hidden, "" + value)
    end

    /*
        Sets the Identifier attribute. Specifies a unique name for the element.
        
        Attribute: Parameter value The current Identifier.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        accept:SetIdentifier("myElement")
    */
    action SetIdentifier(text value)
        AddAttribute(identifier, value)
    end

    /*
        Creates and sets an attribute for language. As these codes are
        esoteric in the standard on the web (HTML), we recommend using the
        LanguageCode class to help.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.LanguageCode
        use Libraries.Web.Link

        LanguageCode code
        //use any WebItem, in this case a link
        Link link
        link:SetLanguage(code:english)
    */
    action SetLanguage(text value)
        AddAttribute(language, value)
    end

    /*
        Sets the Spellcheck attribute. Specifies wether spellcheck is on or off.
        
        Attribute: Parameter value The current Spellcheck.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        accept:SetSpellcheck(true)
    */
    action SetSpellcheck(boolean value)
        AddAttribute(spellcheck, "" + value)
    end

    /*
        Sets the Style attribute. Specifies inline css formatting for an element.
        
        Attribute: Parameter value The current Style.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        accept:SetStyle("color:orange")
    */
    action SetStyle(text value)
        AddAttribute(style, value)
    end

    /*
        Sets the TabIndex attribute. Specifies a tab order for elements.
        
        Attribute: Parameter value The current TabIndex.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        accept:SetTabIndex("0")
    */
    action SetTabIndex(text value)
        AddAttribute(tabIndex, value)
    end

    /*
        Sets the Title attribute. Specifies title information for the web element.
        
        Attribute: Parameter value The current Title.

        Attribute: Example

        use Libraries.Web.GlobalAttributeAccepter
        use Libraries.Web.Attribute

        GlobalAttributeAccepter accept
        accept:SetTitle("MyTitle")
    */
    action SetTitle(text value)
        AddAttribute(title, value)
    end
end