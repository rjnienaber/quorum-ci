package Libraries.Web

use Libraries.Web.WebTag
use Libraries.Web.Attribute
use Libraries.Web.Attributes

/*
The MetaData class represents HTML's (Hypertext Markup Language) meta tag which 
is used to store data about the webpage that is not displayed. An example might be
the author name. 
You can find more information about this tag at: 
<a href="http://www.w3schools.com/tags/tag_meta.asp">The meta attribute</a>.

Attribute: Example
use Libraries.Web.All
class Main
   action main
      WebPage page
      
      WebPageHeader header
      MetaData meta
      meta:SetContent("Andreas Stefik")
      header:Add(meta)

      page:AddToBody(header)
      output page:Generate()
   end
end
*/
class MetaData is WebTag
    constant text characterSet = "charset"
    constant text content = "content"
    constant text headerInformation = "http-equiv"
    constant text name = "name"

    public constant text encodingUnicode = "UTF-8"
    public constant text encodingLatin = "ISO-8859-1"

    /*
        This action gets the current HTML encoding for the document.

        Attribute: Returns The HTML encoding in the meta data. 

        Attribute: Example
        use Libraries.Web.MetaData
        use Libraries.Web.Attribute

        MetaData md
        Attribute charSet = md:GetCharacterSet()
        
    */
    action GetCharacterSet returns Attribute
        return me:GetAttribute(characterSet)
    end

    /*
        This action gets the HTML http-equiv or name stored in the meta data.

        Attribute: Returns The name stored in the meta data. 

        Attribute: Example
        use Libraries.Web.MetaData
        use Libraries.Web.Attribute

        MetaData md
        Attribute charSet = md:GetContent()
        
    */
    action GetContent returns Attribute
        return me:GetAttribute(content)
    end

    /*
        This action gets the current HTML http-equiv for the document.

        Attribute: Returns The HTML http-equiv in the meta data. 

        Attribute: Example
        use Libraries.Web.MetaData
        use Libraries.Web.Attribute

        MetaData md
        Attribute charSet = md:GetHeaderInformation()
        
    */
    action GetHeaderInformation returns Attribute
        return me:GetAttribute(headerInformation)
    end

    /*
        This action gets the current name for the document.

        Attribute: Returns The name in the meta data. 

        Attribute: Example
        use Libraries.Web.MetaData
        use Libraries.Web.Attribute

        MetaData md
        Attribute charSet = md:GetName()
        
    */
    action GetName returns Attribute
        return me:GetAttribute(name)
    end

    /*
        This action sets the current HTML encoding for the document. Some commont
        values are "UTF-8"(Unicode) and "ISO-8859-1"(latin alphabet).

        Attribute: Parameter value The HTML encoding. 

        Attribute: Example
        use Libraries.Web.MetaData

        MetaData md
        md:SetCharacterSet("UTF-8")
        
    */
    action SetCharacterSet(text value)
        AddAttribute(characterSet, value)
    end

    /*
        This action sets the content in the meta data. This data is labeled or named
        by setting the name in meta data.

        Attribute: Parameter value The content in the meta data tag. 

        Attribute: Example
        use Libraries.Web.MetaData

        MetaData md
        md:SetContent("Andreas Stefik")
        
    */
    action SetContent(text value)
        AddAttribute(content, value)
    end

    /*
        This action sets the contents type value. Valid values include: content-type,
        default-style, and refresh

        Attribute: Parameter value The content information type. 

        Attribute: Example
        use Libraries.Web.MetaData

        MetaData md
        md:SetHeaderInformation("refresh")
        
    */
    action SetHeaderInformation(text value)
        AddAttribute(headerInformation, value)
    end

    /*
        This action sets the name of the content. Possible values include: application-name, 
        author, description, generator, and keywords.

        Attribute: Parameter value The name. 

        Attribute: Example
        use Libraries.Web.MetaData

        MetaData md
        md:SetName("author")
        
    */
    action SetName(text value)
        AddAttribute(name, value)
    end

    action Generate returns text
        text result = "<meta " 
        Attributes attributes = parent:WebTag:GetAttributes()
        attributeText = attributes:Generate()
        result = result + attributeText + ">"
        result = result + GetDescription()
        return result
    end
end