package Libraries.Compute

/*
The BitwiseOperations class provides a way for a programmer to conduct 
bitwise operations on integer values. Common operations include bitwise and,
bitwise or, shift operators, exclusive or, and negation.

While these operators are provided for convenience, it should be noted that
conducting bitwise operations in Quorum is slightly slower than conducting
similar operations in other programming languages, due to the fact that such
operations are conducted as system functions here. This makes the meaning
of the calls more obvious than traditional, but makes them pass through the system
plugin architecture, which makes several function calls.

Attribute: Example

use Libraries.Compute.BitwiseOperations
BitwiseOperations ops

integer left = 10
integer right = 25
integer result = ops:And(left, right)
*/
class BitwiseOperations 

    /*
    This action provides a bitwise and operation.

    Attribute: Example

    use Libraries.Compute.BitwiseOperations
    BitwiseOperations ops

    integer left = 10
    integer right = 25
    integer result = ops:And(left, right)
    */
    system action And(integer left, integer right) returns integer

    /*
    This action provides a bitwise or operation.

    Attribute: Example

    use Libraries.Compute.BitwiseOperations
    BitwiseOperations ops

    integer left = 10
    integer right = 25
    integer result = ops:Or(left, right)
    */
    system action Or(integer left, integer right) returns integer

    /*
    This action provides a bitwise exclusive or operation.

    Attribute: Example

    use Libraries.Compute.BitwiseOperations
    BitwiseOperations ops

    integer left = 10
    integer right = 25
    integer result = ops:ExclusiveOr(left, right)
    */
    system action ExclusiveOr(integer left, integer right) returns integer

    /*
    This action provides a bitwise negate operation.

    Attribute: Example

    use Libraries.Compute.BitwiseOperations
    BitwiseOperations ops

    integer value = 10
    integer result = ops:Negate(value)
    */
    system action Negate(integer value) returns integer

    /*
    This action provides a bitwise shift left operation.

    Attribute: Example

    use Libraries.Compute.BitwiseOperations
    BitwiseOperations ops

    integer value = 10
    integer amount = 3
    integer result = ops:ShiftLeft(value, amount)
    */
    system action ShiftLeft(integer value, integer amount) returns integer

    /*
    This action provides a bitwise shift right operation. This version of 
    the operation does not keep the sign bit on shift.

    Attribute: Example

    use Libraries.Compute.BitwiseOperations
    BitwiseOperations ops

    integer value = 10
    integer amount = 3
    integer result = ops:ShiftRight(value, amount)
    */
    system action ShiftRight(integer value, integer amount) returns integer

    /*
    This action provides a bitwise shift right operation. This version does
    keep the sign bit on shift.

    Attribute: Example

    use Libraries.Compute.BitwiseOperations
    BitwiseOperations ops

    integer value = 10
    integer amount = 3
    integer result = ops:ShiftRightKeepSign(value, amount)
    */
    system action ShiftRightKeepSign(integer value, integer amount) returns integer
end