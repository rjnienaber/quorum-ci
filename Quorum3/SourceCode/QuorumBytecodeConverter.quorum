package Libraries.Language.Compile.Translate

use Libraries.Language.Compile.Symbol.all
use Libraries.Containers.Blueprints.Iterator

class QuorumBytecodeConverter 

    /*
     * Converts a static key for a class into a full class name.
     * @param key
     * @return 
     */
    action ConvertStaticKeyToBytecodePath(text key) returns text
        if key:GetCharacter(0) = "."
            key = key:GetSubtext(1)
        end

        text result = "quorum/" + key:Replace(".", "/")
        return result
    end

    action ConvertClassNameToInterfaceName(text name) returns text
        return name + "$Interface"
    end

    action ConvertTypeToBytecodeSignature(Type type) returns text
        if type:IsBoolean()
            return "Z"
        elseif type:IsText()
            return "Ljava/lang/String;"
        elseif type:IsNumber()
            return "D"
        elseif type:IsInteger()
            return "I"
        elseif type:IsVoid()
            return "V"
        else //it is an object, so return its interface type
            return "L" + ConvertStaticKeyToBytecodePath(type:GetStaticKey()) + "$Interface;"
        end
    end

    action ConvertActionToBytecodeParameterSignature(Action method) returns text
        text parameters = "("
        Iterator<Variable> it = method:GetParameterIterator()
        repeat while it:HasNext()
            Variable param = it:Next()
            Type type = param:GetType()
            parameters = parameters + ConvertTypeToBytecodeSignature(type)
        end
        parameters = parameters + ")"

        Type returnType = method:GetReturnType()
        text returnText = ConvertTypeToBytecodeSignature(returnType)

        return parameters + returnText
    end
end