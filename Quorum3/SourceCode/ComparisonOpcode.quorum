package Libraries.Language.Compile.Translate

use Libraries.Language.Compile.Symbol.Type
use Libraries.Language.Compile.Translate.JavaBytecodeOpcodes
use Libraries.Language.Compile.Symbol.Operation

class ComparisonOpcode is BinaryOpcode 
    JavaBytecodeOpcodes opcodes
    public boolean isTextCompare = false
    public integer textCompareValue = -2

    action Write
        VisitLineNumber()
        JavaBytecodeLabel jumpNotEqual
        JavaBytecodeLabel jumpPastLabel
        
        QuorumOpcode left = me:GetLeftOpcode()
        left:Write()
        WriteLeft()

        QuorumOpcode right = me:GetRightOpcode()
        right:Write()
        WriteRight()

        JavaBytecodeMethodWriter methodWriter = GetMethodWriter()
        if isTextCompare
            methodWriter:VisitMethodInvoke(opcodes:GetInvokeVirtual(), "java/lang/String", "compareTo", "(Ljava/lang/String;)I", false)
        end

        boolean isInIf = me:GetIsIfExpression()
        
        if not isInIf
            methodWriter:VisitJump(GetJavaOpcode(), jumpNotEqual)
            methodWriter:VisitConstant(1)
            methodWriter:VisitJump(opcodes:GetGoto(), jumpPastLabel)
            methodWriter:VisitLabel(jumpNotEqual)
            methodWriter:VisitConstant(0)
            methodWriter:VisitLabel(jumpPastLabel)
        end
    end

    action WriteLeft
        integer op = GetJavaLeftOpcode()
        if op not= -1
            JavaBytecodeMethodWriter methodWriter = GetMethodWriter()
            methodWriter:VisitInstruction(op)
            //if there is a second one, do that as well
            integer op2 = GetJavaLeftOpcode2()
            if op2 not= -1
                methodWriter:VisitInstruction(op2)
            end
        end
    end

    action WriteRight
        integer op = GetJavaRightOpcode()
        if op not= -1
            JavaBytecodeMethodWriter methodWriter = GetMethodWriter()
            methodWriter:VisitInstruction(op)
            //if there is a second one, do that as well
            integer op2 = GetJavaRightOpcode2()
            if op2 not= -1
                methodWriter:VisitInstruction(op2)
            end
        end
    end
    
    action GetTemplateCopy returns QuorumOpcode
        ComparisonOpcode op
        op:SetJavaOpcode(GetJavaOpcode())
        op:SetJavaLeftOpcode(GetJavaLeftOpcode())
        op:SetJavaRightOpcode(GetJavaRightOpcode())
        op:SetJavaLeftOpcode2(GetJavaLeftOpcode2())
        op:SetJavaRightOpcode2(GetJavaRightOpcode2())
        op:isTextCompare = isTextCompare
        op:textCompareValue = textCompareValue

        Operation newOp
        Operation oldOp = me:GetOperation()
        newOp:SetOperation(oldOp:GetOperation())
        op:SetOperation(newOp)
        return op
    end
end