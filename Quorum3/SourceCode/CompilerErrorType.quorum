package Libraries.Language.Compile

use Libraries.Containers.HashTable

class CompilerErrorType
    constant text MISSING_VARIABLE_MESSAGE = "Cannot find symbol - variable"
    constant text EXPECTED_CLOSURE_MESSAGE = "Expected closure"
    constant text MISSING_RETURN_MESSAGE = "Missing - return"
    constant text MISSING_METHOD_MESSAGE = "Cannot find symbol - method" 
    constant text MISSING_MAIN_MESSAGE = "Missing main method"
    constant text INCOMPATIBLE_TYPES_MESSAGE = "Incompatible types"
    constant text IDENTIFIER_EXPECTED_MESSAGE = "Identifier expected"
    constant text MISSING_CLASS_MESSAGE = "Cannot find symbol - class"
    constant text MISSING_IF_MESSAGE = "Missing - if"
    constant text MISSING_THEN_MESSAGE = "Missing - then"
    constant text MISSING_PARENT_MESSAGE = "Cannot find symbol - parent"
    constant text MISSING_USE_MESSAGE = "Cannot find symbol - package" 
    constant text INVALID_OPERATOR_MESSAGE = "Invalid operator" 
    constant text UNREACHABLE_MESSAGE = "Unreachable statements" 
    constant text DUPLICATE_MESSAGE = "Already defined"  
    constant text EOF_MESSAGE = "End of file error"
    constant text INHERITANCE_CIRCULAR_MESSAGE = "Circular inheritance" 
    constant text INHERITANCE_NULL_MESSAGE = "Cannot inherit a from null"
    constant text INHERITANCE_MODIFIER_DOWNGRADE_MESSAGE = "Cannot override a private method" 
    constant text INHERITANCE_AMBIGUOUS_MESSAGE = "Ambiguous inheritance" 
    constant text INHERITANCE_MISSMATCHED_RETURN_MESSAGE = "Invalid overriding return type" 
    constant text METHOD_CALL_AMBIGUOUS_MESSAGE = "Ambigous method call" 
    constant text USE_AMBIGUOUS_MESSAGE = "Ambiguous used package" 
    constant text CLASS_DUPLICATE_MESSAGE = "Class already defined" 
    constant text IF_INVALID_EXPRESSION_MESSAGE = "Invalid if expression"  
    constant text MISMATCHED_TEMPLATES_MESSAGE = "Mismatched class template" 
    constant text INSTANTIATE_ABSTRACT_MESSAGE = "Cannot instantiate abstract class"
    constant text INSTANTIATE_THIS_MESSAGE = "Cannot instantiate 'me'" 
    constant text INSTANTIATE_GENERIC_MESSAGE = "Cannot instantiate generic object" 
    constant text INVALID_ERROR_MESSAGE = "Invalid error type" 
    constant text INVALID_RETURN_NOW_MESSAGE = "Invalid return now" 
    constant text METHOD_DUPLICATE_MESSAGE = "Method already defined"
    constant text REPEAT_TIMES_NON_INTEGER_MESSAGE = "Repeat times non-integer"
    constant text REPEAT_NON_BOOLEAN_MESSAGE = "Repeat non-boolean"
    constant text CONSTANT_REASSIGNMENT_MESSAGE = "invalid constant assignment"
    constant text OTHER_MESSAGE = "other" 
    constant text CONSTANT_INITIALIZED_MESSAGE = "constant not initialized" 
    constant text VARIABLE_INFERENCE_MESSAGE = "Cannot infer type"
    constant text INITIALIZED_OUT_OF_BOUNDS_MESSAGE = "Cannot initialize parent variable"
    constant text MISSING_FILE_MESSAGE = "Cannot find file"
    constant text FAILED_PREDICATE_MESSAGE = "semantic predicate failed"
    constant text INPUT_MISMATCH_MESSAGE = "input does not match expected token"
    constant text LEXER_NO_VIABLE_ALTERNATIVE_MESSAGE = "No viable alternative in lexer"
    constant text PARSER_NO_VIABLE_ALTERNATIVE_MESSAGE = "No viable alternative in parser"
    constant text PRIMITIVE_INVALID_ACTION_CALL_MESSAGE = "Cannot use SetValue or SetValueNative on primitive"
    constant text NO_RIGHT_HAND_SIDE_ON_NORMAL_ASSIGNMENT_MESSAGE = "For an assignment of a primitive with a declared type, a value is required"

    public constant integer MISSING_VARIABLE = 0
    public constant integer EXPECTED_CLOSURE = 1
    public constant integer MISSING_RETURN = 2
    public constant integer MISSING_METHOD = 3
    public constant integer MISSING_MAIN = 4
    public constant integer INCOMPATIBLE_TYPES = 5
    public constant integer IDENTIFIER_EXPECTED = 6
    public constant integer MISSING_CLASS = 7
    public constant integer MISSING_IF = 8
    public constant integer MISSING_THEN = 9
    public constant integer MISSING_PARENT = 10
    public constant integer MISSING_USE = 11
    public constant integer INVALID_OPERATOR = 12
    public constant integer UNREACHABLE = 13
    public constant integer DUPLICATE = 14 
    public constant integer EOF = 15
    public constant integer INHERITANCE_CIRCULAR = 16
    public constant integer INHERITANCE_NULL = 17
    public constant integer INHERITANCE_MODIFIER_DOWNGRADE = 18
    public constant integer INHERITANCE_AMBIGUOUS = 19
    public constant integer INHERITANCE_MISSMATCHED_RETURN = 20
    public constant integer METHOD_CALL_AMBIGUOUS = 21
    public constant integer USE_AMBIGUOUS = 22
    public constant integer CLASS_DUPLICATE = 23
    public constant integer IF_INVALID_EXPRESSION = 24
    public constant integer MISMATCHED_TEMPLATES = 25
    public constant integer INSTANTIATE_ABSTRACT = 26
    public constant integer INSTANTIATE_THIS = 27
    public constant integer INSTANTIATE_GENERIC = 28
    public constant integer INVALID_ERROR = 29
    public constant integer INVALID_RETURN_NOW = 30
    public constant integer METHOD_DUPLICATE = 31
    public constant integer REPEAT_TIMES_NON_INTEGER = 32
    public constant integer REPEAT_NON_BOOLEAN = 33
    public constant integer CONSTANT_REASSIGNMENT = 34
    public constant integer OTHER = 35
    public constant integer CONSTANT_INITIALIZED = 36
    public constant integer VARIABLE_INFERENCE = 37
    public constant integer INITIALIZED_OUT_OF_BOUNDS = 38
    public constant integer MISSING_FILE = 39
    public constant integer FAILED_PREDICATE = 40
    public constant integer INPUT_MISMATCH = 41
    public constant integer LEXER_NO_VIABLE_ALTERNATIVE = 42
    public constant integer PARSER_NO_VIABLE_ALTERNATIVE = 43
    public constant integer PRIMITIVE_INVALID_ACTION_CALL = 44
    public constant integer NO_RIGHT_HAND_SIDE_ON_NORMAL_ASSIGNMENT = 45

    HashTable<integer, text> messages
    integer currentType = -1

    on create
        messages:Add(MISSING_VARIABLE, MISSING_VARIABLE_MESSAGE)
        messages:Add(EXPECTED_CLOSURE, EXPECTED_CLOSURE_MESSAGE)
        messages:Add(MISSING_RETURN, MISSING_RETURN_MESSAGE)
        messages:Add(MISSING_METHOD, MISSING_METHOD_MESSAGE)
        messages:Add(MISSING_MAIN, MISSING_MAIN_MESSAGE)
        messages:Add(INCOMPATIBLE_TYPES, INCOMPATIBLE_TYPES_MESSAGE)
        messages:Add(IDENTIFIER_EXPECTED, IDENTIFIER_EXPECTED_MESSAGE)
        messages:Add(MISSING_CLASS, MISSING_CLASS_MESSAGE)
        messages:Add(MISSING_IF, MISSING_IF_MESSAGE)
        messages:Add(MISSING_THEN, MISSING_THEN_MESSAGE)
        messages:Add(MISSING_PARENT, MISSING_PARENT_MESSAGE)
        messages:Add(MISSING_USE, MISSING_USE_MESSAGE)
        messages:Add(INVALID_OPERATOR, INVALID_OPERATOR_MESSAGE)
        messages:Add(UNREACHABLE, UNREACHABLE_MESSAGE)
        messages:Add(DUPLICATE, DUPLICATE_MESSAGE)
        messages:Add(EOF, EOF_MESSAGE)
        messages:Add(INHERITANCE_CIRCULAR, INHERITANCE_CIRCULAR_MESSAGE)
        messages:Add(INHERITANCE_NULL, INHERITANCE_NULL_MESSAGE)
        messages:Add(INHERITANCE_MODIFIER_DOWNGRADE, INHERITANCE_MODIFIER_DOWNGRADE_MESSAGE)
        messages:Add(INHERITANCE_AMBIGUOUS, INHERITANCE_AMBIGUOUS_MESSAGE)
        messages:Add(INHERITANCE_MISSMATCHED_RETURN, INHERITANCE_MISSMATCHED_RETURN_MESSAGE)
        messages:Add(METHOD_CALL_AMBIGUOUS, METHOD_CALL_AMBIGUOUS_MESSAGE)
        messages:Add(USE_AMBIGUOUS, USE_AMBIGUOUS_MESSAGE)
        messages:Add(CLASS_DUPLICATE, CLASS_DUPLICATE_MESSAGE)
        messages:Add(IF_INVALID_EXPRESSION, IF_INVALID_EXPRESSION_MESSAGE)
        messages:Add(MISMATCHED_TEMPLATES, MISMATCHED_TEMPLATES_MESSAGE)
        messages:Add(INSTANTIATE_ABSTRACT, INSTANTIATE_ABSTRACT_MESSAGE)
        messages:Add(INSTANTIATE_THIS, INSTANTIATE_THIS_MESSAGE)
        messages:Add(INSTANTIATE_GENERIC, INSTANTIATE_GENERIC_MESSAGE)
        messages:Add(INVALID_ERROR, INVALID_ERROR_MESSAGE)
        messages:Add(INVALID_RETURN_NOW, INVALID_RETURN_NOW_MESSAGE)
        messages:Add(METHOD_DUPLICATE, METHOD_DUPLICATE_MESSAGE)
        messages:Add(REPEAT_TIMES_NON_INTEGER, REPEAT_TIMES_NON_INTEGER_MESSAGE)
        messages:Add(REPEAT_NON_BOOLEAN, REPEAT_NON_BOOLEAN_MESSAGE)
        messages:Add(CONSTANT_REASSIGNMENT, CONSTANT_REASSIGNMENT_MESSAGE)
        messages:Add(OTHER, OTHER_MESSAGE)
        messages:Add(CONSTANT_INITIALIZED, CONSTANT_INITIALIZED_MESSAGE)
        messages:Add(VARIABLE_INFERENCE, VARIABLE_INFERENCE_MESSAGE)
        messages:Add(INITIALIZED_OUT_OF_BOUNDS, INITIALIZED_OUT_OF_BOUNDS_MESSAGE)
        messages:Add(MISSING_FILE, MISSING_FILE_MESSAGE)
        messages:Add(FAILED_PREDICATE, FAILED_PREDICATE_MESSAGE)
        messages:Add(INPUT_MISMATCH, INPUT_MISMATCH_MESSAGE)
        messages:Add(LEXER_NO_VIABLE_ALTERNATIVE, LEXER_NO_VIABLE_ALTERNATIVE_MESSAGE)
        messages:Add(PARSER_NO_VIABLE_ALTERNATIVE, PARSER_NO_VIABLE_ALTERNATIVE_MESSAGE)
        messages:Add(PRIMITIVE_INVALID_ACTION_CALL, PRIMITIVE_INVALID_ACTION_CALL_MESSAGE)
        messages:Add(NO_RIGHT_HAND_SIDE_ON_NORMAL_ASSIGNMENT, NO_RIGHT_HAND_SIDE_ON_NORMAL_ASSIGNMENT_MESSAGE)
    end

    action GetMessage() returns text
        text message = messages:GetValue(currentType) //fine if it is undefined
        return message
    end

    action GetCurrentType returns integer
        return currentType
    end

    action SetCurrentType(integer type)
        if type < MISSING_VARIABLE or type > NO_RIGHT_HAND_SIDE_ON_NORMAL_ASSIGNMENT
            alert("Compiler bug: Invalid CompilerErrorType")
        end

        currentType = type
    end

    action Copy returns CompilerErrorType
        CompilerErrorType type
        type:SetCurrentType(currentType)
        return type
    end
end