<?php include("../static/templates/pageheader.template.php"); ?>


<div class="hero-unit">
	<div class="hero-unit-container">
		<h1>Console Arguments available in Quorum</h1>
		<p>When we invoke Quorum through a command prompt (such as cmd.exe on windows, 
    or Terminal on Mac), we can optionally specify various parameters to make 
    Quorum compile programs.</p>
	</div>
</div>

<div class="content index-content">
<h2>Compiling a Program: A First Example</h2>
<p>
    Suppose we want to compile a program named HelloWorld.quorum, containing the following 
    code:
</p>
<p><pre class="code"><code>
say &quot;Hello world&quot;
</code></pre></p>
<p>
    To do this, we would invoke Quorum like so:
</p>
<p><pre class="code"><code>
quorum hello.quorum
</code></pre></p>
<p>By default, this will create a new file on disk named Default.jar, which contains
everything we need to execute the program we have created.</p>
<h2>Console Arguments</h2>
<p>Sometimes when we write computer code, we want to modify the way in which
the compiler for a programming language works, in order to obtain different kinds
of results or output. To do this we often pass "pass flags" to the compiler, essentially
extra words that tell the program what to do.</p>
<h3>-interpret</h3>
<p>
    This flag will cause the Quorum Virtual Machine to execute our code without 
    writing it to disk. If we 
    created a basic &quot;Hello World&quot; application and wanted to instantly 
    see the results, we might type:
</p>
<p><pre class="code"><code>
quorum -interpret HelloWorld.quorum
</code></pre></p>
<h3>-compile</h3>
<p>
    This flag will make Quorum compile our code into Java bytecode that can 
    then be executed. It is the default setting and can be used as so:
</p>
<p><pre class="code"><code>
quorum -compile HelloWorld.quorum
</code></pre></p>
<p>
    followed by
</p>
<p><pre class="code"><code>
java -jar ./Run/Default.jar
</code></pre></p>
<p>
    which will invoke the newly compiled program. One alternative to this 
    approach would to navigate in the command prompt to the distribute folder 
    first, then execute the program from there. We can do this with the following 
    commands:
</p>
<p><pre class="code"><code>
cd distribute
java -jar ./Default.jar
</code></pre></p>
<h3>-document</h3>
<p>
    This flag will cause Quorum to generate documentation for our code, in a 
    combination of hostable PHP code for the web and HTML. The code generated will
    include full documentation for all libraries passed to the compiler plus
    a set of wrapper web-pages for learning about Quorum. This command places the 
    documentation into a folder labeled &quot;Documentation.&quot;
</p>
<p><pre class="code"><code>
quorum -document HelloWorld.quorum
</code></pre></p>
<h3>-name {name}</h3>
<p>
    This flag tells Quorum what name to give to a newly compiled program. If, 
    for example, we wanted to compile a simple &quot;hello world&quot; program 
    and name the resulting program &quot;Hello,&quot; we would type
</p>
<p><pre class="code"><code>
quorum -name Hello HelloWorld.quorum
</code></pre></p>
<p>
    followed by
</p>
<p><pre class="code"><code>
java -jar ./Run/Hello.jar
</code></pre></p>
<h3>-help</h3>
<p>
    This flag will display help information on screen, similar to the 
    documentation listed in this wiki page.
</p>

<h3>-web</h3>
<p>
    Instead of compiling, this command causes Quorum to start a basic web 
 server, for testing web page generation libraries. To start the server,
 you must pass a valid executable file (e.g., a .jar generated by Quorum). 

</p>
<p><pre class="code"><code>
quorum -web default.jar
</code></pre></p>

<h3>-server</h3>
<p>
    Instead of compiling, this command causes Quorum to start a basic web 
 server, which accepts messages over a network (via what is called POST) with
 Quorum code embedded. The server will then execute the code it is passed and 
 return a message with the response (via a technology called JSON). By default, the
 -server mode has security enabled to prevent system damage from bad requests, however
 this can be turned off by adding the unsecure flag, so -server insecure.

</p>
<p><pre class="code"><code>
quorum -server
</code></pre></p>
</div>
<?php include("../static/templates/pagefooter.template.php"); ?>