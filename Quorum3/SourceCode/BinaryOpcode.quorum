package Libraries.Language.Compile.Translate

use Libraries.Language.Compile.Symbol.Type

class BinaryOpcode is QuorumOpcode
    QuorumOpcode left = undefined
    QuorumOpcode right = undefined
    JavaBytecodeMethodWriter methodWriter = undefined

    integer opcode = -1
    integer leftOpcode = -1
    integer rightOpcode = -1
    integer leftOpcode2 = -1
    integer rightOpcode2 = -1

    action GetJavaOpcode returns integer
        return opcode
    end

    action GetJavaLeftOpcode returns integer
        return leftOpcode
    end

    action GetJavaRightOpcode returns integer
        return rightOpcode
    end

    action GetJavaLeftOpcode2 returns integer
        return leftOpcode2
    end

    action GetJavaRightOpcode2 returns integer
        return rightOpcode2
    end

    action SetJavaOpcode(integer op)
        opcode = op
    end

    action SetJavaLeftOpcode(integer op)
        leftOpcode = op
    end

    action SetJavaRightOpcode(integer op)
        rightOpcode = op
    end

    action SetJavaLeftOpcode2(integer op)
        leftOpcode2 = op
    end

    action SetJavaRightOpcode2(integer op)
        rightOpcode2 = op
    end

    action GetMethodWriter returns JavaBytecodeMethodWriter
        return methodWriter
    end

    action SetMethodWriter(JavaBytecodeMethodWriter writer)
        methodWriter = writer
    end

    action GetLeftOpcode returns QuorumOpcode
        return left
    end

    action GetRightOpcode returns QuorumOpcode
        return right
    end

    action SetLeftOpcode(QuorumOpcode op)
        left = op
    end

    action SetRightOpcode(QuorumOpcode op)
        right = op
    end

    action Write
        left:Write()
        WriteLeft()
        right:Write()
        WriteRight()

        if opcode not= -1
            methodWriter:VisitInstruction(opcode)
        end
    end

    action WriteLeft
        if leftOpcode not= -1
            methodWriter:VisitInstruction(leftOpcode)
        end
    end

    action WriteRight
        if rightOpcode not= -1
            methodWriter:VisitInstruction(rightOpcode)
        end
    end

    action GetTemplateCopy returns QuorumOpcode
        BinaryOpcode op
        Type t = GetType()
        me:SetType(t:Copy())
        op:opcode = opcode
        op:leftOpcode = leftOpcode
        op:rightOpcode = rightOpcode
        return op
    end
end