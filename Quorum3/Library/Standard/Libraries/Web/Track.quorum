package Libraries.Web

use Libraries.Web.WebTag
use Libraries.Web.Attribute
use Libraries.Web.Attributes

/*
The Track class represents HTML's (Hypertext Markup Language) track tag which is
used to text tracks (subtitle or lyrics) to audio or video. This is currently 
not supported in any browser.
You can find more information about this tag at: 
        <a href="http://www.w3schools.com/tags/tag_track.asp">The track attribute</a>.

Attribute: Example
use Libraries.Web.all

class Main
    action main
      WebPage page

      Video video
      video:SetWidth("350")
      video:SetHeight("270")
      video:SetControlsVisible(true)

      Track track
      track:SetAddress("subtitles.vtt")

      video:Add(track)

      page:AddToBody(video)
      output page:Generate()
    end
end
*/
class Track is WebTag
    constant text default = "default"
    constant text kind = "kind"
    constant text label = "label"
    constant text source = "src"
    constant text sourceLangCode = "srclang"

    public constant text captionsKind = "captions"
    public constant text chaptersKind = "chapters"
    public constant text descriptionsKind = "descriptions"
    public constant text metadataKind = "metadata"
    public constant text subtitlesKind = "subtitles"

    /*
        This action sets this track as defualt, as long as the users preferences
        do not dictate an alternative.
        

        Attribute: Parameter isDefault Sets the track to be default if true.

        Attribute: Example
        use Libraries.Web.Track
        use Libraries.Web.Attribute

        Track track
        track:SetDefault(true)
        
    */
    action SetDefault(boolean isDefault)
        if isDefault
            AddAttribute(default, default)
        else
            RemoveAttribute(default)
        end
    end

    /*
        This action gets wether a track as defualt or not.
        

        Attribute: Returns True if the track is default and false if it is not.

        Attribute: Example
        use Libraries.Web.Track
        use Libraries.Web.Attribute

        Track track
        track:SetDefault(true)
        boolean default = track:GetDefault()
        
    */
    action GetDefault returns boolean
        return me:HasAttribute(default)
    end

    /*
        This action sets the kind of track. The track can be one of the follow:
        captions (closed captions suitable for deaf users), chapters(defines chapter titles), 
        descriptions(describes the video and is suitable for a blind or visually impaired user), 
        metadata (defines content for scripts and is not visible to the user), or 
        subtitles.
        

        Attribute: Parameter value The track type.

        Attribute: Example
        use Libraries.Web.Track
        use Libraries.Web.Attribute

        Track track
        track:SetKind("captions")
        
    */
    action SetKind(text value)
        AddAttribute(kind, value)
    end

    /*
        This action gets the kind of track. The track can be one of the follow:
        captions (closed captions suitable for deaf users), chapters(defines chapter titles), 
        descriptions(describes the video and is suitable for a blind or visually impaired user), 
        metadata (defines content for scripts and is not visible to the user), or 
        subtitles.
        

        Attribute: returns The type of track.

        Attribute: Example
        use Libraries.Web.Track
        use Libraries.Web.Attribute

        Track track
        track:SetKind("captions")
        Attribute trackType = track:GetKind()
        
    */
    action GetKind returns Attribute
        return me:GetAttribute(kind)
    end

    /*
        This action sets the title of the track.
        

        Attribute: Parameter value The track title.

        Attribute: Example
        use Libraries.Web.Track
        use Libraries.Web.Attribute

        Track track
        track:SetLabel("my title")
        
    */
    action SetLabel(text value)
        AddAttribute(label, value)
    end

    /*
        This action gets the title of the track.
        

        Attribute: Returns The track title.

        Attribute: Example
        use Libraries.Web.Track
        use Libraries.Web.Attribute

        Track track
        track:SetLabel("my title")
        Attribute label = track:GetLabel()
        
    */
    action GetLabel returns Attribute
        return me:GetAttribute(label)
    end

    /*
        This action sets the source or URL of the track.
        

        Attribute: Parameter value The URL or the location and name of the track file.

        Attribute: Example
        use Libraries.Web.Track
        use Libraries.Web.Attribute

        Track track
        track:SetAddress("myTrack.vtt")
        
    */
    action SetAddress(text value)
        AddAttribute(source, value)
    end

    /*
        This action gets the source or URL of the track.
        

        Attribute: Returns The URL or the location and name of the track file.

        Attribute: Example
        use Libraries.Web.Track
        use Libraries.Web.Attribute

        Track track
        track:SetAddress("myTrack.vtt")
        Attribute source = track:GetAddress()
        
    */
    action GetAddress returns Attribute
        return me:GetAttribute(source)
    end

    /*
        This action sets the language associated with the track. This is required
        if the track "kind" is subtitle.
        

        Attribute: Parameter value The track language.

        Attribute: Example
        use Libraries.Web.Track
        use Libraries.Web.Attribute

        Track track
        track:SetSourceLanguageCode("en")
        
    */
    action SetSourceLanguageCode(text value)
        AddAttribute(sourceLangCode, value)
    end

    /*
        This action sets the language associated with the track. This is required
        if the track "kind" is subtitle.
        

        Attribute: Returns The track language.

        Attribute: Example
        use Libraries.Web.Track
        use Libraries.Web.Attribute

        Track track
        track:SetSourceLanguageCode("en")
        Attribute language = track:GetSourceLanguageCode()
        
    */
    action GetSourceLanguageCode returns Attribute
        return me:GetAttribute(sourceLangCode)
    end

    action Generate returns text
        text result = "<track " 
        Attributes attributes = parent:WebTag:GetAttributes()
        attributeText = attributes:Generate()
        result = result + attributeText + ">"
        result = result + me:GenerateNestedTags()
        result = result + GetDescription() + "</track>"
        return result
    end
end