package Libraries.Web

use Libraries.Web.WebTag
use Libraries.Web.Attribute
use Libraries.Web.Attributes

/*
The Image class represents HTML's (Hypertext Markup Language) img tag which is
used to add an image to the page.
You can find more information about this tag at: 
        <a href="http://www.w3schools.com/tags/tag_img.asp">The img attribute</a>.

Attribute: Example
use Libraries.Web.All
class Main
   action main
      WebPage page
      
      Image image
      image:SetAddress("http://images.free-extras.com/pics/s/smile-1613.jpg")
      image:SetWidth("150")
      image:SetHeight("150")

      page:AddToBody(image)
      output page:Generate()
   end
end
*/
class Image is WebTag
    constant text alternate = "alt"
    constant text height = "height"
    constant text width = "width"
    constant text isMap = "ismap"
    constant text address = "src"
    constant text useMap = "usemap"

    /*
        This action gets the address attribute of the image. The address is
        the location of the linked webpage or document.

        Attribute: Returns The address of the link. 

        Attribute: Example
        use Libraries.Web.Image
        use Libraries.Web.Attribute

        Image image
        Attribute address = image:GetAddress()
        if address not= undefined
            text href = address:GetValue()
        end
    */
    action GetAddress returns Attribute
        return me:GetAttribute(address)
    end

    /*
        This action sets the address attribute of the image. The address is 
        the location of the linked webpage or document.

        Attribute: Parameter value The address of a webpage or document. 

        Attribute: Example
        use Libraries.Web.Image
        use Libraries.Web.Attribute

        Image image
        image:SetAddress("http://www.google.com")
        
    */
    action SetAddress(text value)
        AddAttribute(address, value)
    end

    /*
        This action gets the alternative text if the address attribute of the 
        image does not work. 

        Attribute: Returns The alternative text of the link. 

        Attribute: Example
        use Libraries.Web.Image
        use Libraries.Web.Attribute

        Image image
        Attribute altText = image:GetAlternate()
        if altText not= undefined
            text t = altText:GetValue()
        end
    */
    action GetAlternate returns Attribute
        return GetAttribute(alternate)
    end

    /*
        This action sets the alternative text if address attribute of the image 
        does not work.

        Attribute: Parameter value The alternative text for an image.

        Attribute: Example
        use Libraries.Web.Image
        use Libraries.Web.Attribute

        Image image
        image:SetAlternate("Image 1 did not load")
        
    */
    action SetAlternate(text value)
        AddAttribute(alternate, value)
    end

    /*
        This action gets the height attribute of the image.

        Attribute: Returns The height in pixels of the image. 

        Attribute: Example
        use Libraries.Web.Image
        use Libraries.Web.Attribute

        Image image
        Attribute heightInPixels = image:GetHeight()
        if heightInPixels not= undefined
            text height = heightInPixels:GetValue()
        end
    */
    action GetHeight returns Attribute
        return me:GetAttribute(height)
    end


    /*
        This action sets the height attribute of the image.

        Attribute: Parameter value The height in pixel to set to the image. 

        Attribute: Example
        use Libraries.Web.Image
        use Libraries.Web.Attribute

        Image image
        image:SetHeight("150")
        
    */
    action SetHeight(text value)
        AddAttribute(height, value)
    end

    /*
        This action gets the width attribute of the image.

        Attribute: Returns The width in pixels of the image. 

        Attribute: Example
        use Libraries.Web.Image
        use Libraries.Web.Attribute

        Image image
        Attribute widthInPixels = image:GetWidth()
        if widthInPixels not= undefined
            text width = widthInPixels:GetValue()
        end
    */
    action GetWidth returns Attribute
        return me:GetAttribute(width)
    end

    /*
        This action sets the width attribute of the image.

        Attribute: Parameter value The width in pixel to set to the image. 

        Attribute: Example
        use Libraries.Web.Image
        use Libraries.Web.Attribute

        Image image
        image:SetWidth("150")
        
    */
    action SetWidth(text value)
        AddAttribute(width, value)
    end

    /*
        This action returns true if the image will be used as a map.

        Attribute: Returns This returns true if image will be used as a map.

        Attribute: Example
        use Libraries.Web.All
        use Libraries.Web.Image
        use Libraries.Web.Attribute

        Image image
        boolean isMap = image:GetIsMap()
    */
    action GetIsMap returns boolean
        Attribute isGetMap = GetAttribute(isMap)
        if isGetMap not= undefined
            return GetAttributeValue(isMap) = isMap
        end
        return false
    end

    /*
        This action sets if an image will be used as a map.

        Attribute: Example
        use Libraries.Web.All
        use Libraries.Web.Image
        use Libraries.Web.Attribute

        Image image
        image:SetIsMap(true)
    */
    action SetIsMap(boolean value)
        if value
            AddAttribute(isMap, isMap)
        else
            RemoveAttribute(isMap)
        end
    end

    /*
        This action gets the useMap attribute of the image.

        Attribute: Returns The mapname to use for the image. 

        Attribute: Example
        use Libraries.Web.Image
        use Libraries.Web.Attribute

        Image image
        Attribute useMapName = image:GetUseMap()
        if useMapName not= undefined
            text mapName = useMapName:GetValue()
        end
    */
    action GetUseMap returns Attribute
        return me:GetAttribute(useMap)
    end

    /*
        This action sets the mapname for an image to use.

        Attribute: Example
        use Libraries.Web.All

        Image image
        ImageMap imageMap
        imageMap:SetName("smilemap")
        image:SetUseMap("smilemap")
    */
    action SetUseMap(text value)
        AddAttribute(useMap, value)
    end

    action Generate returns text
        text result = "<img "
        result = result + me:GenerateAttributes()
        result = result+ ">"
        return result
    end
end