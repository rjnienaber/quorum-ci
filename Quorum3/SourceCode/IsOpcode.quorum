package Libraries.Language.Compile.Translate

use Libraries.Language.Compile.Symbol.Type

class IsOpcode is QuorumOpcode
    QuorumOpcode opcode = undefined
    JavaBytecodeOpcodes opcodes
    Type castTo = undefined
    boolean isErrorCast = false

    action SetIsErrorCast(boolean isError)
        isErrorCast = isError
    end

    action IsErrorCast returns boolean
        return isErrorCast
    end

    action SetCastTo(Type type)
        castTo = type
    end

    action GetCastTo returns Type
        return castTo
    end

    action SetBytecodeWriteOffsetToAllChildren(integer offset)
        SetBytecodeWriteOffset(offset)
        if opcode not= undefined
            opcode:SetBytecodeWriteOffsetToAllChildren(offset)
        end
    end

    action SetMethodWriterToAllChildren(JavaBytecodeMethodWriter writer)
        SetMethodWriter(writer)
        if opcode not= undefined
            opcode:SetMethodWriterToAllChildren(writer)
        end
    end

    action GetOpcode returns QuorumOpcode
        return opcode
    end

    action SetOpcode(QuorumOpcode op)
        opcode = op
    end

    action Write
        VisitLineNumber()
        JavaBytecodeMethodWriter methodWriter = GetMethodWriter()
        Type type = opcode:GetType()
        opcode:Write()

        if isErrorCast
            methodWriter:VisitType(opcodes:GetInstanceOf(), castTo:ConvertTypeToBytecodeSignature())
        else
            methodWriter:VisitType(opcodes:GetInstanceOf(), castTo:ConvertTypeToBytecodeSignatureInterface())
        end
    end

    action WriteJavaScript returns text
        return ""
    end
    
    action GetTemplateCopy returns QuorumOpcode
        IsOpcode op
        op:SetType(GetType())
        return op
    end
end