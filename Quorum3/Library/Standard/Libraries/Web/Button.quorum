package Libraries.Web

use Libraries.Web.WebTag
use Libraries.Web.Attribute
use Libraries.Web.Attributes
use Libraries.Web.FormAttributeAccepter
use Libraries.Web.MouseAttributeAccepter
/*
The Button class represents HTML's (Hypertext Markup Language) button tag which 
is a button control. 
You can find more information about this tag at: 
    <a href="http://www.w3schools.com/tags/tag_button.asp">The button attribute</a>.

Attribute: Example

use Libraries.Web.All
class Main
   action main
      WebPage page
      Button myButton
      
      myButton:SetDescription("Quorum")
      myButton:SetOnClick("alert('Hello, World!')"
      myButton:SetAutofocus(true)
      page:AddToBody(myButton)
   end
end
*/
class Button is WebTag, FormAttributeAccepter, MouseAttributeAccepter

    constant text autofocus = "autofocus"
    constant text disabled = "disabled"
    constant text formName = "form"
    constant text formAction= "formaction"
    constant text formEncodedType = "formenctype"
    constant text formMethod = "formmethod"
    constant text formNovalidate = "formnovalidate"
    constant text formTarget = "formtarget"
    constant text name = "name"
    constant text type = "type"
    constant text submitValue = "value"

    /*
        This action gets the autofocus Attribute. The autofocus attribute 
        tells the Button whether or not it will get focus when a webPage is
        loaded.

        Attribute: Returns True if autofocus is enabled or false if it is disabled. 

        Attribute: Example
        use Libraries.Web.Button

        Button myButton
        boolean isAutofocusOn = myButton:GetAutofocus()
        
    */
    action GetAutofocus returns boolean
        Attribute focus = GetAttribute(autofocus)
        if focus not= undefined
            return focus:GetValue() = autofocus
        end
        return false
    end
    
    /*
        This action sets the autofocus Attribute. The autofocus attribute 
        tells the Button whether or not it will get focus when a webPage is
        loaded.

        Attribute: Parameter value The autofocus is enable with a value of true or is not enabled with a value of false. 

        Attribute: Example
        use Libraries.Web.Button

        Button myButton
        myButton:SetAutofocus(true)
        
    */
    action SetAutofocus(boolean value)
        if value
            AddAttribute(autofocus, autofocus)
        else
            RemoveAttribute(autofocus)
        end
    end

    /*
        This action gets the disabled attribute of the button. If false is
        returned the button is enabled and if true is returned it is disabled.

        Attribute: Returns True if the button is disabled and false if it not. 

        Attribute: Example
        use Libraries.Web.Button

        Button myButton
        boolean disabled = myButton:GetDisabled()
        
    */
    action GetDisabled returns boolean
        Attribute disable = GetAttribute(me:disabled)
        if disable not= undefined
            return disable:GetValue() = me:disabled
        end
        return false
    end

    /*
        This action sets the disabled attribute of the button. The value of true
        will disable the button and false will enable the button.

        Attribute: Parameter value True if the button is disabled and false if it not. 

        Attribute: Example
        use Libraries.Web.Button

        Button myButton
        myButton:SetDisabled(true)
        
    */
    action SetDisabled (boolean value)
        if value
            AddAttribute(disabled, disabled)
        else
            RemoveAttribute(disabled)
        end
    end

    /*
        This action gets the formName attribute of the button. The name of the 
        formName is stored as the value in the attribute.

        Attribute: Returns The formName attribute. 

        Attribute: Example
        use Libraries.Web.Button
        use Libraries.Web.Attribute

        Button myButton
        Attribute formName = myButton:GetFormName()
        text valueFormName = ""
        if formName not= undefined
            valueFormName = formName:GetValue()
        end
            
    */
    action GetFormName returns Attribute
        return GetAttribute(formName)
    end

    /*
        This action sets the form attribute of the button. The value of formName 
        attribute should map to a defined form name.

        Attribute: Parameter value Name of the form. 

        Attribute: Example
        use Libraries.Web.Button

        Button myButton
        myButton:SetFormName("myForm")
        
    */
    action SetFormName(text value)
        AddAttribute(formName,value)
    end

    /*
        This action gets the formAction attribute of the button. The specific 
        address of the formAction is stored in the Value of the attribute.

        Attribute: Returns The formAction attribute. 

        Attribute: Example
        use Libraries.Web.Button
        use Libraries.Web.Attribute

        Button myButton
        Attribute formAction = myButton:GetFormAction()
        text formActionAddress = ""
        if formAction not= undefined
            formActionAddress = formAction:GetValue()
        end
    */
    action GetFormAction returns Attribute
        return GetAttribute(formAction)
    end
    
    /*
        This action sets the formAction attribute of the button. The value of 
        the formAction attribute should map to a defined address.

        Attribute: Parameter value Pre-defined form action address. 

        Attribute: Example
        use Libraries.Web.Button

        Button myButton
        myButton:SetFormAction("myFormAction.quorum")
        
    */
    action SetFormAction(text value)
        AddAttribute(formAction, value)
    end

    /*
        This action gets the formEncodedType attribute of the button. The value
        of the formEncodedType is stored in the value of the attribute.

        Attribute: Parameter Returns The formEncodedType attribute.

        Attribute: Example
        use Libraries.Web.Button
        use Libraries.Web.Attribute

        Button myButton
        Attribute formEncodedType = myButton:GetFormEncodedType()
        text encodedType = ""
        if formEncodedType not= undefined
            encodedType = formEncodedType:GetValue()
        end
    */
    action GetFormEncodedType returns Attribute
        return GetAttribute(formEncodedType)
    end
    
    /*
        This action sets the formEncodedType attribute of the button. The value of 
        the formEncodedType attribute should should be a known encoding.
        Acceptable types are:   multipart/form-data --> No characters are encoded.
                                text/plain  --> Spaces are converted to + symbols, but no characters are encoded.
                                application/x-www-form-urlencoded   --> Default. All characters will be encoded.

        Attribute: Parameter value Pre-defined form action address. 

        Attribute: Example
        use Libraries.Web.Button

        Button myButton
        myButton:SetFormEncodedType("multipart/form-data")
        
    */
    action SetFormEncodedType(text value)
        AddAttribute(formEncodedType, value)
    end

    /*
        This action gets the formMethod attribute of the button. The value of the 
        formMethod attribute is stored in the value of the attribute and is either
        "get" or "post".

        Attribute: Returns The formMethod attribute.

        Attribute: Example
        use Libraries.Web.Button
        use Libraries.Web.Attribute

        Button myButton
        Attribute formMethod = myButton:GetFormMethod()
        text getOrPost = ""
        if formMethod not= undefined
           getOrPost = formMethod:GetValue()
        end
    */
    action GetFormMethod returns Attribute
        return GetAttribute(formMethod)
    end

    /*
        This action sets the formMethod attribute. The formMethod can be either get or post.

        Attribute: Parameter value The containing form's method.

        Attribute: Example
        use Libraries.Web.Button

        Button myButton
        myButton:SetFormMethod("post")
    */
    action SetFormMethod(text value)
        AddAttribute(formMethod, value)
    end

    /*
        This action gets the formNotValidated attribute of the button. If true the form will 
        not be validated on submission. If false the form will be validated on submission.

        Attribute: Returns The boolean value of the formNotValidated attribute.

        Attribute: Example
        use Libraries.Web.Button

        Button myButton
        boolean noValidate = myButton:GetFormNotValidated()

    */
    action GetFormNotValidated returns boolean
        Attribute noValidate = GetAttribute(formNovalidate)
        if noValidate not= undefined
            return noValidate:GetValue() = formNovalidate
        end
        return false
    end

    /*
        This action sets the formNotValidated attribute of the button. If true the form will 
        not be validated on submission. If false the form will be validated on submission.

        Attribute: Parameter value The formNotValidated attribute.

        Attribute: Example
        use Libraries.Web.Button

        Button myButton
        myButton:SetFormNotValidated(true)
    */
    action SetFormNotValidated(boolean value)
        if value
            AddAttribute(formNovalidate, formNovalidate)
        else
            RemoveAttribute(formNovalidate)
        end
    end

    /*
        This action gets the formTarget attribute of the button. This determines 
        the target window of the owning form's action. 
            Acceptable values:  "_blank" --> new tab
                                "_parent" --> parent frame
                                "_self" --> same frame
                                "_top"  --> same window
                                existing frame name --> specified frame

        Attribute: Returns The formTarget attribute.

        Attribute: Example
        use Libraries.Web.Button
        use Libraries.Web.Attribute

        Button myButton
        Attribute formTarget = myButton:GetFormTarget()
        text target= ""
        if formTarget not= undefined
           target = formTarget:GetValue()
        end
    */
    action GetFormTarget returns Attribute
        return GetAttribute(formTarget)
    end

    /*
        This action sets the formTarget attribute of the button. This determines 
        the target window of the owning form's action.
            Acceptable values:  "_blank" --> new tab
                                "_parent" --> parent frame
                                "_self" --> same frame
                                "_top"  --> same window
                                existing frame name --> specified frame


        Attribute: Parameter value The formTarget attribute.

        Attribute: Example
        use Libraries.Web.Button

        Button myButton
        myButton:SetFormTarget("_blank")
    */
    action SetFormTarget(text value)
        AddAttribute(formTarget, value)
    end

    /*
        This action gets the name attribute of the button. the value of the name
        is stored in the value of the name attribute.

        Attribute: Returns The name attribute.

        Attribute: Example
        use Libraries.Web.Button
        use Libraries.Web.Attribute

        Button myButton
        Attribute buttonName = myButton:GetName()
        text name = ""
        if buttonName not= undefined
           name = buttonName:GetValue()
        end
    */
    action GetName returns Attribute
        return GetAttribute(name)
    end

    /*
        This action sets the name attribute of the button.

        Attribute: Parameter value The name attribute. 

        Attribute: Example
        use Libraries.Web.Button

        Button myButton
        myButton:SetName("SubmitButton")
    */
    action SetName(text value)
        AddAttribute(name, value)
    end

    /*
        This action gets the type attribute of the button. The value of the type
        is stored in the value of the type attribute.
            Acceptable values:  "button" --> a clickable button
                                "reset" --> clears form data
                                "submit" --> submits form data

        Attribute: Returns The type attribute.

        Attribute: Example
        use Libraries.Web.Button
        use Libraries.Web.Attribute

        Button myButton
        Attribute buttonType = myButton:GetType()
        text type = ""
        if buttonType not= undefined
           type = buttonType:GetValue()
        end
    */
    action GetType returns Attribute
        return GetAttribute(type)
    end

    /*
        This action sets the type attribute of the button.
            Acceptable values:  "button" --> a clickable button
                                "reset" --> clears form data
                                "submit" --> submits form data

        Attribute: Parameter value The type attribute.

        Attribute: Example
        use Libraries.Web.Button

        Button myButton
        myButton:SetType("reset")
    */
    action SetType(text value)
        AddAttribute(type, value)
    end

    /*
        This action gets the submitValue attribute of the button. The value of
        submitValue is stored in the value of the submitValue attribute.

        Attribute: Returns The submitValue attribute.

        Attribute: Example
        use Libraries.Web.Button
        use Libraries.Web.Attribute

        Button myButton
        Attribute value = myButton:GetSubmitValue()
        text sValue = ""
        if value not= undefined
           sValue = value:GetValue()
        end
    */
    action GetSubmitValue returns Attribute
        return GetAttribute(submitValue)
    end

    /*
        This action sets the submitValue attribute of the button. 

        Attribute: Parameter value  The submitValue attribute.

        Attribute: Example
        use Libraries.Web.Button

        Button myButton
        myButton:SetSubmitValue("default_submit_value")
    */
    action SetSubmitValue(text value)
        AddAttribute(submitValue, value)
    end

    action Generate returns text
        text result = "<button " 
        Attributes attributes = parent:WebTag:GetAttributes()
        attributeText = attributes:Generate()
        result = result + attributeText + ">"
        result = result + me:GenerateNestedTags()
        result = result + GetDescription() + "</button>"
        return result
    end
end