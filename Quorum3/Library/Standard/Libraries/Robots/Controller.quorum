package Libraries.Robots

/*
The Controller class represents the physical Botball Controller. 
Several functions have been created to assist programmers in creating programs 
that meet the basic Botball requirements of having robots wait until the starting 
lights come on and have their programs shut down after a specified amount of time.
It is with the help of this controller, motors, sensors and the robot 
connected to the controller are controlled.

Attribute: Author Sahana Tambi Sathyanarayana

Attribute: Example

use Libraries.Robots.Controller

// Declaraing the Controller
Controller cruise
// Controller waits for 5 seconds without performing any operation
cruise:Wait(5)
  
*/
class Controller  
    /*
        This action will kill all the processes and switches off all the motors,
        after the specified amount of time has elapsed. The Controller is shut 
        down after the speicified amount of time has elapsed.

        Attribute: Parameter time is in seconds.

        Attribute: Example
        
        Controller cruise
        cruise:ShutDownIn(3)
        //the controller shuts down after 3 seconds.
    */
    system action ShutDownIn(number seconds)

    /*
        This action makes the controller wait/sleep for the specified amount of
        time. The controller does not perform any operation during this time.  
        
        Attribute: Parameter time is in seconds.

        Attribute: Example
        
        Controller cruise
        cruise:Wait(2)
        //the controller waits/sleeps for 2 seconds.
    */
    system action Wait(number seconds)

    /*
        This action will make the controller wait until the sensor connected to 
        the specified port has detected light. In order for the sensor to detect
        light, you need to first calibrate the light. 
        The following message is displayed on the controller:
        
        "Press B Button to Calibrate Light OFF
        Press Left Button to Calibrate Light ON
        Press A Button to Wait..."

        Once you are ready to calibrate the Light ON, press left arrow button on 
        the controller. The following message is displayed on the controller:

        "Set ON value to xx
        Press B Button to Calibrate Light OFF
        Press Left Button to Calibrate Light ON
        Press A Button to Wait..."

        Once you are ready to calibrate the Light OFF, press B button on 
        the controller. The following message is displayed on the controller:

        "Set OFF value to xx
        Press B Button to Calibrate Light OFF
        Press Left Button to Calibrate Light ON
        Press A Button to Wait..."

        Now light is Calibrated. Press A Button for the
        controller to wait/detect light by the sensor in the specified port. 

        Attribute: Parameter port is an integer, the port to which the sensor is 
        connected and waiting to see/detect light.

        Attribute: Example
        
        Controller cruise
        cruise:IsLightInPort(5)
        //the controller waits until the sensor connected to the port 5 has detected
        light.
    */
    system action WaitUntilLightDetectedInPort(integer port)

    /*
        This action makes the controller to beep.

        Attribute: Example
        
        Controller cruise
        cruise:Beep()
        //the controller produces a beep sound
    */
    system action Beep()
end
