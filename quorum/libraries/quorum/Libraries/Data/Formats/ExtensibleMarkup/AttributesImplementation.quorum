package Libraries.Data.Formats.ExtensibleMarkup

use Libraries.Containers.Array

/*
The AttributesImplementation class is used to represent an array of Attributes 
that have been Parsed from an XML document. Like the Array class, the location
always starts at 0, this means the first item in the attributes is at location 0, the
second is at location 1, etc.

Attribute: Example

use Libraries.Data.Formats.ExtensibleMarkup

Attribute data
data:name = "day"
data:value = "01"
AttributesImplementation myAttributes
myAttributes:Add(data)
text value = myAttributes:GetName(0)
*/
class AttributesImplementation is Attributes
    Array<Attribute> data

    /*
        This action gets the name of the Attribute at the given location in the 
        indexed array of Attributes. 

        Attribute: Parameter index The index or location of the wanted attribute.

        Attribute: Returns The name of the attribute at the indexed location.
        
        Attribute: Example
        use Libraries.Data.Formats.ExtensibleMarkup
        AttributesImplementation myAttributes
        Attribute data
        data:name = "day"
        myAttributes:Add(data)
        text value = myAttributes:GetName(0)
    */
    action GetName(integer index) returns text
        Attribute attribute = data:Get(index)
        return attribute:name
    end

    /*
        This action gets the value of the Attribute at the given location in the 
        indexed array of Attributes. 

        Attribute: Parameter index The index or location of the wanted attribute.

        Attribute: Returns The value of the attribute at the indexed location.
        
        Attribute: Example
        use Libraries.Data.Formats.ExtensibleMarkup
        AttributesImplementation myAttributes
        Attribute data
        data:value = "01"
        myAttributes:Add(data)
        text value = myAttributes:GetValue(0)
    */
    action GetValue(integer index) returns text
        Attribute attribute = data:Get(index)
        return attribute:value
    end

    /*
        This action gets the size of the array of Attributes.

        Attribute: Return The size of the array of Attributes. 

        Attribute: Example
        use Libraries.Data.Formats.ExtensibleMarkup
        AttributesImplementation myAttributes
        integer size = myAttributes:GetSize()
    */
    action GetSize returns integer
        return data:GetSize()
    end

    /*
        This action adds a value at the end of the array of attributes. 

        Attribute: Parameter attribute The attribute to be added to the array of attributes.

        Attribute: Example
        use Libraries.Data.Formats.ExtensibleMarkup
        Attribute data
        data:name = "day"
        data:value = "01"
        AttributesImplementation myAttributes
        myAttributes:Add(data)
    */
    action Add(Attribute attribute)
        data:Add(attribute)
    end

    /*
        This action empty's the array of attributes, clearing out all of the 
        items contained within it. 

        Attribute: Example
        use Libraries.Data.Formats.ExtensibleMarkup
        AttributesImplementation myAttributes
        Attribute firstName
        Attribute lastName
        Attribute dob
        myAttributes:Add(firstName)
        myAttributes:Add(lastName)
        myAttributes:Add(dob)
        myAttributes:Empty()
    */
    action Empty
        data:Empty()
    end
end