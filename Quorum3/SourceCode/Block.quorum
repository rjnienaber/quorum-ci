package Libraries.Language.Compile.Symbol

use Libraries.Containers.HashTable
use Libraries.Containers.Array
use Libraries.Language.Compile.CompilerError
use Libraries.Containers.HashTable
use Libraries.Language.Compile.Location

class Block
    HashTable<text, Variable> variables
    Array<Block> blocks
    integer currentBlock = 0
    Block parentBlock = undefined
    Class parentClass = undefined
    Action parentAction = undefined

    action Add(Variable variable) returns CompilerError
        if variables:HasKey(variable:GetStaticKey())
            CompilerError error
            error:SetLineNumber(variable:GetLineNumber())
            error:SetFile(variable:GetFile())
            error:SetErrorMessage("Variable " + variable:GetDisplayName() + " has already been defined.")
            return error
        end

        variables:Add(variable:GetStaticKey(), variable)
        return undefined
    end

    action GetVariableThisBlock(text key) returns Variable
        Variable variable = variables:GetValue(key)
        return variable
    end

    action GetVariable(text key) returns Variable
        Variable variable = variables:GetValue(key)
        if variable not= undefined
            return variable
        end
        //if undefined, check the parents
        Block parentBlock = GetParentBlock()
        repeat while parentBlock not= undefined
            //check for the variable
            variable = parentBlock:GetVariableThisBlock(key)
            if variable not= undefined
                return variable
            end
            parentBlock = parentBlock:GetParentBlock()
        end //it isn't in any of the parent blocks, check the action and class

        variable = parentAction:GetParameter(key)
        if variable not= undefined
            return variable
        end

        //not a parameter either, so check the class's fields
        variable = parentClass:GetVariable(key)
        return variable
    end 

    action Add(Block block)
        block:SetParentBlock(me)
        blocks:Add(block)
    end

    action GetParentBlock returns Block
        return parentBlock
    end

    action SetParentBlock(Block block)
        me:parentBlock = block
    end

    action GetParentClass returns Class
        return parentClass
    end

    action SetParentClass(Class clazz)
        me:parentClass = clazz
    end

    action GetParentAction returns Action
        return parentAction
    end

    action SetParentAction(Action method)
        me:parentAction = method
    end
end