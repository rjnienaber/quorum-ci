package Libraries.Language.Compile.Translate

use Libraries.Language.Compile.Symbol.Type

class QuorumConstant is QuorumOpcode
    public JavaBytecodeMethodWriter methodWriter = undefined
    public integer integerValue = 0
    public number numberValue = 0
    public boolean booleanValue = false
    public text textValue = ""

    action WriteJavaScript returns text
        Type type = GetType()
        if type:IsInteger()
            return type:GetIntegerConstant() + ""
        elseif type:IsNumber()
            return type:GetNumberConstant() + ""
        elseif type:IsBoolean()
            return type:GetBooleanConstant() + ""
        elseif type:IsText()
            return textValue:GetDoubleQuote() + type:GetTextConstant() + textValue:GetDoubleQuote() + ""
        end
        return ""
    end

    action Write
        Type type = GetType()
        if type:IsInteger()
            methodWriter:VisitConstant(integerValue)
        elseif type:IsNumber()
            methodWriter:VisitConstant(numberValue)
        elseif type:IsBoolean()
            methodWriter:VisitConstant(booleanValue)
        elseif type:IsText()
            methodWriter:VisitConstant(textValue)
        end
    end

    action GetTemplateCopy returns QuorumOpcode
        QuorumConstant con
        con:integerValue = integerValue
        con:numberValue = numberValue
        con:booleanValue = booleanValue
        con:textValue = textValue
        Type t = GetType()
        me:SetType(t:Copy())
        return con
    end
end