package Libraries.Language.Compile

use Libraries.Language.Compile.Context.all
use Libraries.Language.Compile.Translate.JavaBytecodeClassWriter
use Libraries.Language.Compile.Translate.JavaBytecodeMethodWriter
use Libraries.Language.Compile.Translate.QuorumBytecodeConverter
use Libraries.Language.Compile.Translate.JavaBytecodeOpcodes
use Libraries.Language.Compile.Symbol.all

use Libraries.Containers.Array
use Libraries.System.File

class QuorumBytecodeListener is QuorumSourceListener 
    QualifiedName packageValue = undefined
    JavaBytecodeClassWriter classWriter = undefined
    JavaBytecodeClassWriter interfaceWriter = undefined
    QuorumBytecodeConverter converter
    JavaBytecodeOpcodes opcodes
    Class currentClass = undefined
    constant text BUILD = "Build"
    constant text RUN = "Run"

    constant text JAVA_THROWABLE = "java/lang/Throwable"
    constant text JAVA_OBJECT = "java/lang/Object"
    constant text QUORUM_ERROR = "quorum/Libraries/Language/Errors/Error"

    action ExitPackageRule(PackageContext context) 
        packageValue = context:name
    end

    action EnterFullClassDeclaration(FullClassDeclarationContext context) 
        JavaBytecodeClassWriter newClassWriter
        JavaBytecodeClassWriter newIinterfaceWriter

        classWriter = newClassWriter
        interfaceWriter = newIinterfaceWriter

        text name = context:className
        SymbolTable table = me:GetSymbolTable()
        
        text staticKey = packageValue:GetStaticKey() + "." + name
        currentClass = table:GetClass(staticKey)


        integer version = opcodes:GetJavaVersion(8)
        integer access = opcodes:GetPublic() + opcodes:GetSuper()
        text interfaceName = converter:ConvertClassNameToInterfaceName(name)
        Array<text> interfaces
        interfaces:Add(interfaceName)
        text null = undefined //temporary workaround for Bug#97 https://quorum.atlassian.net/browse/QUOR-97
        //once fully integrated, check if this is a the Quorum error class or a subclass. For now, just weave in Object.
        classWriter:Visit(version, access, staticKey, null, JAVA_OBJECT, interfaces)
    end


    action ExitFullClassDeclaration(FullClassDeclarationContext context) 
        if currentClass not= undefined
            classWriter:VisitEnd()
            File classFile
            text path = BUILD + "/quorum/" + packageValue:GetPath() 
            classFile:SetPath(path)
            classFile:CreateDirectories()
            classFile:SetPath(path + "/" + currentClass:GetName() + ".class")
            classWriter:Write(classFile)

            interfaceWriter:VisitEnd()
            File interfaceFile
            path = BUILD + "/quorum/" + packageValue:GetPath()
            
            interfaceFile:SetPath(path + "/" + currentClass:GetName() + "$Interface.class")
            interfaceWriter:Write(interfaceFile)
        end
    end

    action ExitActionHeader(ActionContext context)
    end

    action EnterAction(ActionContext context) 
        
        text stuff = undefined
        JavaBytecodeMethodWriter method = classWriter:VisitMethod(opcodes:GetPublic() + opcodes:GetStatic(), "main", "([Ljava/lang/String;)V", stuff, undefined)
        
        a = 5
    end

    action ExitAction(ActionContext context) 
    end
end