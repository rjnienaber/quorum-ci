package Libraries.Web

use Libraries.Web.WebTag
use Libraries.Web.Attribute
use Libraries.Web.Attributes

/*
The TableData class represents HTML's (Hypertext Markup Language) td tag which 
is often contained in a TableRow. A TableData object represents a general and singular
cell in a table.
You can find more information about this tag at:
<a href="http://www.w3schools.com/tags/tag_td.asp">The td attribute</a>.


Attribute: Example
use Libraries.Web.all
class Main
   action main
      //make a web page
      WebPage page
      WebTable table
      //add a TableRow
      TableRow row
      TableData cell
      cell:SetDescription("andy")
      row:Add(cell)
      table:AddRow(row)
      page:AddToBody(table)
   end
end
*/
class TableData is WebTag
    constant text colspan = "colspan"
    constant text rowspan = "rowspan"
    constant text headers = "headers"

    /*
        This action gets the number of columns a cell spans in the web table. the
        default span is 1. 

        Attribute: Returns The number of columns a cell spans. 

        Attribute: Example
        use Libraries.Web.TableData

        TableData td
        integer span = td:GetColumnSpan()
    */
    action GetColumnSpan returns integer
        Attribute colSpan = GetAttribute(me:colspan)
        if colSpan = undefined
            return 1
        else
            return cast(integer,colSpan:GetValue())
        end
    end

    /*
        This action sets the column span for a cell in a table. The column span
        should be a positive integer. In some browsers a span of 0 means to span
        all columns to the end of the group.

        Attribute: Parameter value The number of columns a cell should span. 

        Attribute: Example
        use Libraries.Web.TableData

        TableData td
        td:SetColumnSpan(2)
        
    */
    action SetColumnSpan(integer value)
        AddAttribute(colspan, "" + value)
    end

    /*
        This action gets the number of rows a cell spans in the web table. the
        default span is 1. 

        Attribute: Returns The number of rows a cell spans. 

        Attribute: Example
        use Libraries.Web.TableData

        TableData td
        integer rowSpan = td:GetRowSpan()
    */
    action GetRowSpan returns integer
        Attribute rowSpan = GetAttribute(me:rowspan)
        if rowSpan = undefined
            return 1
        else
            return cast(integer,rowSpan:GetValue())
        end
    end

/*
        This action sets the row span for a cell in a table. The column span
        should be a positive integer. In some browsers a span of 0 means to span
        all rows to the end of the table section.

        Attribute: Parameter value The number of rows a cell should span. 

        Attribute: Example
        use Libraries.Web.TableData

        TableData td
        td:SetRowSpan(2)
        
    */
    action SetRowSpan(integer value)
        AddAttribute(rowspan, "" + value)
    end

    /*
        This action gets the header id of a cell in a table.

        Attribute: Returns The header id. 

        Attribute: Example
        use Libraries.Web.TableData
        use Libraries.Web.Attribute

        TableData td
        Attribute headerID = td:GetHeaders()
    */
    action GetHeaders returns Attribute
        return me:GetAttribute(headers)
    end

/*
        This action sets the header id that links this cell to a header (see
        TableHeader).

        Attribute: Parameter value The header id that links the cell to a header. 

        Attribute: Example
        use Libraries.Web.TableData

        //link the cell to the header by its id
        TableData td
        td:SetHeaders("name")
        
    */
    action SetHeaders(text value)
        AddAttribute(headers, value)
    end

//    action AddToHeaders(TableHeader value)
//        text header
//        check
//            Attribute headerAttribute = GetHeaders()
//            header = headerAttribute:GetValue()
//            header = header + " " + value:GetAttributeValue("id")
//        detect e                   
//        always
//            AddAttribute(headers, header)
//        end
//    end

    action Generate returns text
        text result = "<td " 
        result = result + GenerateAttributes() + ">"
        result = result + me:GenerateNestedTags()
        result = result + GetDescription() + "</td>"
        return result
    end


end