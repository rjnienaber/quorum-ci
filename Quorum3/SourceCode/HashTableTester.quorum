package Libraries.Language.Compile.Test

use Libraries.Language.Compile.all
use Libraries.Containers.HashTable
use Libraries.Containers.Array
use Libraries.Language.Compile.Parser
use Libraries.System.File
use Libraries.Containers.Blueprints.Iterator
use Libraries.Language.Compile.Translate.JarGenerator
use Libraries.System.StackTraceItem

class HashTableTester 
    CompilerTestSuite suite = undefined
    text path = "Library/Tests/HashTable/"
    text passPath = path + "Pass/"
    text failPath = path + "Fail/"

    action Test
        path = passPath
        Copy()
        Empty()
        GetKey()
        GetKeyIterator()
        GetSize()
        GetValueIterator()
        GetValueWrap()
        HasKey()
        HasKeyWrap()
        HasValue()
        Put()
        RemoveAllKey()
        RemoveAllValue()
        RemoveKey()
        RemoveValue()
//FAIL TESTS
        path = failPath
    end

    action GetName returns text
        return "HashTable Tests"
    end
    
    action GetCompilerTestSuite returns CompilerTestSuite
        return suite
    end

    action SetCompilerTestSuite(CompilerTestSuite suite)
        me:suite = suite
    end

    action Copy
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Copy.quorum")
        files:Add(main)
        results:Add(0, "10")
        results:Add(1, "3")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Empty 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Empty.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action GetKey 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "GetKey.quorum")
        files:Add(main)
        results:Add(0, "age")
        results:Add(1, "height")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action GetKeyIterator 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "GetKeyIterator.quorum")
        files:Add(main)
        results:Add(0, "height")
        results:Add(1, "age")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action GetSize 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "GetSize.quorum")
        files:Add(main)
        results:Add(0, "2")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action GetValueIterator 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "GetValueIterator.quorum")
        files:Add(main)
        results:Add(0, "65")
        results:Add(1, "23")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action GetValueWrap 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "GetValueWrap.quorum")
        files:Add(main)
        results:Add(0, "undefined")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action HasKey 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "HasKey.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action HasKeyWrap 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "HasKeyWrap.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action HasValue 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "HasValue.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Put 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Put.quorum")
        files:Add(main)
        results:Add(0, "23")
        results:Add(1, "65")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action RemoveAllKey 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "RemoveAllKey.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action RemoveAllValue 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "RemoveAllValue.quorum")
        files:Add(main)
        results:Add(0, "true")
        results:Add(1, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action RemoveKey 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "RemoveKey.quorum")
        files:Add(main)
        results:Add(0, "23")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action RemoveValue 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "RemoveValue.quorum")
        files:Add(main)
        results:Add(0, "age")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

end

