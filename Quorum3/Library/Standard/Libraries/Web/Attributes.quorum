package Libraries.Web

use Libraries.Containers.HashTable
use Libraries.Containers.Blueprints.Iterator
use Libraries.Web.WebGenerator
use Libraries.Web.Attribute

/*
The Attributes class stores a number of attribute objects. Effectively, 
this class is just a wrapper for the HashTable class, adding an action
related to automatically printing out the attributes.

Attribute: Example

use Libraries.Web.Attributes
Attribute attributes
Attribute attribute
attribute:SetName("src")
attribute:SetValue("http://www.google.com")
attributes:Add(attribute)
*/
class Attributes is WebGenerator
    HashTable<Text, Attribute> attributes

    action Generate returns text
        text result = ""
        Iterator<Attribute> iterator = attributes:GetValueIterator()

        repeat while iterator:HasNext() 
            Attribute attribute = iterator:Next()
            result = result + attribute:Generate() + " "
        end
        return result
    end

    /*
        This action returns an iterator of all attributes stored in this object.
        
        Attribute: returns This returns an iterator of all attributes stored
        in this object

        Attribute: Example
        use Libraries.Web.Attributes
        use Libraries.Web.Attribute
        use Libraries.Containers.Blueprints.Iterator

        Attributes attributes
        Attribute attribute
        attribute:SetName("src")
        attribute:SetValue("http://www.google.com")
        attributes:Add(attribute)

        //output out all of the attributes
        Iterator<Attribute> it =  attributes:GetIterator()
        repeat while it:HasNext()
            Attribute at = it:Next()
            output at:Generate()
        end
    */
    action GetIterator returns Iterator<Attribute>
        return attributes:GetValueIterator()
    end

        /*
        This action adds an Attribute to the object. If an attribute already
        exists for a given key, that attribute is replaced with the current one.
        
        Attribute: Parameter attribute The attribute to add or replace.

        Attribute: Example
        use Libraries.Web.Attributes
        use Libraries.Web.Attribute

        Attributes attributes
        Attribute attribute
        attribute:SetName("src")
        attribute:SetValue("http://www.google.com")
        attributes:Add(attribute)
    */
    action Add(Attribute attribute) 
        text key = attribute:GetName()
        attributes:Add(key, attribute)
    end

    /*
        This action removes an attribute with a particular key. If that attribute
        does not exist, then this action returns undefined.

        Attribute: Parameter name The name of the attribute that should be
        removed.

        Attribute: Example
        use Libraries.Web.Attributes
        use Libraries.Web.Attribute

        Attributes attributes
        Attribute attribute
        attribute:SetName("src")
        attribute:SetValue("http://www.google.com")
        attributes:Add(attribute)
        Attribute value = attributes:Remove("src")
    */
    action Remove(text name) returns Attribute
        if(attributes:HasKey(name)) 
            return attributes:RemoveKey(name)
        end

        return undefined
    end

    /*
        This action returns an attribute. If
        no attribute exists for a given key, this action returns undefined.

        Attribute: Parameter name The name value in this case is described in more
        detail in the documentation for this class's Add actions.

        Attribute: Example
        use Libraries.Web.Attributes
        use Libraries.Web.Attribute

        Attributes attributes
        //as we have not set any attribute, this would
        //return undefined
        Attribute attribute = attributes:GetAttribute("src")
    */
    action GetAttribute(text name) returns Attribute
        if(attributes:HasKey(name)) 
            return attributes:GetValue(name)
        end

        return undefined
    end

    /*
        This action returns whether or not an attribute exists for the key passed
        in as a parameter. 

        Attribute: Parameter name The key value in this case is described in more
        detail in the documentation for this class's Add actions.

        Attribute: Example
        use Libraries.Web.Attributes

        Attributes attributes
        //this would return false
        boolean exists = attributes:HasAttribute("src")
    */
    action HasAttribute(text name) returns boolean
        Attribute attr = GetAttribute(name)
        if attr not= undefined
            return true
        else
            return false
        end
    end

    /*
        This action returns the number of attributes that are currently
        stored in this object.

        Attribute: returns This action returns the number of attributes in
        the object.

        Attribute: Example
        use Libraries.Web.Attributes

        Attributes attributes
        //this would return zero
        integer num = attributes:GetSize()
    */
    action GetSize returns integer
        return attributes:GetSize()
    end
end