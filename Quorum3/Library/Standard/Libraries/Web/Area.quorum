package Libraries.Web
use Libraries.Web.WebTag
use Libraries.Web.Attribute
use Libraries.Web.Attributes
/*
The Area class represents HTML's (Hypertext Markup Language) area tag which is 
used to make clickable areas on an ImageMap class.
You can find more information about this tag at: 
    <a href="http://www.w3schools.com/tags/tag_area.asp">The area attribute</a>.
Attribute: Example
use Libraries.Web.all
class Main
   action main
      WebPage page
      
      Image image
      image:SetAddress("http://images.free-extras.com/pics/s/smile-1613.jpg")
      image:SetWidth("150")
      image:SetHeight("150")
      image:SetAlternate("Smile")
      image:SetUseMap("#smilemap")

      ImageMap imageMap
      imageMap:SetName("smilemap")

      Area area
      area:SetShape("rect")
      area:SetCoordinates("0,0,100,100")
      area:SetAddress("http://www.darpa.mil/uploadedImages/Content/NewsEvents/Releases/2012/Upward_Falling_Image.jpg")

      imageMap:Add(area)

      page:AddToBody(image)
      page:AddToBody(imageMap)
      output page:Generate()
   end
end
*/


class Area is WebTag
    constant text addressTag = "href"
    constant text alternativeText = "alt"
    constant text media = "media"
    constant text languageCode = "hreflang"
    constant text coordinates = "coords"
    constant text type = "type"
    constant text target = "target"
    constant text shape = "shape"
    constant text relationship = "rel"
    
    public constant text targetNewTab = "_blank"
    public constant text targetSameFrame = "_self"
    public constant text targetParentFrame = "_parent"
    public constant text targetSameWindow = "_top"

    public constant text relationshipRelationship = "relationship"
    public constant text relationshipAuthor = "author"
    public constant text relationshipBookmark = "bookmark"
    public constant text relationshipHelp = "help"
    public constant text relationshipLicense = "license"
    public constant text relationshipNext = "next"
    public constant text relationshipNoFollow = "nofollow"
    public constant text relationshipNoReferrer = "noreferrer"
    public constant text relationshipPrefetch = "prefetch"
    public constant text relationshipPrev = "prev"
    public constant text relationshipSearch = "search"
    public constant text relationshipTag = "tag"


    /*
        This action gets the coordinates attribute of the area. 
        The coordinates is used together with the shape attribute to specify the 
        size, shape, and placement of an area.

        Attribute: Returns The coordinates of specified area 

        Attribute: Example
        use Libraries.Web.Area
        use Libraries.Web.Attribute

        Area area
        Attribute coor = area:GetCoordinates()
        if coor not= undefined
            text coordinates = coor:GetValue()
        end
    */
    action GetCoordinates returns Attribute
        return me:GetAttribute(coordinates)
    end


    /*
        This action sets the coordinates attribute of the area. 
        The coordinates is used together with the shape attribute to specify the 
        size, shape, and placement of an area.

        Attribute: Example
        use Libraries.Web.Area
        use Libraries.Web.Attribute

        Area area
        area:SetCoordinates("0,0,16,24")
    */
    action SetCoordinates(text value)
        AddAttribute(coordinates, value)
    end

    /*
        This action gets the shape attribute of the area. The shape tag
        specifies the type of shape the area should be.

        Attribute: Returns The type of shape the area should be.

        Attribute: Example
        use Libraries.Web.Area
        use Libraries.Web.Attribute

        Area area
        Attribute shapeType = area:GetShape()
        if shapeType not= undefined
            text shape = shapeType:GetValue()
        end
    */
    action GetShape returns Attribute
        return me:GetAttribute(shape)
    end


    /*
        This action sets the shape attribute of the area. The shape tag
        specifies the type shape the area should be. These
        types include: default,rect,circle,poly

        Attribute: Parameter value The type of shape the area should be

        Attribute: Example
        use Libraries.Web.Area

        Area area
        area:SetShape("circle")
        
    */

    action SetShape(text shapeType)
        AddAttribute(shape, shapeType)
    end
    
    /*
        This action gets the address attribute of the area. The address is
        the location of the linked webpage or document.

        Attribute: Returns The address of the link. 

        Attribute: Example
        use Libraries.Web.Area
        use Libraries.Web.Attribute

        Area area
        Attribute address = area:GetAddress()
        if address not= undefined
            text href = address:GetValue()
        end
    */
    action GetAddress returns Attribute
        return me:GetAttribute(addressTag)
    end

    /*
        This action sets the address attribute of the area. The address is 
        the location of the linked webpage or document.

        Attribute: Parameter value The address of a webpage or document. 

        Attribute: Example
        use Libraries.Web.Area

        Area area
        area:SetAddress("http://www.google.com")
        
    */
    action SetAddress(text address)
        AddAttribute(addressTag, address)
    end
    
    /*
        This action gets the language code attribute of the area. The language 
        code is the two letter code corresponding to a language. See the 
        Libraries.Web.LanguageCode class.

        Attribute: Returns The two letter language code. 

        Attribute: Example
        use Libraries.Web.Area
        use Libraries.Web.Attribute

        Area area
        Attribute code = area:GetLanguageCode()
        if code not= undefined
            text languageCode = code:GetValue()
        end
    */
    action GetLanguageCode returns Attribute
        return GetAttribute(languageCode)
    end

    /*
        This action sets the language code attribute of the area. The language 
        code is the two letter code corresponding to a language. See the 
        Libraries.Web.LanguageCode class.

        Attribute: Parameter value The two letter language code. 

        Attribute: Example
        use Libraries.Web.Area
        use Libraries.Web.LanguageCode

        Area area
        LanguageCode language
        area:SetLanguageCode(language:english)
        
    */
    action SetLanguageCode(text value)
        AddAttribute(languageCode, value)
    end

    /*
        This action gets the media attribute of the area. The media tag
        specifies the type of media the area will be displayed on (e.g. handheld). 

        Attribute: Returns The type of media the page will be displayed on (braille, handheld, aural, print, screen, etc.) 

        Attribute: Example
        use Libraries.Web.Area
        use Libraries.Web.Attribute

        Area area
        Attribute media = area:GetMedia()
        if media not= undefined
            text mediaType = media:GetValue()
        end
    */
    action GetMedia returns Attribute
        return GetAttribute(media)
    end

    /*
        This action sets the media attribute of the area. The media tag
        specifies the type of media the area will be displayed on (e.g. handheld).

        Attribute: Parameter value The type of media the page will be displayed on (braille, handheld, aural, print, screen, etc.)

        Attribute: Example
        use Libraries.Web.Area

        Area area
        area:SetMedia("handheld")
        
    */
    action SetMedia(text value)
        AddAttribute(media, value)
    end

    /*
        This action gets the alterinative text attribute of the area.  
        
        Attribute: Returns The alternitive text for the area. 

        Attribute: Example
        use Libraries.Web.Area
        use Libraries.Web.Attribute

        Area area
        Attribute altText = area:GetAlternativeText()
        if altText not= undefined
            text alt = altText:GetValue()
        end
    */
    action GetAlternativeText returns Attribute
        return GetAttribute(alternativeText)
    end

    /*
        This action sets the alterinative text attribute of the area.

        Attribute: Parameter value The alterinative text attribute for the area.

        Attribute: Example
        use Libraries.Web.Area

        Area area
        area:SetAlternativeText("next")
        
    */
    action SetAlternativeText(text value)
        AddAttribute(alternativeText, value)
    end

    /*
        This action gets the target attribute of the area. The target tag
        specifies where the area is to be opened.

        Attribute: Returns The place the area will be opened. 

        Attribute: Example
        use Libraries.Web.Area
        use Libraries.Web.Attribute

        Area area
        Attribute target = area:GetTarget()
        if target not= undefined
            text tar = target:GetValue()
        end
    */
    action GetTarget returns Attribute
        return GetAttribute(target)
    end

    /*
        This action sets the target attribute of the area. The target tag
        specifies where the area is to be opened. These include: _blank, _self,
        _parent, _top, framename

        Attribute: Parameter value The target of the area.

        Attribute: Example
        use Libraries.Web.Area

        Area area
        area:SetTarget("_top")
        
    */
    action SetTarget(text value)
        AddAttribute(target, value)
    end

    /*
        This action gets the MIME type attribute of the area. The type attribute
        maps to a MIME type of the area.

        Attribute: Returns The MIME type attribute of the area. 

        Attribute: Example
        use Libraries.Web.Area
        use Libraries.Web.Attribute

        Area area
        Attribute type = area:GetType()
        if type not= undefined
            text mimeType = type:GetValue()
        end
    */
    action GetType returns Attribute
        return GetAttribute(type)
    end

    /*
        This action sets the Type attribute of the area. The type attribute
        maps to a MIME type of the area

        Attribute: Parameter value The MIME type for the area.

        Attribute: Example
        use Libraries.Web.Area

        Area area
        area:SetType("text/html")
        
    */
    action SetType(text value)
        AddAttribute(type, value)
    end

/*
        This action gets the relationship attribute of the area. The relationship tag
        specifies the type of relationship between the area and the current page. 

        Attribute: Returns The type of relationship between the current page and area. 

        Attribute: Example
        use Libraries.Web.Area
        use Libraries.Web.Attribute

        Area area
        Attribute relationship = area:GetRelationship()
        if relationship not= undefined
            text rel = relationship:GetValue()
        end
    */
    action GetRelationship returns Attribute
        return GetAttribute(relationship)
    end

    /*
        This action sets the relationship attribute of the area. The relationship tag
        specifies the type of relationship between the area and the current page. These
        relationships include: alternate, author, help, bookmark, help, license, next, 
        nofollow, noreferrer, prefetch, prev, search, tag

        Attribute: Parameter value The type of relationship between the current page and the area.

        Attribute: Example
        use Libraries.Web.Area

        Area area
        area:SetRelationship(area:relationshipNext)
        
    */
    action SetRelationship(text value)
        AddAttribute(relationship, value)
    end


    action Generate returns text
        text result = "<area " 
        Attributes attributes = parent:WebTag:GetAttributes()
        attributeText = attributes:Generate()
        result = result + attributeText + ">"
        result = result + me:GenerateNestedTags()
        result = result + GetDescription() + "</area>"
        return result
    end
end