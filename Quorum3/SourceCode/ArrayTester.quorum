package Libraries.Language.Compile.Test

use Libraries.Language.Compile.all
use Libraries.Containers.HashTable
use Libraries.Containers.Array
use Libraries.Language.Compile.Parser
use Libraries.System.File
use Libraries.Containers.Blueprints.Iterator
use Libraries.Language.Compile.Translate.QuorumJarGenerator
use Libraries.System.StackTraceItem

class ArrayTester 
    CompilerTestSuite suite = undefined
    text path = "Library/Tests/Array/"
    text passPath = path + "Pass/"
    text failPath = path + "Fail/"
    
    action Test
    //PASS TESTS
        path = passPath
        ArrayAdd()
        ArrayAddAt()
        ArrayAddToEnd()
        ArrayAddToFront()
        ArrayCopy()
        ArrayEmpty()
        ArrayGetFirstLocationFound()
        ArrayGetFirstLocationNotFound()
        ArrayGetFromEnd()
        ArrayGetFromFront()
        ArrayGetLastLocationFound()
        ArrayGetMaxSize()
        ArrayGetSize()
        ArrayIsEmpty()
        ArrayMultidimensional()
        ArrayOfTypeBooleanActionSetGetBoolean()
        ArrayOfTypeBooleanObjectActionSetGetBooleanObject()
        ArrayOfTypeIntegerActionSetGetInteger()
        ArrayOfTypeIntegerObjectActionSetGetIntegerObject()
        ArrayOfTypeNumberActionSetGetNumber()
        ArrayOfTypeNumberObjectActionSetGetNumberObject()
        ArrayOfTypeTextActionSetGetText()
        ArrayOfTypeTextObjectActionSetGetTextObject()
        ArrayRemove()
        ArrayRemoveAll()
        ArrayRemoveAt()
        ArrayRemoveFromEnd()
        ArrayRemoveFromFront()
        ArraySetMaxSize()
        ArraySetSize()
        ArraySortInteger()
        ArraySortNumber()
        ArraySortText()
        AssignFromGetIntToNum()
        ComplexSet()
        VectorAdd()
        VectorAddAt()
        VectorAddToEnd()
        VectorAddToFront()
        VectorCopy()
        VectorEmpty()
        VectorGetFromEnd()
        VectorGetFromFront()
        VectorGetMaxSize()
        VectorGetSize()
        VectorIsEmpty()
        VectorOverMaxSize()
        VectorRemove()
        VectorRemoveAll()
        VectorRemoveAt()
        VectorRemoveFromEnd()
        VectorRemoveFromFront()
        VectorSetMaxSize()
        VectorSetSize()
        
    //FAIL TESTS
        path = failPath
        ArrayOfMultipleTemplateTypes()
        ArrayOfTypeBooleanActionsSetGetBooleanObject()
        ArrayOfTypeIntegerActionSetGetIntegerObject()
        ArrayOfTypeNumberActionSetGetNumberObject()
        ArrayOfTypeTextActionSetGetTextObject()
        //ArrayOverMaxSize()
    end

    action GetName returns text
        return "Array Tests"
    end

    action GetCompilerTestSuite returns CompilerTestSuite
        return suite
    end

    action SetCompilerTestSuite(CompilerTestSuite suite)
        me:suite = suite
    end

    action ArrayAdd
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayAdd.quorum")
        files:Add(main)
        results:Add(0, "1")
        results:Add(1, "2")
        results:Add(2, "3")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayAddAt
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayAddAt.quorum")
        files:Add(main)
        results:Add(0, "13")
        results:Add(1, "12")
        results:Add(2, "14")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayAddToEnd
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayAddToEnd.quorum")
        files:Add(main)
        results:Add(0, "13")
        results:Add(1, "12")
        results:Add(2, "14")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayAddToFront
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayAddToFront.quorum")
        files:Add(main)
        results:Add(0, "13")
        results:Add(1, "12")
        results:Add(2, "14")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayCopy
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayCopy.quorum")
        files:Add(main)
        results:Add(0, "13")
        results:Add(1, "12")
        results:Add(2, "14")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayEmpty
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayEmpty.quorum")
        files:Add(main)
        results:Add(0, "true")
        results:Add(1, "false")
        results:Add(2, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayGetFirstLocationFound
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayGetFirstLocationFound.quorum")
        files:Add(main)
        results:Add(0, "1")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayGetFirstLocationNotFound
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayGetFirstLocationNotFound.quorum")
        files:Add(main)
        results:Add(0, "-1")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayGetFromEnd
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayGetFromEnd.quorum")
        files:Add(main)
        results:Add(0, "14")
        results:Add(1, "12")
        results:Add(2, "13")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayGetFromFront
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayGetFromFront.quorum")
        files:Add(main)
        results:Add(0, "13")
        results:Add(1, "12")
        results:Add(2, "14")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayGetLastLocationFound
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayGetLastLocationFound.quorum")
        files:Add(main)
        results:Add(0, "3")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayGetMaxSize
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayGetMaxSize.quorum")
        files:Add(main)
        results:Add(0, "10")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayGetSize
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayGetSize.quorum")
        files:Add(main)
        results:Add(0, "0")
        results:Add(1, "2")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayIsEmpty
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayIsEmpty.quorum")
        files:Add(main)
        results:Add(0, "true")
        results:Add(1, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayMultidimensional
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayMultidimensional.quorum")
        files:Add(main)
        results:Add(0, "2")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayOfTypeBooleanActionSetGetBoolean
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ArrayOfTypeBooleanActionSetGetBoolean.quorum")
        files:Add(main)
        results:Add(0, "true")
        results:Add(1, "false")
        results:Add(2, "true")
        results:Add(3, "false")
        results:Add(4, "true")
        results:Add(5, "false")
        results:Add(6, "true")
        results:Add(7, "false")
        results:Add(8, "true")
        results:Add(9, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ArrayOfTypeBooleanObjectActionSetGetBooleanObject
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArrayOfTypeBooleanObjectActionSetGetBooleanObject.quorum")
            files:Add(main)
            results:Add(0, "true")
            results:Add(1, "true")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArrayOfTypeIntegerActionSetGetInteger
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArrayOfTypeIntegerActionSetGetInteger.quorum")
            files:Add(main)
            results:Add(0, "1")
            results:Add(1, "2")
            results:Add(2, "3")
            results:Add(3, "4")
            results:Add(4, "5")
            results:Add(5, "6")
            results:Add(6, "7")
            results:Add(7, "8")
            results:Add(8, "9")
            results:Add(9, "0")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArrayOfTypeIntegerObjectActionSetGetIntegerObject
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArrayOfTypeIntegerObjectActionSetGetIntegerObject.quorum")
            files:Add(main)
            results:Add(0, "true")
            results:Add(1, "1")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArrayOfTypeNumberActionSetGetNumber
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArrayOfTypeNumberActionSetGetNumber.quorum")
            files:Add(main)
            results:Add(0, "1.5")
            results:Add(1, "2.5")
            results:Add(2, "3.5")
            results:Add(3, "4.5")
            results:Add(4, "5.5")
            results:Add(5, "6.5")
            results:Add(6, "7.5")
            results:Add(7, "8.5")
            results:Add(8, "9.5")
            results:Add(9, "0.5")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArrayOfTypeNumberObjectActionSetGetNumberObject
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArrayOfTypeNumberObjectActionSetGetNumberObject.quorum")
            files:Add(main)
            results:Add(0, "true")
            results:Add(1, "1.5")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArrayOfTypeTextActionSetGetText
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArrayOfTypeTextActionSetGetText.quorum")
            files:Add(main)
            results:Add(0, "t")
            results:Add(1, "f")
            results:Add(2, "t")
            results:Add(3, "f")
            results:Add(4, "t")
            results:Add(5, "f")
            results:Add(6, "t")
            results:Add(7, "f")
            results:Add(8, "t")
            results:Add(9, "t")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArrayOfTypeTextObjectActionSetGetTextObject
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArrayOfTypeTextObjectActionSetGetTextObject.quorum")
            files:Add(main)
            results:Add(0, "true")
            results:Add(1, "t")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArrayRemove
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArrayRemove.quorum")
            files:Add(main)
            results:Add(0, "12")
            results:Add(1, "14")
            results:Add(2, "2")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArrayRemoveAll
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArrayRemoveAll.quorum")
            files:Add(main)
            results:Add(0, "12")
            results:Add(1, "1")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArrayRemoveAt
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArrayRemoveAt.quorum")
            files:Add(main)
            results:Add(0, "12")
            results:Add(1, "14")
            results:Add(2, "2")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArrayRemoveFromEnd
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArrayRemoveFromEnd.quorum")
            files:Add(main)
            results:Add(0, "14")
            results:Add(1, "13")
            results:Add(2, "12")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArrayRemoveFromFront
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArrayRemoveFromFront.quorum")
            files:Add(main)
            results:Add(0, "12")
            results:Add(1, "12")
            results:Add(2, "14")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArraySetMaxSize
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArraySetMaxSize.quorum")
            files:Add(main)
            results:Add(0, "12")
            results:Add(1, "13")
            results:Add(2, "20")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArraySetSize
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArraySetSize.quorum")
            files:Add(main)
            results:Add(0, "6")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArraySortInteger
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArraySortInteger.quorum")
            files:Add(main)
            results:Add(0, "sorted")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArraySortNumber
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArraySortNumber.quorum")
            files:Add(main)
            results:Add(0, "sorted")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ArraySortText
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ArraySortText.quorum")
            files:Add(main)
            results:Add(0, "sorted")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action AssignFromGetIntToNum
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "AssignFromGetIntToNum.quorum")
            files:Add(main)
            results:Add(0, "1.0")
            results:Add(1, "5.0")
            results:Add(2, "6.0")
            results:Add(3, "1.0")
            results:Add(4, "5.0")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action ComplexSet
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "ComplexSet.quorum")
            files:Add(main)
            results:Add(0, "10")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorAdd
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorAdd.quorum")
            files:Add(main)
            results:Add(0, "12")
            results:Add(1, "13")
            results:Add(2, "14")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorAddAt
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorAddAt.quorum")
            files:Add(main)
            results:Add(0, "13")
            results:Add(1, "12")
            results:Add(2, "14")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorAddToEnd
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorAddToEnd.quorum")
            files:Add(main)
            results:Add(0, "13")
            results:Add(1, "12")
            results:Add(2, "14")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorAddToFront
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorAddToFront.quorum")
            files:Add(main)
            results:Add(0, "13")
            results:Add(1, "12")
            results:Add(2, "14")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorCopy
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorCopy.quorum")
            files:Add(main)
            results:Add(0, "13")
            results:Add(1, "12")
            results:Add(2, "14")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorEmpty
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorEmpty.quorum")
            files:Add(main)
            results:Add(0, "true")
            results:Add(1, "false")
            results:Add(2, "true")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorGetFromEnd
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorGetFromEnd.quorum")
            files:Add(main)
            results:Add(0, "14")
            results:Add(1, "12")
            results:Add(2, "13")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorGetFromFront
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorGetFromFront.quorum")
            files:Add(main)
            results:Add(0, "13")
            results:Add(1, "12")
            results:Add(2, "14")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorGetMaxSize
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorGetMaxSize.quorum")
            files:Add(main)
            results:Add(0, "10")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorGetSize
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorGetSize.quorum")
            files:Add(main)
            results:Add(0, "0")
            results:Add(1, "1")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorIsEmpty
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorIsEmpty.quorum")
            files:Add(main)
            results:Add(0, "true")
            results:Add(1, "false")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorOverMaxSize
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorOverMaxSize.quorum")
            files:Add(main)
            results:Add(0, "11")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorRemove
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorRemove.quorum")
            files:Add(main)
            results:Add(0, "12")
            results:Add(1, "14")
            results:Add(2, "2")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorRemoveAll
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorRemoveAll.quorum")
            files:Add(main)
            results:Add(0, "12")
            results:Add(1, "1")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorRemoveAt
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorRemoveAt.quorum")
            files:Add(main)
            results:Add(0, "13")
            results:Add(1, "14")
            results:Add(2, "2")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorRemoveFromEnd
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorRemoveFromEnd.quorum")
            files:Add(main)
            results:Add(0, "14")
            results:Add(1, "13")
            results:Add(2, "12")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorRemoveFromFront
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorRemoveFromFront.quorum")
            files:Add(main)
            results:Add(0, "13")
            results:Add(1, "12")
            results:Add(2, "14")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorSetMaxSize
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorSetMaxSize.quorum")
            files:Add(main)
            results:Add(0, "12")
            results:Add(1, "13")
            results:Add(2, "20")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    action VectorSetSize
            Array<File> files
            Array<text> results
            File main
            main:SetPath(path + "VectorSetSize.quorum")
            files:Add(main)
            results:Add(0, "6")
            suite:Test(files, results)
            suite:TestJavaScript(files, results)
    end

    //FAIL TESTS

    action ArrayOfMultipleTemplateTypes()
        Array<File> files
        File main
        main:SetPath(path + "ArrayOfMultipleTemplateTypes.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ArrayOfTypeBooleanActionsSetGetBooleanObject()
        Array<File> files
        File main
        main:SetPath(path + "ArrayOfTypeBooleanActionsSetGetBooleanObject.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ArrayOfTypeIntegerActionSetGetIntegerObject()
        Array<File> files
        File main
        main:SetPath(path + "ArrayOfTypeIntegerActionSetGetIntegerObject.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ArrayOfTypeNumberActionSetGetNumberObject()
        Array<File> files
        File main
        main:SetPath(path + "ArrayOfTypeNumberActionSetGetNumberObject.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ArrayOfTypeTextActionSetGetTextObject()
        Array<File> files
        File main
        main:SetPath(path + "ArrayOfTypeTextActionSetGetTextObject.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ArrayOverMaxSize()
        Array<File> files
        File main
        main:SetPath(path + "ArrayOverMaxSize.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end
end