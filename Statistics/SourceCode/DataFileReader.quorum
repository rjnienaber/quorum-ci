use Libraries.System.File
use Libraries.Containers.Array
use Libraries.Data.Formats.SeparatedValueFileReader
use Libraries.Containers.Table
use Libraries.Language.Errors.FileNotFoundError

class DataFileReader 

    text separator = ","

    action ReadFile(text filePath) returns ColumnTable
        File file
        file:SetPath(filePath)
        ColumnTable data = Read(file)
        return data
    end

  /*
   * Code mostly copied from SeparatedValue because I don't want Table<text> to be encapsulated
   */
  action Read(File file) returns ColumnTable
        ColumnTable table
        SeparatedValueFileReader reader
        integer numberColumns = -1
        boolean conistent = true

        if not file:Exists()
            FileNotFoundError error
            error:SetErrorMessage("Could not find the file at path: " + file:GetAbsolutePath() )
            alert(error)
        end

        reader:OpenForRead(file)
        integer count = 1
        boolean done = false
        repeat until done //for testing

            if not reader:IsAtEndOfFile()
                line = reader:ReadLine()
                Array<text> row = ReadLine(line)
                if row not= undefined
                    table:AddRow(row)

                    if numberColumns = -1
                        numberColumns = row:GetSize()
                    elseif numberColumns not= row:GetSize()
                        conistent = false
                    end
                end
            else 
                done = true
            end

            count = count + 1
        end
        return table
    end

private action ReadLine(text line) returns Array<text>
        //process every character, using double quotes and the delimiter 
        //as a guide for determining cells.
        Array<text> row
        count = 0
        isInDoubleQuotes = false
        text current = ""
        size = line:GetSize()
        justFinishedDoubleQuote = false

        dq = line:GetDoubleQuote()
        repeat size times
            char = line:GetCharacter(count)
            
            if char = dq
                isInDoubleQuotes = not isInDoubleQuotes
            elseif char = separator and not isInDoubleQuotes
                    row:Add(current)
                    justFinishedDoubleQuote = false
                current = ""
            else 
                current = current + char
            end
            
            count = count + 1
        end

        row:Add(current)
        return row
    end

end