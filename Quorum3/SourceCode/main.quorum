package Libraries.Language.Compile

use Libraries.Language.Compile.Parser
use Libraries.System.File
use Libraries.Containers.Blueprints.Iterator

class Main
    public constant number VERSION = 3.0
    action Main
        output "Hi, from Quorum " + VERSION
        integer a = 5
        integer b = 10
        boolean c = a = b
        Compiler compiler
        File file
        file:SetPath("Library/Tests/Expressions/Pass/EqualIntInt.quorum")
        Parser parser

        output "Parsing"
        compiler:Parse(file, parser)

        output "Typechecking"
        TypeCheckListener checker
        compiler:Parse(file, checker)

        output "Writing bytecode"
        QuorumBytecodeListener bytecode
        compiler:Parse(file, bytecode)
        
        CompilerErrorManager manager = parser:GetCompilerErrorManager()

        if manager:IsCompilationErrorFree()
            output "Build completed successfully"
        else 
            output "The code did not build correctly. Here is a list of errors:"
            Iterator<CompilerError> errors = manager:GetIterator()
            repeat while errors:HasNext()
                CompilerError error = errors:Next()
                text t = error:GetDisplayName()
                output t
            end
        end
    end
end