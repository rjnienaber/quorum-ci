package Libraries.Language.Compile.Test

use Libraries.Language.Compile.all
use Libraries.Containers.HashTable
use Libraries.Containers.Array
use Libraries.Language.Compile.Parser
use Libraries.System.File
use Libraries.Containers.Blueprints.Iterator
use Libraries.Language.Compile.Translate.QuorumJarGenerator
use Libraries.System.StackTraceItem

class QueueTester 
    CompilerTestSuite suite = undefined
    text path = "Library/Tests/Queue/"
    text passPath = path + "Pass/"
    text failPath = path + "Fail/"

    action Test
        path = passPath
        Add()
        Contains()
        Copy()
        Empty()
        IsEmpty()
        Iterator()
        Peek()
        Pop()
        Push()
        RemoveAll()
        RemoveValue()
        Size()
//FAIL TESTS
        path = failPath
//        RemoveFromEmpty()
//        RemoveTooMany()
    end

    action GetName returns text
        return "Queue Tests"
    end
    
    action GetCompilerTestSuite returns CompilerTestSuite
        return suite
    end

    action SetCompilerTestSuite(CompilerTestSuite suite)
        me:suite = suite
    end

    action Add 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Add.quorum")
        files:Add(main)
        results:Add(0, "One")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Contains 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Contains.quorum")
        files:Add(main)
        results:Add(0, "true")
        results:Add(1, "false")
        results:Add(2, "true")
        results:Add(3, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Copy 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Copy.quorum")
        files:Add(main)
        results:Add(0, "OneTwoThreeFourFive")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Empty 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Empty.quorum")
        files:Add(main)
        results:Add(0, "0")
        results:Add(1, "5")
        results:Add(2, "OneTwoThreeFourFive")
        results:Add(3, "0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IsEmpty 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IsEmpty.quorum")
        files:Add(main)
        results:Add(0, "false")
        results:Add(1, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Iterator 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Iterator.quorum")
        files:Add(main)
        results:Add(0, "OneTwoThreeFourFiveSixSeven")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Peek 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Peek.quorum")
        files:Add(main)
        results:Add(0, "One")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Pop 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Pop.quorum")
        files:Add(main)
        results:Add(0, "One")
        results:Add(1, "5")
        results:Add(2, "Two")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Push 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Push.quorum")
        files:Add(main)
        results:Add(0, "0")
        results:Add(1, "5")
        results:Add(2, "OneTwoThreeFourFive")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action RemoveAll 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "RemoveAll.quorum")
        files:Add(main)
        results:Add(0, "6")
        results:Add(1, "4")
        results:Add(2, "TwoFourFiveSix")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action RemoveValue 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "RemoveValue.quorum")
        files:Add(main)
        results:Add(0, "5")
        results:Add(1, "4")
        results:Add(2, "0")
        results:Add(3, "OneTwoFourFive")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Size 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Size.quorum")
        files:Add(main)
        results:Add(0, "0")
        results:Add(1, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

//FAIL TESTS
    action RemoveFromEmpty
        Array<File> files
        File main
        main:SetPath(path + "RemoveFromEmpty.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action RemoveTooMany
        Array<File> files
        File main
        main:SetPath(path + "RemoveTooMany.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

end

