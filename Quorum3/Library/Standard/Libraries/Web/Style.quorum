package Libraries.Web

use Libraries.Web.WebTag
use Libraries.Web.Attribute
use Libraries.Web.Attributes

/*
The Style class represents HTML's (Hypertext Markup Language) style tag which is
used to define style or css information to the document.
You can find more information about this tag at: 
        <a href="http://www.w3schools.com/tags/tag_style.asp">The style attribute</a>.

Attribute: Example
use Libraries.Web.all

class Main
    action main
      WebPage page

      Style style
      style:SetType("text/css")
      style:SetDescription("h1 {color:blue;}")

      page:SetWebPageHeader(style)
      output page:Generate()
    end
end
*/
class Style is WebTag
    constant text media = "media"
    constant text scoped = "scoped"
    constant text type = "type"

    /*
        This action sets media that the style is optimized for. More information 
        can be found at: <a href="http://www.w3schools.com/tags/att_style_media.asp>The style media attribute</a>
        

        Attribute: Parameter value Sets the media type for the style.

        Attribute: Example
        use Libraries.Web.Style
        use Libraries.Web.Attribute

        Style style
        style:SetMedia("braille")
        
    */
    action SetMedia(text value)
        AddAttribute(media, value)
    end

    /*
        This action gets media that the style is optimized for. More information 
        can be found at: <a href="http://www.w3schools.com/tags/att_style_media.asp>The style media attribute</a>
        

        Attribute: Returns The media type for the style.

        Attribute: Example
        use Libraries.Web.Style
        use Libraries.Web.Attribute

        Style style
        style:SetMedia("braille")
        Attribute media = style:GetMedia()
        
    */
    action GetMedia returns Attribute
        return me:GetAttribute(media)
    end

    /*
        This action sets the style to apply to only the parent and child of the element the style is being applied to.
        

        Attribute: Parameter isScoped If true the style will aply to the parent and child of the element.

        Attribute: Example
        use Libraries.Web.Style
        use Libraries.Web.Attribute

        Style style
        style:SetScoped(true)
        
    */
    action SetScoped(boolean isScoped)
        if isScoped
            AddAttribute(scoped, scoped)
        else
            RemoveAttribute(scoped)
        end
    end

    /*
        This action gets the style to apply to only the parent and child of the element the style is being applied to.
        

        Attribute: Returns If true the style will aply to the parent and child of the element.

        Attribute: Example
        use Libraries.Web.Style
        use Libraries.Web.Attribute

        Style style
        style:SetScoped(true)
        boolean scoped = style:GetScoped()
        
    */
    action GetScoped returns boolean
        return me:HasAttribute(scoped)
    end

    /*
        This action sets the type of information in the style object (description).
        

        Attribute: Parameter value Currently the only applicable type is "text/css".

        Attribute: Example
        use Libraries.Web.Style
        use Libraries.Web.Attribute

        Style style
        style:SetType("text/css")
        
    */
    action SetType(text value)
        AddAttribute(type, value)
    end

    /*
        This action gets the type of information in the style object (description).
        

        Attribute: Returns The type of information in the stlye object.

        Attribute: Example
        use Libraries.Web.Style
        use Libraries.Web.Attribute

        Style style
        style:SetType("text/css")
        Attribute type = style:GetType()
        
    */
    action GetType returns Attribute
        return me:GetAttribute(type)
    end

    action Generate returns text
        text result = "<style " 
        Attributes attributes = parent:WebTag:GetAttributes()
        attributeText = attributes:Generate()
        result = result + attributeText + ">"
        result = result + me:GenerateNestedTags()
        result = result + GetDescription() + "</style>"
        return result
    end
end