package Libraries.Language.Compile.Test

use Libraries.Language.Compile.all
use Libraries.Containers.HashTable
use Libraries.Containers.Array
use Libraries.Language.Compile.Parser
use Libraries.System.File
use Libraries.Containers.Blueprints.Iterator
use Libraries.Language.Compile.Translate.QuorumJarGenerator
use Libraries.System.StackTraceItem

class IfStatementTester 
    CompilerTestSuite suite = undefined
    text path = "Library/Tests/IfStatement/"
    text passPath = path + "Pass/"
    text failPath = path + "Fail/"
    action Test
        path = passPath
        IfConst()
        IfConstIn()
        IfElseIfElseMultipleConditions()
        IfElseIfElse_Const()
        IfElseIfElse_Var()
        IfElseIfStatement_Const()
        IfElseIfStatement_Var()
        IfNestedInElse()
        IfNestedInElseIf()
        IfNestedInIf()
        IfStatementCompoundBoolean()
        IfStatementCompoundEqual()
        IfStatementCompoundLTandEqual()
        IfStatementOneCondition_ConstEqual_False()
        IfStatementOneCondition_ConstEqual_True()
        IfStatementOneCondition_ConstNotEqual_False()
        IfStatementOneCondition_ConstNotEqual_True()
        IfStatementOneCondition_GT_Equal()
        IfStatementOneCondition_GT_False()
        IfStatementOneCondition_GT_True()
        IfStatementOneCondition_GTE_Equal()
        IfStatementOneCondition_GTE_False()
        IfStatementOneCondition_GTE_True()
        IfStatementOneCondition_LT_Equal()
        IfStatementOneCondition_LT_False()
        IfStatementOneCondition_LT_True()
        IfStatementOneCondition_LTE_Equal()
        IfStatementOneCondition_LTE_False()
        IfStatementOneCondition_LTE_True()
        IfStatementOneCondition_VarEqual_False()
        IfStatementOneCondition_VarEqual_True()
        IfStatementOneCondition_VarNotEqual_False()
        IfStatementOneCondition_VarNotEqual_True()
        IfWithElse_Const()
        IfWithElse_Var()
        Lab3_1_0()
        Lab3_1_1()
        Lab3_1_2()
        Lab3_1_20()
        Lab3_1_21()
        Lab3_1_3()
        Lab3_1_4()
        MultipleIfBlocksNestedLevel2_00()
        MultipleIfBlocksNestedLevel2_01()
        MultipleIfBlocksNestedLevel2_02()
        MultipleIfBlocksNestedLevel2_10()
        MultipleIfBlocksNestedLevel2_11()
        MultipleIfBlocksNestedLevel2_12()
        MultipleIfBlocksNestedLevel2_1A0()
        MultipleIfBlocksNestedLevel2_1A1()
        MultipleIfBlocksNestedLevel2_1A2()
        MultipleIfBlocksNestedLevel2_1AB0()
        MultipleIfBlocksNestedLevel2_1AB1()
        MultipleIfBlocksNestedLevel2_1AB2()
        MultipleIfBlocksNestedLevel2_1ABC0()
        MultipleIfBlocksNestedLevel2_1ABC1()
        MultipleIfBlocksNestedLevel2_1ABC2()
        MultipleIfBlocksNestedLevel2_1AC0()
        MultipleIfBlocksNestedLevel2_1AC1()
        MultipleIfBlocksNestedLevel2_1AC2()
        MultipleIfBlocksNestedLevel2_1B0()
        MultipleIfBlocksNestedLevel2_1B1()
        MultipleIfBlocksNestedLevel2_1B2()
        MultipleIfBlocksNestedLevel2_1BC0()
        MultipleIfBlocksNestedLevel2_1BC1()
        MultipleIfBlocksNestedLevel2_1BC2()
        MultipleIfBlocksNestedLevel2_1C0()
        MultipleIfBlocksNestedLevel2_1C1()
        MultipleIfBlocksNestedLevel2_1C2()
        MultipleIfElseBlocks_1AFalse()
        MultipleIfElseBlocks_1ATrue()
        MultipleIfElseBlocks_1BFalse()
        MultipleIfElseBlocks_1BTrue()
        MultipleIfElseBlocks_2AFalse()
        MultipleIfElseBlocks_2ATrue()
        MultipleIfElseBlocks_2BFalse()
        MultipleIfElseBlocks_2BTrue()
        MultipleIfElseBlocks_3AFalse()
        MultipleIfElseBlocks_3ATrue()
        MultipleIfElseBlocks_3BFalse()
        MultipleIfElseBlocks_3BTrue()
        MultipleIfElseBlocks_4AFalse()
        MultipleIfElseBlocks_4ATrue()
        MultipleIfElseBlocks_4BFalse()
        MultipleIfElseBlocks_4BTrue()

//FAIL TESTS
        path = failPath
        ElseIfBadVariable()
        ElseIfNumber()
        IfStatementInt()
        IfStatementDouble()
        IfStatementText()
    end

    action GetName returns text
        return "If Statement Tests"
    end

    action GetCompilerTestSuite returns CompilerTestSuite
        return suite
    end

    action SetCompilerTestSuite(CompilerTestSuite suite)
        me:suite = suite
    end

    action IfConst
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfConst.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfConstIn
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfConstIn.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfElseIfElseMultipleConditions
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfElseIfElseMultipleConditions.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfElseIfElse_Const 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfElseIfElse_Const.quorum")
        files:Add(main)
        results:Add(0, "7")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfElseIfElse_Var 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfElseIfElse_Var.quorum")
        files:Add(main)
        results:Add(0, "7")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfElseIfStatement_Const 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfElseIfStatement_Const.quorum")
        files:Add(main)
        results:Add(0, "20")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfElseIfStatement_Var 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfElseIfStatement_Var.quorum")
        files:Add(main)
        results:Add(0, "10")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfNestedInElse 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfNestedInElse.quorum")
        files:Add(main)
        results:Add(0, "7")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfNestedInElseIf 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfNestedInElseIf.quorum")
        files:Add(main)
        results:Add(0, "7")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfNestedInIf 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfNestedInIf.quorum")
        files:Add(main)
        results:Add(0, "7")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementCompoundBoolean 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementCompoundBoolean.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementCompoundEqual 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementCompoundEqual.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementCompoundLTandEqual 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementCompoundLTandEqual.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_ConstEqual_False 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_ConstEqual_False.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_ConstEqual_True 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_ConstEqual_True.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_ConstNotEqual_False 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_ConstNotEqual_False.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_ConstNotEqual_True 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_ConstNotEqual_True.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_GT_Equal
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_GT_Equal.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_GT_False 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_GT_False.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_GT_True 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_GT_True.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_GTE_Equal
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_GTE_Equal.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_GTE_False
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_GTE_False.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_GTE_True 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_GTE_True.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_LT_Equal
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_LT_Equal.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_LT_False
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_LT_False.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_LT_True
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_LT_True.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_LTE_Equal
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_LTE_Equal.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_LTE_False
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_LTE_False.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_LTE_True 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_LTE_True.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_VarEqual_False 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_VarEqual_False.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_VarEqual_True
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_VarEqual_True.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_VarNotEqual_False 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_VarNotEqual_False.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfStatementOneCondition_VarNotEqual_True
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfStatementOneCondition_VarNotEqual_True.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfWithElse_Const 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfWithElse_Const.quorum")
        files:Add(main)
        results:Add(0, "6")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IfWithElse_Var 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IfWithElse_Var.quorum")
        files:Add(main)
        results:Add(0, "6")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end
   
    action Lab3_1_0
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Lab3_1_0.quorum")
        files:Add(main)
        results:Add(0, "Error: numberOfCars set to 1")
        results:Add(1, "20000")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Lab3_1_1
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Lab3_1_1.quorum")
        files:Add(main)
        results:Add(0, "20000")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Lab3_1_2
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Lab3_1_2.quorum")
        files:Add(main)
        results:Add(0, "39900")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Lab3_1_20
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Lab3_1_20.quorum")
        files:Add(main)
        results:Add(0, "396000")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Lab3_1_21
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Lab3_1_21.quorum")
        files:Add(main)
        results:Add(0, "Error: numberOfCars set to 20")
        results:Add(1, "396000")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Lab3_1_3
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Lab3_1_3.quorum")
        files:Add(main)
        results:Add(0, "59700")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action Lab3_1_4
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "Lab3_1_4.quorum")
        files:Add(main)
        results:Add(0, "79200")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfElseBlocks_1AFalse
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_1AFalse.quorum")
        files:Add(main)
        results:Add(0, "111")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfElseBlocks_1ATrue
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_1ATrue.quorum")
        files:Add(main)
        results:Add(0, "110")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end
 
    action MultipleIfElseBlocks_1BFalse
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_1BFalse.quorum")
        files:Add(main)
        results:Add(0, "112")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfElseBlocks_1BTrue
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_1BTrue.quorum")
        files:Add(main)
        results:Add(0, "120")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfElseBlocks_2AFalse
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_2AFalse.quorum")
        files:Add(main)
        results:Add(0, "121")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfElseBlocks_2ATrue
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_2ATrue.quorum")
        files:Add(main)
        results:Add(0, "210")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end
 
    action MultipleIfElseBlocks_2BFalse
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_2BFalse.quorum")
        files:Add(main)
        results:Add(0, "122")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfElseBlocks_2BTrue
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_2BTrue.quorum")
        files:Add(main)
        results:Add(0, "220")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfElseBlocks_3AFalse
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_3AFalse.quorum")
        files:Add(main)
        results:Add(0, "131")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfElseBlocks_3ATrue
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_3ATrue.quorum")
        files:Add(main)
        results:Add(0, "310")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end
 
    action MultipleIfElseBlocks_3BFalse
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_3BFalse.quorum")
        files:Add(main)
        results:Add(0, "132")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfElseBlocks_3BTrue
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_3BTrue.quorum")
        files:Add(main)
        results:Add(0, "320")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfElseBlocks_4AFalse
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_4AFalse.quorum")
        files:Add(main)
        results:Add(0, "151")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfElseBlocks_4ATrue
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_4ATrue.quorum")
        files:Add(main)
        results:Add(0, "510")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end
 
    action MultipleIfElseBlocks_4BFalse
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_4BFalse.quorum")
        files:Add(main)
        results:Add(0, "152")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfElseBlocks_4BTrue
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfElseBlocks_4BTrue.quorum")
        files:Add(main)
        results:Add(0, "520")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_00
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_00.quorum")
        files:Add(main)
        results:Add(0, "3000")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_01
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_01.quorum")
        files:Add(main)
        results:Add(0, "1000")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_02
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_02.quorum")
        files:Add(main)
        results:Add(0, "2000")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_10
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_10.quorum")
        files:Add(main)
        results:Add(0, "3602")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_11
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_11.quorum")
        files:Add(main)
        results:Add(0, "1602")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_12
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_12.quorum")
        files:Add(main)
        results:Add(0, "2602")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1A0
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1A0.quorum")
        files:Add(main)
        results:Add(0, "3302")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1A1
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1A1.quorum")
        files:Add(main)
        results:Add(0, "1302")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1A2
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1A2.quorum")
        files:Add(main)
        results:Add(0, "2302")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1AB0
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1AB0.quorum")
        files:Add(main)
        results:Add(0, "3102")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1AB1
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1AB1.quorum")
        files:Add(main)
        results:Add(0, "1102")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1AB2
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1AB2.quorum")
        files:Add(main)
        results:Add(0, "2102")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1ABC0
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1ABC0.quorum")
        files:Add(main)
        results:Add(0, "3101")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1ABC1
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1ABC1.quorum")
        files:Add(main)
        results:Add(0, "1101")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1ABC2
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1ABC2.quorum")
        files:Add(main)
        results:Add(0, "2101")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1AC0
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1AC0.quorum")
        files:Add(main)
        results:Add(0, "3301")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1AC1
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1AC1.quorum")
        files:Add(main)
        results:Add(0, "1301")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1AC2
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1AC2.quorum")
        files:Add(main)
        results:Add(0, "2301")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1B0
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1B0.quorum")
        files:Add(main)
        results:Add(0, "3202")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1B1
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1B1.quorum")
        files:Add(main)
        results:Add(0, "1202")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1B2
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1B2.quorum")
        files:Add(main)
        results:Add(0, "2202")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1BC0
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1BC0.quorum")
        files:Add(main)
        results:Add(0, "3201")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1BC1
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1BC1.quorum")
        files:Add(main)
        results:Add(0, "1201")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1BC2
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1BC2.quorum")
        files:Add(main)
        results:Add(0, "2201")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1C0
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1C0.quorum")
        files:Add(main)
        results:Add(0, "3601")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1C1
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1C1.quorum")
        files:Add(main)
        results:Add(0, "1601")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action MultipleIfBlocksNestedLevel2_1C2
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "MultipleIfBlocksNestedLevel2_1C2.quorum")
        files:Add(main)
        results:Add(0, "2601")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

//FAIL TESTS
    action ElseIfBadVariable
        Array<File> files
        File main
        main:SetPath(path + "ElseIfBadVariable.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ElseIfNumber
        Array<File> files
        File main
        main:SetPath(path + "ElseIfNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action IfStatementDouble
        Array<File> files
        File main
        main:SetPath(path + "IfStatementDouble.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action IfStatementInt
        Array<File> files
        File main
        main:SetPath(path + "IfStatementInt.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action IfStatementText
        Array<File> files
        File main
        main:SetPath(path + "IfStatementText.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end
end