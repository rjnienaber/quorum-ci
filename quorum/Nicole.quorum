use Libraries.Accessibility.all
use Libraries.System.File
use Libraries.Data.Formats.all
use Libraries.Data.Compression.Decompresser

class main
    action main

        SeparatedValue csvReader
        File csv
        csv:SetWorkingDirectory("test/tests/SeparatedValue/Resources")
        csv:SetPath ("BarSeparator.csv")
        output csv:GetAbsolutePath()

        csvReader:Read(csv)

        output "Rows: " + csvReader:GetNumberOfRows() 
        output "Columns: " + csvReader:GetNumberOfColumns()
        output "IsConsistent: " + csvReader:IsConsistent()
        output "Seperator: " + csvReader:GetSeparator()

/*
        // GZip Decompression Test
        File inputFile
        inputFile:SetWorkingDirectory("test/tests/Decompresser/Resources")
        inputFile:SetPath("gzipfile.txt.gz")

        File outputFile
        outputFile:SetWorkingDirectory("test/tests/Decompresser/Resources")
        outputFile:SetPath("gzipfile.txt")

        Decompresser decompress
        decompress:DecompressGZip(inputFile, outputFile)

        //output out


        // Decompression Test
        File inputFile
        inputFile:SetWorkingDirectory("/Users/Nicole/Desktop/ziptest")
        inputFile:SetPath("test.xml.gz")


        File outputFile
        outputFile:SetWorkingDirectory("/Users/Nicole/Desktop")
        outputFile:SetPath("Test.xml")

        Decompresser decompress
        decompress:DecompressGZip(inputFile, outputFile)
*/

        // XML Parser Test
//        File f
//        f:SetPath("test/tests/ExtensibleMarkup/Resources/simple_element.xml")
//        ExtensibleMarkupReader  reader
//        AnalyticsMarkupListener listener
//        reader:SetMarkupListener(listener)
//        reader:Read("<root></root>")
//        text result = listener:GetResultText()


        // Accessibility Library Test
//        AccessibilityManager manager
//
//        MouseObserverTest mouseObserver
//        KeyboardObserverTest keyboardObserver
//        FocusObserverTest focusObserver
//        WindowObserverTest windowObserver
//        MenuObserverTest menuObserver
//        PropertyObserverTest propertyObserver
//        EverythingObserverTest everythingObserver
//
//        //manager:Add(mouseObserver) // working!
//        //manager:Add(keyboardObserver) // working!
//        //manager:Add(focusObserver)
//        //manager:Add(windowObserver)
//        //manager:Add(menuObserver)
//        manager:Add(propertyObserver)
//        //manager:Add(everythingObserver)
//
//        output "Begin!"
//        manager:Start()
    end
end