package Libraries.Robots
use Libraries.Robots.Connectable
/*
The Servo class represents a physical servo. 
Each servo has a designation, 
an integer, that says which port this servo is connected to (e.g., 0, 1, 2 or 3). 
In order to use a servo we need to set connection with the servo first and then 
use the servo for other operations. A standard servo has a range of about 
180 degrees and 2048 positions in that range it can be set to. When you first set 
connection to the servo using SetPort(), if we have not specified a position, 
all servos will go to the middle position (1024). After setting a servo position, 
the program needs to wait for the servo to get to the desired position. Servos 
are typically used in arms, or claws of the robot that require high precision. 

Attribute: Author Sahana Tambi Sathyanarayana

Attribute: Example

use Libraries.Robots.Servo

// Declaraing the servo
Servo servo
// Set connection with the servo connected to port 1
servo:SetPort(1)
// Move the servo to position 2000
servo:MoveToPosition(2000)
// Switch off the servo 
servo:Off()
 
*/

class Servo is Connectable

/*
        This action connects the servo to the specified port.
        Attribute: Parameter port to which we intend to connect the servo to

        Attribute: Example
        
        Servo servo
        //servo is connected to port 0
        servo:SetPort(0)
        
    */
    system action SetPort(integer port)
/*
        This action returns the port to which the servo is connected to.

        Attribute: Returns the port to which the servo is connected to

        Attribute: Example
        
        Servo servo
        servo:SetPort(0)
        integer port = servo:GetPort()
    */
    system action GetPort() returns integer
/* 
        This action switches off the servo. Once the servo is swtiched 

        Attribute: Example
        
        Servo servo
        servo:SetPort(1)
        servo:MoveToPosition(210)
        //servo is swtiched off
        servo:Off()
*/
    system action Off()

/*
        This action moves the servo to the specified position.
        The value of pos must be in the range 0 to 2047
        Servo has mechanical stops at 0 and 180 degrees, sometimes it is possible 
        to “overdrive” a servo. This means the mechanical stops are preventing 
        the servo from reaching the desired position. 
        Overdriving causes the servo to buzz or hum and can cause permanent 
        damage to the servo.

        Attribute: Parameter position to which we intend to move the servo to

        Attribute: Example
        
        Servo servo
        servo:SetPort(0)
        //servo connected to port 0 is moved to position 1310
        servo:MoveToPosition(1310)
    */

    system action MoveToPosition(integer position) 

/*
        This action connects the servo to the specified port.
        Attribute: Returns the current position of the servo.

        Attribute: Example
        
        Servo servo
        servo:SetPort(0)
        //servo is connected to port 0
        intger position
        // current position of the servo is returned to integer position
        position = s:GetPosition
    */
    system action GetPosition() returns integer
end