package Libraries.Web

use Libraries.Web.WebTag
use Libraries.Web.Attribute
use Libraries.Web.Attributes

/*
The PerformanceGauge class represents HTML's (Hypertext Markup Language) meter tag which is
used to display a bar gauge that shows performace. This is not to show progress, 
use the ProgressBar class for that.
You can find more information about this tag at: 
        <a href="http://www.w3schools.com/tags/tag_meter.asp">The meter attribute</a>.

Attribute: Example
use Libraries.Web.All
class Main
   action main
      WebPage page
      
      PerformanceGauge pGauge
      pGauge:SetHighValue("8")
      pGauge:SetLowValue("2")
      pGauge:SetMaxValue("10")
      pGauge:SetMinValue("0")
      pGauge:SetCurrentValue("5")

      page:AddToBody(pGauge)
      output page:Generate()
   end
end
*/
class PerformanceGauge is WebTag
    constant text high = "high"
    constant text low = "low"
    constant text max = "max"
    constant text min = "min"
    constant text currentValue = "value"
    

    /*
        This action sets the high value. The high value is a limit that will 
        change the color of the PerformanceGauge if the current value exceeds 
        the high value.

        Attribute: Example
        use Libraries.Web.PerformanceGauge
        PerformanceGauge pGauge
        pGauge:SetHighValue("8")
    */
    action SetHighValue(text value)
        AddAttribute(high, value)
    end


    /*
        This action gets the set high value for the PerformanceGauge.

        Attribute: Returns The high value for the PerformanceGauge.

        Attribute: Example
        use Libraries.Web.Attribute
        use Libraries.Web.PerformanceGauge
        PerformanceGauge pGauge
        Attribute highValue = pGauge:GetHighValue()
    */
    action GetHighValue returns Attribute
        return me:GetAttribute(high)
    end

    /*
        This action sets the low value. The low value is a limit that will 
        change the color of the PerformanceGauge if the current value exceeds 
        the low value.

        Attribute: Example
        use Libraries.Web.PerformanceGauge
        PerformanceGauge pGauge
        pGauge:SetLowValue("2")
    */
    action SetLowValue(text value)
        AddAttribute(low, value)
    end

    /*
        This action gets the set low value for the PerformanceGauge.

        Attribute: Returns The low value for the PerformanceGauge.

        Attribute: Example
        use Libraries.Web.PerformanceGauge
        use Libraries.Web.Attribute
        PerformanceGauge pGauge
        Attribute lowValue = pGauge:GetLowValue()
    */
    action GetLowValue returns Attribute
        return  me:GetAttribute(low)
    end

    /*
        This action sets the max value. The max value is the upper limit of the 
        PerformanceGauge. The current value will be divided by this number 
        minus the min value to fill in the bar that percentage amount.

        Attribute: Example
        use Libraries.Web.PerformanceGauge
        PerformanceGauge pGauge
        pGauge:SetMaxValue("10")
    */
    action SetMaxValue(text value)
        AddAttribute(max, value)
    end

    /*
        This action gets the set max value for the PerformanceGauge.

        Attribute: Returns The max value for the PerformanceGauge.

        Attribute: Example
        use Libraries.Web.Attribute
        use Libraries.Web.PerformanceGauge
        PerformanceGauge pGauge
        Attribute maxValue = pGauge:GetMaxValue()
    */
    action GetMaxValue returns Attribute
        return me:GetAttribute(max)
    end

    /*
        This action sets the min value. The min value is the lower limit of the 
        PerformanceGauge. The current value will be divided by the max number 
        minus the this value to fill in the bar that percentage amount.

        Attribute: Example
        use Libraries.Web.Attribute
        use Libraries.Web.PerformanceGauge
        PerformanceGauge pGauge
        pGauge:SetMinValue("0")
    */
    action SetMinValue(text value)
        AddAttribute(min, value)
    end

    /*
        This action gets the set min value for the PerformanceGauge.

        Attribute: Returns The min value for the PerformanceGauge.

        Attribute: Example
        use Libraries.Web.Attribute
        use Libraries.Web.PerformanceGauge
        PerformanceGauge pGauge
        Attribute minValue = pGauge:GetMinValue()
    */
    action GetMinValue returns Attribute
        return me:GetAttribute(min)
    end

    /*
        This action sets the current value. The current value is value that will 
        be shown where it falls within the max and min values to make the 
        PerformanceGauge. The current value will be divided by the max number 
        minus the min value to fill in the bar that percentage amount.

        Attribute: Example
        use Libraries.Web.PerformanceGauge
        PerformanceGauge pGauge
        pGauge:SetCurrentValue("5")
    */
    action SetCurrentValue(text value)
        AddAttribute(currentValue, value)
    end

    /*
        This action gets the set current value for the PerformanceGauge.

        Attribute: Returns The current value for the PerformanceGauge.

        Attribute: Example
        use Libraries.Web.Attribute
        use Libraries.Web.PerformanceGauge
        PerformanceGauge pGauge
        Attribute currentValue = pGauge:GetCurrentValue()
    */
    action GetCurrentValue returns Attribute
        return me:GetAttribute(currentValue)
    end

    action Generate returns text
        text result = "<meter " 
        Attributes attributes = parent:WebTag:GetAttributes()
        attributeText = attributes:Generate()
        result = result + attributeText + ">"
        result = result + me:GenerateNestedTags()
        result = result + GetDescription() + "</meter>"
        return result
    end
end