package Libraries.Language.Compile

use Libraries.Containers.Blueprints.Iterator
use Libraries.Containers.HashTable
use Libraries.Containers.List

class HashListIterator<T> is Iterator<T>
    HashTable<text, List<T>> errorsPerFile
    Iterator<List<T>> files = undefined
    Iterator<T> currentFile = undefined
    T error = undefined

    action GetHash returns HashTable<text, List<T>>
        return me:errorsPerFile
    end

    action SetHash(HashTable<text, List<T>> errors)
        me:errorsPerFile = errors
        Rewind()
    end

    action HasNext returns boolean
        if files = undefined or currentFile = undefined
            return false
        end
        
        if currentFile:HasNext()
            return true
        else 
            if not files:HasNext()
                return false
            end
            List<T> list = files:Next()
            currentFile = list:GetIterator()
            if currentFile:HasNext()
                return true
            end
        end

        return false
    end

    action Next returns T
        if files = undefined or currentFile = undefined
            return undefined
        end

        if currentFile not= undefined
            if currentFile:HasNext()
                error = currentFile:Next()
                return error
            else //the current file is done. is there another file?
                if files:HasNext()
                    List<T> list = files:Next()
                    currentFile = list:GetIterator()
                    error = currentFile:Next()
                    return error
                else 
                    currentFile = undefined
                    files = undefined
                end
            end
        end
        return undefined
    end

    action GetCurrent returns T
        if error = undefined
            return Next()
        else 
            return error
        end
    end

    action Rewind
        files = errorsPerFile:GetValueIterator()
        if files not= undefined
            if files:HasNext()
                List<T> errors = files:Next()
                if errors not= undefined
                    currentFile = errors:GetIterator()
                end
            end
        end
    end
end