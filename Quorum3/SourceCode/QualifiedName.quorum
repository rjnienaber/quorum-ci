package Libraries.Language.Compile

use Libraries.Containers.List
use Libraries.Containers.Blueprints.Iterator
use Libraries.Language.Compile.Location

class QualifiedName is Location
    List<text> names
    List<text> generics

    action Add(text name)
        names:Add(name)
    end

    action AddGeneric(text generic)
        generics:Add(generic)
    end

    action GetNumberGenerics returns integer
        return generics:GetSize()
    end

    action GetGeneric(integer location) returns text
        return generics:Get(location)
    end

    action GetSize returns integer
        return names:GetSize()
    end

    /*
        This action returns true if this is an all request. For example, 
        this might take the form of Libraries.Containers.all, which would
        be a request to include all containers in that package in the symbol
        table for the current class.
    */
    action IsAll returns boolean
        text name = GetName()

        if name = "all"
            return true
        else
            return false
        end
    end

    /*
        This returns the static key for the qualified name. If this
        action contains information about generic types, they are ignored. 
        The reason for this is because generics are not related to the generation
        of static keys, as they are unique identifiers based on package
        and class name.
    */
    action GetStaticKey returns text
        key = ""
        i = 0
        repeat GetSize() times
            key = key + names:Get(i)

            if i < GetSize() - 1
                key = key + "."
            end
            i = i + 1
        end

        return key
    end

    action GetStaticKeyNoAll returns text
        if not IsAll()
            return GetStaticKey()
        end

        key = ""
        i = 0
        repeat GetSize() - 1 times
            key = key + names:Get(i)

            if i < GetSize() - 2
                key = key + "."
            end
            i = i + 1
        end

        return key
    end

    /* This action returns the final value in the qualified name. So, for example,
        if the qualified name is Libraries.Language.Object, this action would
        return object.
    */
    action GetName returns text
        text name = names:Get(names:GetSize() - 1)
        return name
    end

    action GetPath returns text
        key = ""
        i = 0
        repeat GetSize() times
            key = key + names:Get(i)

            if i < GetSize() - 1
                key = key + "/"
            end
            i = i + 1
        end

        return key
    end

    action Empty
        names:Empty()
    end

    /*
        This action returns the full static key what a class would
        be given this qualified name and a name text field.
    */
    action GetClassStaticKey(text name) returns text
        text pack = me:GetStaticKey()
        if pack:IsEmpty()
            return name
        end
        return pack + "." + name
    end


    action Copy returns QualifiedName
        QualifiedName new
        Iterator<text> it = names:GetIterator()
        repeat while it:HasNext()
            text value = it:Next()
            new:Add(value)
        end

        Iterator<text> gen = generics:GetIterator()
        repeat while gen:HasNext()
            text value = gen:Next()
            new:AddGeneric(value)
        end
        return new
    end
end