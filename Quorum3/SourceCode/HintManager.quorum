package Libraries.Language.Compile

use Libraries.Containers.HashTable
use Libraries.Containers.List
use Libraries.System.File
use Libraries.Containers.Blueprints.Iterator

class HintManager 
    integer numberOfHints = 0
    
    /*
     * Records the hintsPerFile using the full path of the file as
     * the key and the list for that file as the value.
     */
    HashTable<text, List<Hint>> hintsPerFile
    File currentFile = undefined
    text fileNameKey = ""

    action Add(Hint error) 
        if error not= undefined
            numberOfHints = numberOfHints + 1
            List<Hint> l = hintsPerFile:GetValue(error:GetStaticKey())
            if(l not= undefined) 
                l:Add(error)
            else 
                List<Hint> l2
                l = l2
                l:Add(error)
                hintsPerFile:Add(error:GetStaticKey(), l)
            end
        end
    end

     action RemoveErrorsAtKey(text key) 
        if hintsPerFile:HasKey(key)
            List<Hint> list = hintsPerFile:RemoveKey(key)
            numberOfHints = numberOfHints - list:GetSize()
        end
    end

    action HasHints returns boolean
        return numberOfHints = 0
    end
    
    action GetIterator returns Iterator<Hint>
        HashListIterator<Hint> iterator
        iterator:SetHash(me:hintsPerFile)
        return iterator
    end

    /*
     * Empties the list of compiler hintsPerFile
     */
    action Empty
        numberOfHints = 0
        hintsPerFile:Empty()
    end
end