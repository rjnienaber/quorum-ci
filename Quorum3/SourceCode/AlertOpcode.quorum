package Libraries.Language.Compile.Translate

use Libraries.Language.Compile.Symbol.Type
use Libraries.Containers.List
use Libraries.Containers.Blueprints.Iterator
use Libraries.Language.Compile.Symbol.Action
use Libraries.Language.Compile.Translate.JavaBytecodeOpcodes

class AlertOpcode is QuorumOpcode

    QuorumOpcode opcode = undefined
    JavaBytecodeOpcodes opcodes
    QuorumBytecodeConverter converter
    
    action SetBytecodeWriteOffsetToAllChildren(integer offset)
        SetBytecodeWriteOffset(offset)
        if opcode not= undefined
            opcode:SetBytecodeWriteOffsetToAllChildren(offset)
        end
    end

    action SetMethodWriterToAllChildren(JavaBytecodeMethodWriter writer)
        SetMethodWriter(writer)
        if opcode not= undefined
            opcode:SetMethodWriterToAllChildren(writer)
        end
    end

    action GetOpcode returns QuorumOpcode
        return opcode
    end

    action SetOpcode(QuorumOpcode op)
        opcode = op
    end

    action Write
        VisitLineNumber()
        JavaBytecodeMethodWriter methodWriter = GetMethodWriter()

        Type type = opcode:GetType()
        text error = "quorum/Libraries/Language/Errors/Error"
        if type:IsText() //wrap this into an Error class
            methodWriter:VisitType(opcodes:GetNew(), error)
            methodWriter:VisitInstruction(opcodes:GetDuplicate())
            methodWriter:VisitInstruction(opcodes:GetDuplicate())
            methodWriter:VisitMethodInvoke(opcodes:GetInvokeSpecial(), error, "<init>", "()V", false)
        end

        opcode:Write()

        if type:IsText()
            methodWriter:VisitMethodInvoke(opcodes:GetInvokeVirtual(), error, "SetErrorMessage", "(Ljava/lang/String;)V", false)
        end
        methodWriter:VisitInstruction(opcodes:GetObjectThrow())
    end

    action WriteJavaScript returns text
        return ""
    end

    action GetTemplateCopy returns QuorumOpcode
        AlertOpcode op
        return op
    end
end