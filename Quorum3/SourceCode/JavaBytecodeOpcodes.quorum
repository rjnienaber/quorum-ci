package Libraries.Language.Compile.Translate

/*
    This class represents raw bytecode constants taken from the ASM 5 java
    bytecode library. What little documentation exists for them can be found
    here: http://asm.ow2.org/asm50/javadoc/user/org/objectweb/asm/Opcodes.html#V1_8

    In the future, this constants should be changed to make more sense in 
    English. In the meantime, they are private and intentionally match ASM.
    Public actions giving values back should use more realistic English
    phrases.
*/
class JavaBytecodeOpcodes
    constant integer ASM4 = 262144
    constant integer ASM5 = 327680
    constant integer V1_1 = 196653
    constant integer V1_2 = 46
    constant integer V1_3 = 47
    constant integer V1_4 = 48
    constant integer V1_5 = 49
    constant integer V1_6 = 50
    constant integer V1_7 = 51
    constant integer V1_8 = 52
    constant integer ACC_PUBLIC = 1
    constant integer ACC_PRIVATE = 2
    constant integer ACC_PROTECTED = 4
    constant integer ACC_STATIC = 8
    constant integer ACC_FINAL = 16
    constant integer ACC_SUPER = 32
    constant integer ACC_SYNCHRONIZED = 32
    constant integer ACC_VOLATILE = 64
    constant integer ACC_BRIDGE = 64
    constant integer ACC_VARARGS = 128
    constant integer ACC_TRANSIENT = 128
    constant integer ACC_NATIVE = 256
    constant integer ACC_INTERFACE = 512
    constant integer ACC_ABSTRACT = 1024
    constant integer ACC_STRICT = 2048
    constant integer ACC_SYNTHETIC = 4096
    constant integer ACC_ANNOTATION = 8192
    constant integer ACC_ENUM = 16384
    constant integer ACC_MANDATED = 32768
    constant integer ACC_DEPRECATED = 131072
    constant integer T_BOOLEAN = 4
    constant integer T_CHAR = 5
    constant integer T_FLOAT = 6
    constant integer T_DOUBLE = 7
    constant integer T_BYTE = 8
    constant integer T_SHORT = 9
    constant integer T_INT = 10
    constant integer T_LONG = 11
    constant integer H_GETFIELD = 1
    constant integer H_GETSTATIC = 2
    constant integer H_PUTFIELD = 3
    constant integer H_PUTSTATIC = 4
    constant integer H_INVOKEVIRTUAL = 5
    constant integer H_INVOKESTATIC = 6
    constant integer H_INVOKESPECIAL = 7
    constant integer H_NEWINVOKESPECIAL = 8
    constant integer H_INVOKEINTERFACE = 9
    constant integer F_NEW = -1
    constant integer F_FULL = 0
    constant integer F_APPEND = 1
    constant integer F_CHOP = 2
    constant integer F_SAME = 3
    constant integer F_SAME1 = 4
    constant integer TOP = 0
    constant integer INTEGER = 0
    constant integer FLOAT = 0
    constant integer DOUBLE = 0
    constant integer LONG = 0
    constant integer NULL = 0
    constant integer UNINITIALIZED_THIS = 0
    constant integer NOP = 0
    constant integer ACONST_NULL = 1
    constant integer ICONST_M1 = 2
    constant integer ICONST_0 = 3
    constant integer ICONST_1 = 4
    constant integer ICONST_2 = 5
    constant integer ICONST_3 = 6
    constant integer ICONST_4 = 7
    constant integer ICONST_5 = 8
    constant integer LCONST_0 = 9
    constant integer LCONST_1 = 10
    constant integer FCONST_0 = 11
    constant integer FCONST_1 = 12
    constant integer FCONST_2 = 13
    constant integer DCONST_0 = 14
    constant integer DCONST_1 = 15
    constant integer BIPUSH = 16
    constant integer SIPUSH = 17
    constant integer LDC = 18
    constant integer ILOAD = 21
    constant integer LLOAD = 22
    constant integer FLOAD = 23
    constant integer DLOAD = 24
    constant integer ALOAD = 25
    constant integer IALOAD = 46
    constant integer LALOAD = 47
    constant integer FALOAD = 48
    constant integer DALOAD = 49
    constant integer AALOAD = 50
    constant integer BALOAD = 51
    constant integer CALOAD = 52
    constant integer SALOAD = 53
    constant integer ISTORE = 54
    constant integer LSTORE = 55
    constant integer FSTORE = 56
    constant integer DSTORE = 57
    constant integer ASTORE = 58
    constant integer IASTORE = 79
    constant integer LASTORE = 80
    constant integer FASTORE = 81
    constant integer DASTORE = 82
    constant integer AASTORE = 83
    constant integer BASTORE = 84
    constant integer CASTORE = 85
    constant integer SASTORE = 86
    constant integer POP = 87
    constant integer POP2 = 88
    constant integer DUP = 89
    constant integer DUP_X1 = 90
    constant integer DUP_X2 = 91
    constant integer DUP2 = 92
    constant integer DUP2_X1 = 93
    constant integer DUP2_X2 = 94
    constant integer SWAP = 95
    constant integer IADD = 96
    constant integer LADD = 97
    constant integer FADD = 98
    constant integer DADD = 99
    constant integer ISUB = 100
    constant integer LSUB = 101
    constant integer FSUB = 102
    constant integer DSUB = 103
    constant integer IMUL = 104
    constant integer LMUL = 105
    constant integer FMUL = 106
    constant integer DMUL = 107
    constant integer IDIV = 108
    constant integer LDIV = 109
    constant integer FDIV = 110
    constant integer DDIV = 111
    constant integer IREM = 112
    constant integer LREM = 113
    constant integer FREM = 114
    constant integer DREM = 115
    constant integer INEG = 116
    constant integer LNEG = 117
    constant integer FNEG = 118
    constant integer DNEG = 119
    constant integer ISHL = 120
    constant integer LSHL = 121
    constant integer ISHR = 122
    constant integer LSHR = 123
    constant integer IUSHR = 124
    constant integer LUSHR = 125
    constant integer IAND = 126
    constant integer LAND = 127
    constant integer IOR = 128
    constant integer LOR = 129
    constant integer IXOR = 130
    constant integer LXOR = 131
    constant integer IINC = 132
    constant integer I2L = 133
    constant integer I2F = 134
    constant integer I2D = 135
    constant integer L2I = 136
    constant integer L2F = 137
    constant integer L2D = 138
    constant integer F2I = 139
    constant integer F2L = 140
    constant integer F2D = 141
    constant integer D2I = 142
    constant integer D2L = 143
    constant integer D2F = 144
    constant integer I2B = 145
    constant integer I2C = 146
    constant integer I2S = 147
    constant integer LCMP = 148
    constant integer FCMPL = 149
    constant integer FCMPG = 150
    constant integer DCMPL = 151
    constant integer DCMPG = 152
    constant integer IFEQ = 153
    constant integer IFNE = 154
    constant integer IFLT = 155
    constant integer IFGE = 156
    constant integer IFGT = 157
    constant integer IFLE = 158
    constant integer IF_ICMPEQ = 159
    constant integer IF_ICMPNE = 160
    constant integer IF_ICMPLT = 161
    constant integer IF_ICMPGE = 162
    constant integer IF_ICMPGT = 163
    constant integer IF_ICMPLE = 164
    constant integer IF_ACMPEQ = 165
    constant integer IF_ACMPNE = 166
    constant integer GOTO = 167
    constant integer JSR = 168
    constant integer RET = 169
    constant integer TABLESWITCH = 170
    constant integer LOOKUPSWITCH = 171
    constant integer IRETURN = 172
    constant integer LRETURN = 173
    constant integer FRETURN = 174
    constant integer DRETURN = 175
    constant integer ARETURN = 176
    constant integer RETURN = 177
    constant integer GETSTATIC = 178
    constant integer PUTSTATIC = 179
    constant integer GETFIELD = 180
    constant integer PUTFIELD = 181
    constant integer INVOKEVIRTUAL = 182
    constant integer INVOKESPECIAL = 183
    constant integer INVOKESTATIC = 184
    constant integer INVOKEINTERFACE = 185
    constant integer INVOKEDYNAMIC = 186
    constant integer NEW = 187
    constant integer NEWARRAY = 188
    constant integer ANEWARRAY = 189
    constant integer ARRAYLENGTH = 190
    constant integer ATHROW = 191
    constant integer CHECKCAST = 192
    constant integer INSTANCEOF = 193
    constant integer MONITORENTER = 194
    constant integer MONITOREXIT = 195
    constant integer MULTIANEWARRAY = 197
    constant integer IFNULL = 198
    constant integer IFNONNULL = 199


    action GetJavaVersion(integer version) returns integer
        if version = 1
            return V1_1
        elseif version = 2
            return V1_2
        elseif version = 3
            return V1_3
        elseif version = 4
            return V1_4
        elseif version = 5
            return V1_5
        elseif version = 6
            return V1_6
        elseif version = 7
            return V1_7
        elseif version = 8
            return V1_8
        end
        
        alert("The value of " + version + " is not a valid version of Java. The values 1 - 8 are allowed.")
    end

    action GetPublic returns integer
        return ACC_PUBLIC
    end

    action GetProtected returns integer
        return ACC_PROTECTED
    end

    action GetPrivate returns integer
        return ACC_PRIVATE
    end

    action GetStatic returns integer
        return ACC_STATIC
    end

    action GetFinal returns integer
        return ACC_FINAL
    end

    action GetSuper returns integer
        return ACC_SUPER
    end
end