use Libraries.Containers.Array
use Libraries.Compute.Math

class ComparativeTests 
    DataSamples one
    DataSamples two

    action setOne(DataSamples one)    
        me:one = one
    end

    action setTwo(DataSamples two)
        me:two = two
    end

    action getOne returns DataSamples
        return one
    end

    action getTwo returns DataSamples
        return two
    end
    

    action IndependentTtest returns number 
        number mean1 = one:Mean()
        number mean2 = two:Mean()

        number pooledVariance = PooledVariance()

        Math math
        number t = (mean1 - mean2) / (math:SquareRoot(pooledVariance * ((1.0 / one:Size()) + (1.0 / two:Size()))))

        return t
    end

    action PooledVariance returns number
        number v1 = one:Variance()
        number v2 = two:Variance()

        number pvariance = (((one:Size() - 1) * v1) + ((two:Size() - 1) * v2)) / (one:Size() + two:Size() - 2)

        return pvariance
    end

end