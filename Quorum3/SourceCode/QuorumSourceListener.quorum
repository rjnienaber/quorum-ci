package Libraries.Language.Compile

use Libraries.Language.Compile.Context.all
use Libraries.Language.Compile.Symbol.TypeChecker
use Libraries.System.File
use Libraries.Language.Compile.Symbol.SymbolTable

class QuorumSourceListener
    SymbolTable symbolTable = undefined
    TypeChecker typeChecker = undefined
    File file = undefined
    CompilerErrorManager compilerErrorManager = undefined

    action GetCompilerErrorManager returns CompilerErrorManager
        return compilerErrorManager
    end

    action SetCompilerErrorManager(CompilerErrorManager errors)
        compilerErrorManager = errors
    end

    action GetTypeChecker returns TypeChecker
        return typeChecker
    end

    action SetTypeChecker(TypeChecker checker)
        typeChecker = checker
    end

    action GetSymbolTable returns SymbolTable
        return symbolTable
    end

    action SetSymbolTable(SymbolTable table)
        symbolTable = table
    end
    
    action GetFile returns File
        return file
    end

    action SetFile(File file)
        me:file = file
    end

    action EnterNoActionsNoClass(NoActionsNoClassContext context) end
    action ExitNoActionsNoClass(NoActionsNoClassContext context) end

    action EnterActionsNoClass(ActionsNoClassContext context) end
    action ExitActionsNoClass(ActionsNoClassContext context) end
    
    action EnterNumber(NumberContext context) end
    action ExitNumber(NumberContext context) end

    action EnterParenthesisExpression(ParenthesisContext context) end
    action ExitParenthesisExpression(ParenthesisContext context) end

    action EnterCast(CastContext context) end
    action ExitCast(CastContext context) end

    action EnterSayStatement(SayContext context) end
    action ExitSayStatement(SayContext context) end

    action EnterCheckStatement(CheckContext context) end
    action ExitCheckStatement(CheckContext context) end

    action EnterParentFieldAccess(ParentFieldAccessContext context) end
    action ExitParentFieldAccess(ParentFieldAccessContext context) end

    action EnterFullClassDeclaration(FullClassDeclarationContext ctx) end
    action ExitFullClassDeclaration(FullClassDeclarationContext ctx) end

    action EnterNoClassDeclaration(NoClassDeclarationContext ctx) end
    action ExitNoClassDeclaration(NoClassDeclarationContext ctx)  end

    action EnterFormalParameter(FormalParameterContext context) end
    action ExitFormalParameter(FormalParameterContext context) end

    action EnterStatement(StatementContext context) end
    action ExitStatement(StatementContext context) end

    action EnterMe(MeContext context) end
    action ExitMe(MeContext context) end

    action EnterActionExpressionList(ActionExpressionListContext context) end
    action ExitActionExpressionList(ActionExpressionListContext context) end

    action EnterStart(StartContext context) end
    action ExitStart(StartContext context) end

    action EnterText(TextContext context) end
    action ExitText(TextContext context) end

    action EnterOr(AndOrContext context) end
    action ExitOr(AndOrContext context) end

    action EnterOutputStatement(OutputContext context) end
    action ExitOutputStatement(OutputContext context) end

    action EnterSystemAction(ActionContext context) end
    action ExitSystemAction(ActionContext context) end

    action EnterConstructor(ConstructorContext context) end
    action ExitConstructor(ConstructorContext context) end

    action EnterBlueprintAction(ActionContext context) end
    action ExitBlueprintAction(ActionContext context) end

    action EnterActionHeader(ActionContext context) end
    action ExitActionHeader(ActionContext context) end

    action EnterAction(ActionContext context) end
    action ExitAction(ActionContext context) end

    action EnterGenericStatement(GenericContext context) end
    action ExitGenericStatement(GenericContext context) end

    action EnterAnd(AndOrContext context) end
    action ExitAnd(AndOrContext context) end

    action EnterUndefined(UndefinedContext context) end
    action ExitUndefined(UndefinedContext context) end

    action EnterIs(IsContext context) end
    action ExitIs(IsContext context) end

    action EnterIfStatement(IfContext context) end
    action ExitIfStatement(IfContext context) end

    action EnterElseIfStatement(IfContext context) end
    action ExitElseIfStatement(IfContext context) end

    action EnterElseStatement(IfContext context) end
    action ExitElseStatement(IfContext context) end

    action EnterAccessModifier(AccessModifierContext context) end
    action ExitAccessModifier(AccessModifierContext context) end

    action EnterBlock(BlockContext context) end
    action ExitBlock(BlockContext context) end

    action EnterClassStatements(ClassStatementsContext context) end
    action ExitClassStatements(ClassStatementsContext context) end

    action EnterQualifiedName(QualifiedNameContext context) end
    action ExitQualifiedName(QualifiedNameContext context) end

    action EnterLoopStatement(LoopContext context) end
    action ExitLoopStatement(LoopContext context) end

    action EnterAssignmentDeclaration(AssignmentDeclaractionContext context) end
    action ExitAssignmentDeclaration(AssignmentDeclaractionContext context) end

    action EnterInheritStatements(InheritStatementsContext context) end
    action ExitInheritStatements(InheritStatementsContext context) end

    action EnterInheritStatement(InheritStatementContext context) end
    action ExitInheritStatement(InheritStatementContext context) end

    action EnterDetectStatement(DetectStatementContext context) end
    action ExitDetectStatement(DetectStatementContext context) end

    action EnterAlwaysStatement(AlwaysStatementContext context) end
    action ExitAlwaysStatement(AlwaysStatementContext context) end

    action EnterAddition(AdditionContext addition) end
    action ExitAddition(AdditionContext addition) end

    action EnterReturnStatement(ReturnContext context) end
    action ExitReturnStatement(ReturnContext context) end

    action EnterInput(InputContext context) end
    action ExitInput(InputContext context) end

    action EnterInputNoParameters(InputContext context) end
    action ExitInputNoParameters(InputContext context) end

    action EnterMultiplication(MultiplicationContext context) end
    action ExitMultiplication(MultiplicationContext context) end

    action EnterMinus(UnaryMinusContext context) end
    action ExitMinus(UnaryMinusContext context) end

    action EnterBoolean(BooleanContext context) end
    action ExitBoolean(BooleanContext context) end

    action EnterAlertStatement(AlertContext context) end
    action ExitAlertStatement(AlertContext context) end

    action EnterUse(UseContext context) end
    action ExitUse(UseContext context) end

    action EnterNot(NotContext context) end
    action ExitNot(NotContext context) end

    action EnterGenericDeclaration(GenericDeclarationContext context) end
    action ExitGenericDeclaration(GenericDeclarationContext context) end

    action EnterClassType(ClassTypeContext context) end
    action ExitClassType(ClassTypeContext context) end

    action EnterEquals(EqualsContext context) end
    action ExitEquals(EqualsContext context) end

    action EnterInequality(InequalityContext context) end
    action ExitInequality(InequalityContext context) end

    action EnterInteger(IntegerContext int) end
    action ExitInteger(IntegerContext int) end

    action EnterPackageRule(PackageContext context) end
    action ExitPackageRule(PackageContext context) end

    action EnterNormalAssignment(NormalAssignmentContext context) end
    action ExitNormalAssignment(NormalAssignmentContext context) end

    action EnterParentAssignment(ParentAssignmentContext context) end
    action ExitParentAssignment(ParentAssignmentContext context) end

    action EnterObjectAssignment(ObjectAssignmentContext context) end
    action ExitObjectAssignment(ObjectAssignmentContext context) end

    action EnterNoTypeAssignment(NoTypeAssignmentContext context) end
    action ExitNoTypeAssignment(NoTypeAssignmentContext context) end

    action EnterMeVariableAccess(MeVariableAccessContext context) end
    action ExitMeVariableAccess(MeVariableAccessContext context) end

    action EnterVariableSoloFunctionCall(VariableFunctionCallContext context) end
    action ExitVariableSoloFunctionCall(VariableFunctionCallContext context) end

    action EnterParentVariableSoloFunctionCall(ParentVariableFunctionCallContext context) end
    action ExitParentVariableSoloFunctionCall(ParentVariableFunctionCallContext context) end

    action EnterVariableFunctionCall(VariableFunctionCallContext context) end
    action ExitVariableFunctionCall(VariableFunctionCallContext context) end

    action EnterParentVariableFunctionCall(ParentVariableFunctionCallContext context) end
    action ExitParentVariableFunctionCall(ParentVariableFunctionCallContext context) end

    action EnterActionCall(ActionCallContext ctx) end
    action ExitActionCall(ActionCallContext ctx) end

    /*
        This action is called only under the condition that we are receiving
        error message events from the underlying parser technology (e.g., ANTLR).
        If we are, the messages will be propogated. Generally, this 
        action does not need to be overriden.
    */
    action SyntaxError(CompilerError error) 
        compilerErrorManager:Add(error)
    end
end