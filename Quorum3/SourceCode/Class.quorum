package Libraries.Language.Compile.Symbol

use Libraries.Language.Compile.QualifiedName
use Libraries.Language.Compile.CompilerError
use Libraries.Containers.HashTable
use Libraries.Language.Compile.Location

class Class is Symbol
    QualifiedName packageName
    HashTable<text, Action> actions
    HashTable<text, Variable> fields
    Action constructor = undefined

    action Add(Action method) returns CompilerError
        if not IsDefined(method)
            actions:Add(method:GetStaticKey(), method)
            return undefined
        end

        CompilerError error
        error:SetLineNumber(method:GetLineNumber())
        error:SetFile(method:GetFile())
        error:SetErrorMessage("Action " + method:GetDisplayName() + " has already been defined.")

        return error
    end

    action Add(Variable variable) returns CompilerError
        if fields:HasKey(variable:GetStaticKey())
            CompilerError error
            error:SetLineNumber(variable:GetLineNumber())
            error:SetFile(variable:GetFile())
            error:SetErrorMessage("Variable " + variable:GetDisplayName() + " has already been defined in class " + me:GetDisplayName())
            return error
        end
        variable:SetIsField(true)
        fields:Add(variable:GetStaticKey(), variable)
        return undefined
    end

    action GetVariable(text key) returns Variable
        return fields:GetValue(key)
    end

    action GetAction(text key) returns Action
        return actions:GetValue(key)
    end

    action HasAction(text key) returns boolean
        return actions:HasKey(key)
    end

    private action IsDefined(Action method) returns boolean
        return actions:HasKey(method:GetStaticKey())
    end

    /*
        This action returns whether or not the class has an explicity constructor
        defined. If it returns true, the user has defined a constructor. If
        it returns false, they have not.
    */
    action HasConstructor returns boolean
        return constructor not= undefined
    end

    action GetConstructor returns Action
        return constructor
    end

    action SetConstructor(Action method) 
        constructor = method
    end

    action GetStaticKey returns text
        text pack = packageName:GetStaticKey()
        if pack:IsEmpty()
            return me:GetName()
        end
        return pack + "." + me:GetName()
    end

    action GetDisplayName returns text
        return GetStaticKey()
    end

    action GetPackage returns QualifiedName
        return packageName:Copy()
    end

    action SetPackage(QualifiedName pack)
        packageName = pack:Copy()
    end
end