package Libraries.Language.Compile

use Libraries.Language.Compile.Context.all
use Libraries.Language.Compile.Translate.JavaBytecodeClassWriter
use Libraries.Language.Compile.Translate.JavaBytecodeMethodWriter
use Libraries.Language.Compile.Translate.QuorumBytecodeConverter
use Libraries.Language.Compile.Translate.JavaBytecodeOpcodes
use Libraries.Language.Compile.Symbol.all

use Libraries.Containers.Array
use Libraries.System.File

class QuorumBytecodeListener is QuorumSourceListener 
    QualifiedName packageValue = undefined
    JavaBytecodeClassWriter classWriter = undefined
    JavaBytecodeClassWriter interfaceWriter = undefined
    QuorumBytecodeConverter converter
    JavaBytecodeOpcodes opcodes
    Class currentClass = undefined
    constant text BUILD = "TestBuild"
    constant text RUN = "TestRun"
    constant text QUORUM = "quorum"

    constant text JAVA_THROWABLE = "java/lang/Throwable"
    constant text JAVA_OBJECT = "java/lang/Object"
    constant text QUORUM_ERROR = "quorum/Libraries/Language/Errors/Error"
    boolean isNormalAction = false
    boolean isSystemAction = false
    boolean isBluePrintAction = false

    private action SetNormalAction 
        isNormalAction = true
        isSystemAction = false
        isBluePrintAction = false
    end

    private action SetSystemAction 
        isNormalAction = false
        isSystemAction = true
        isBluePrintAction = false
    end

    private action SetBlueprintAction 
        isNormalAction = false
        isSystemAction = false
        isBluePrintAction = true
    end

    private action ClearActionState
        isNormalAction = false
        isSystemAction = false
        isBluePrintAction = false
    end

    action ExitPackageRule(PackageContext context) 
        packageValue = context:name
    end

    action EnterFullClassDeclaration(FullClassDeclarationContext context) 
        JavaBytecodeClassWriter newClassWriter
        JavaBytecodeClassWriter newIinterfaceWriter

        classWriter = newClassWriter
        interfaceWriter = newIinterfaceWriter

        text name = context:className
        SymbolTable table = me:GetSymbolTable()
        
        text staticKey = packageValue:GetStaticKey() + "." + name
        currentClass = table:GetClass(staticKey)


        integer version = opcodes:GetJavaVersion(8)
        integer access = opcodes:GetPublic() + opcodes:GetSuper()
        text interfaceName = converter:ConvertClassNameToInterfaceName(name)
        Array<text> interfaces
        interfaces:Add(interfaceName)
        text null = undefined //temporary workaround for Bug#97 https://quorum.atlassian.net/browse/QUOR-97
        //once fully integrated, check if this is a the Quorum error class or a subclass. For now, just weave in Object.
        classWriter:Visit(version, access, staticKey, null, JAVA_OBJECT, interfaces)
    end


    action ExitFullClassDeclaration(FullClassDeclarationContext context) 
        if currentClass not= undefined
            classWriter:VisitEnd()
            File classFile
            text path = BUILD + "/" + QUORUM + "/" + packageValue:GetPath() 
            classFile:SetPath(path)
            classFile:CreateDirectories()
            classFile:SetPath(path + "/" + currentClass:GetName() + ".class")
            classWriter:Write(classFile)

            interfaceWriter:VisitEnd()
            File interfaceFile
            path = BUILD + "/" + QUORUM + "/" + packageValue:GetPath()
            
            interfaceFile:SetPath(path + "/" + currentClass:GetName() + "$Interface.class")
            interfaceWriter:Write(interfaceFile)
        end
    end

    action ExitActionHeader(ActionContext context)
        if currentClass not= undefined
            //get the method name
            text key = context:GetStaticKey()
            Action method = currentClass:GetAction(key)
            boolean isMain = method:IsMain()

            if isMain
                WriteMain(method)
            end
            

        end
    end

    action WriteMain(Action method)
        //make a new method, if it exists. 
        text null = undefined
        JavaBytecodeMethodWriter methodWriter = 
        classWriter:VisitMethod(opcodes:GetPublic() + opcodes:GetStatic(), 
            "main", "([Ljava/lang/String;)V", null, undefined)

        text key = currentClass:GetStaticKey()
        text bytecode = converter:ConvertStaticKeyToBytecodePath(key)

        //create the new object and place it on the stack
        methodWriter:VisitType(opcodes:GetNew(), bytecode)
        methodWriter:VisitInstruction(opcodes:GetDuplicate())
        methodWriter:VisitMethodInvoke(opcodes:GetInvokeSpecial(), bytecode, "<init>", "()V", false)

        //store it in a variable and load it back on the stack
        methodWriter:VisitVariable(opcodes:GetStoreObject(), 1)
        methodWriter:VisitVariable(opcodes:GetLoadObject(), 1)

        //call a method on the object, its non-static main
        methodWriter:VisitMethodInvoke(opcodes:GetInvokeVirtual(), bytecode,
            method:GetName(), converter:ConvertActionToBytecodeSignature(method), false)

        methodWriter:VisitInstruction(opcodes:GetReturn())
        methodWriter:VisitMaxSize(2,2)
        methodWriter:VisitEnd()
    end

    action EnterAction(ActionContext context) 
        SetNormalAction()
    end

    action ExitAction(ActionContext context) 
        ClearActionState()
    end
end