package Libraries.Language.Compile.Test

use Libraries.Language.Compile.all
use Libraries.Containers.HashTable
use Libraries.Containers.Array
use Libraries.Language.Compile.Parser
use Libraries.System.File
use Libraries.Containers.Blueprints.Iterator
use Libraries.Language.Compile.Translate.QuorumJarGenerator
use Libraries.System.StackTraceItem

class TypeCheckTester 
    CompilerTestSuite suite = undefined
    text path = "Library/Tests/TypeChecker/"
    text passPath = path + "Pass/"
    text failPath = path + "Fail/"

    action Test
        path = passPath
        AutoBoxingAndMethodOverloadingInt()
        AutoBoxingAndMethodOverloadingNum()
        AutoboxBoolObj()
        AutoboxBoolObjSemiWrapped()
        //AutoboxBoolean()
        //AutoboxBooleanSemiWrapped()
        AutoboxIntObj()
        AutoboxIntObjSemiWrapped()
        //AutoboxInteger()
        //AutoboxIntegerSemiWrapped()
        AutoboxNumObj()
        AutoboxNumObjSemiWrapped()
        //AutoboxNumber()
        //AutoboxNumberSemiWrapped()
        //AutoboxText()
        AutoboxTextObj()
        AutoboxTextObjSemiWrapped()
        //AutoboxTextSemiWrapped()
        BooleanCompare()
        BooleanEquals()
        BooleanGetText()
        CastFieldIntObjDest()
        CastFieldIntObjSource()
        CastFieldIntObjSourceDest()
        CastFieldObjIntDest()
        CastFieldObjIntSource()
        CastFieldObjIntSourceDest()
        CastLocalVarIntObj()
        CastLocalVarObjInt()
        CastParamIntObj()
        CastParamObjInt()
        CompareBugTest()
        ExpAssignBoolObjBoolObj()
        ExpAssignBooleanBoolObj()
        //ExpAssignBooleanBoolean()
        ExpAssignBooleanIntObj()
        //ExpAssignBooleanInteger()
        ExpAssignBooleanNumObj()
        //ExpAssignBooleanNumber()
        //ExpAssignBooleanText()
        //ExpAssignBooleanTextObj()
        ExpAssignIntObjIntObj()
        ExpAssignIntegerBoolObj()
        //ExpAssignIntegerBoolean()
        ExpAssignIntegerIntObj()
        //ExpAssignIntegerInteger()
        ExpAssignIntegerNumObj()
        //ExpAssignIntegerNumber()
        //ExpAssignIntegerText()
        ExpAssignIntegerTextObj()
//        ExpAssignNumObjNumObj()
        ExpAssignNumberBoolObj()
//        ExpAssignNumberBoolean()
        ExpAssignNumberIntObj()
//        ExpAssignNumberInteger()
        ExpAssignNumberNumObj()
//        ExpAssignNumberNumber()
//        ExpAssignNumberText()
        ExpAssignNumberTextObj()
        ExpAssignTextBoolObj()
//        ExpAssignTextBoolean()
        ExpAssignTextIntObj()
//        ExpAssignTextInteger()
        ExpAssignTextNumObj()
//        ExpAssignTextNummber()
        ExpAssignTextObjTextObj()
//        ExpAssignTextText()
        ExpAssignTextTextObj()
        ImpAssignBoolObjBoolObj()
        ImpAssignBoolObjBoolObjWrapped()
        ImpAssignBooleanBoolObj()
        ImpAssignBooleanBoolObjWrapped()
        ImpAssignBooleanBoolean()
        ImpAssignBooleanBooleanWrapped()
        ImpAssignIntObjIntObj()
        ImpAssignIntObjIntObjWrapped()
        ImpAssignIntegerIntObj()
        ImpAssignIntegerIntObjWrapped()
        ImpAssignIntegerInteger()
        ImpAssignIntegerIntegerWrapped()
        ImpAssignNumObjNumObj()
        ImpAssignNumObjNumObjWrapped()
        ImpAssignNumberIntObj()
        ImpAssignNumberIntObjWrapped()
        ImpAssignNumberInteger()
        ImpAssignNumberIntegerWrapped()
        ImpAssignNumberNumObj()
        ImpAssignNumberNumObjWrapped()
        ImpAssignNumberNumber()
        ImpAssignNumberNumberWrapped()
        ImpAssignTextObjTextObj()
        ImpAssignTextObjTextObjWrapped()
        ImpAssignTextText()
        ImpAssignTextTextWrapped()
        ImpAssignTextTextObj()        
        ImpAssignTextTextObjWrapped()       
        IndexOfPrefix()
        IndexOfPrefixIndex()
        InstanceTypeChildOfChild()
        InstanceTypeCurrent()
        InstanceTypeDirectChild()
        //InstanceTypeDirectParent()
        //InstanceTypeObject()
        //InstanceTypeParentOfParent()
        IntegerBitCount()
        IntegerCompare()
        IntegerEquals()
        IntegerGetBinary()
        IntegerGetOctal()
        IntegerGetText()
        IntegerHighestOneBit()
        IntegerLeadingZeros()
        IntegerLowestOneBit()
        IntegerReverse()
        IntegerRotateLeft()
        IntegerRotateRight()
        IntegerTrailingZeros()
        NumberCompare()
        NumberEquals()
        NumberGetHex()
        NumberGetInteger()
        NumberGetText()
        NumberIsInfinite()
        NumberIsNotANumber()
        ReturningIntegerInPlaceOfNumber()
        TextAppend()
        TextCompare()
        TextContains()
        TextEndsWith()
        TextEquals()
        TextEqualsIgnoringCase()
        TextGetCharacter()
        TextGetLength()
        TextGetSubtext()
        TextGetSubtextWithEnd()
        TextIsEmpty()
        TextReplace()
        TextSetAndGetValue()
        TextStartsWith()
        TextToLowerCase()
        TextToUpperCase()
        TextTrim()
        TypeInferenceBoolean()
        TypeInferenceBooleanAnd()
        //TypeInferenceCast()
        TypeInferenceInteger()
        TypeInferenceLiterals()
        TypeInferenceNestedFunctionCalls()
        TypeInferenceNumber()
        TypeInferenceReturnTypesInt()
        TypeInferenceReturnTypesIntNum()
        TypeInferenceReturnTypesNum()
        TypeInferenceText()

//FAIL TESTS
        path = failPath
        ExpAssignBoolObjBoolean()
//        ExpAssignBoolObjIntObj()
//        ExpAssignBoolObjInteger()
//        ExpAssignBoolObjNumObj()
//        ExpAssignBoolObjNumber()
        ExpAssignBoolObjText()
        ExpAssignBoolObjTextObj()
        ExpAssignIntObjBoolObj()
        ExpAssignIntObjBoolean()
        ExpAssignIntObjInteger()
        ExpAssignIntObjNumObj()
        ExpAssignIntObjNumber()
        ExpAssignIntObjText()
        ExpAssignIntObjTextObj()
        ExpAssignNumObjBoolObj()
        ExpAssignNumObjBoolean()
        ExpAssignNumObjIntObj()
        ExpAssignNumObjInteger()
        ExpAssignNumObjNumber()
        ExpAssignNumObjText()
        ExpAssignNumObjTextObj()
        ExpAssignTextObjBoolObj()
        ExpAssignTextObjBoolean()
        ExpAssignTextObjIntObj()
        ExpAssignTextObjInteger()
        ExpAssignTextObjNumbObj()
        ExpAssignTextObjNumber()
        ExpAssignTextObjText()
        ImpAssignBoolObjBoolean()
        ImpAssignBoolObjBooleanWrapped()
//        ImpAssignBoolObjIntObj()
//        ImpAssignBoolObjIntObjWrapped()
//        ImpAssignBoolObjInteger()
//        ImpAssignBoolObjIntegerWrapped()
//        ImpAssignBoolObjNumbObj()
//        ImpAssignBoolObjNumbObjWrapped()
//        ImpAssignBoolObjNumber()
//        ImpAssignBoolObjNumberWrapped()
        ImpAssignBoolObjText()
        ImpAssignBoolObjTextObj()
        ImpAssignBoolObjTextObjWrapped()
        ImpAssignBoolObjTextWrapped()
//        ImpAssignBooleanIntObj()
//        ImpAssignBooleanIntObjWrapped()
//        ImpAssignBooleanInteger()
//        ImpAssignBooleanIntegerWrapped()
//        ImpAssignBooleanNumObj()
//        ImpAssignBooleanNumObjWrapped()
//        ImpAssignBooleanNumber()
//        ImpAssignBooleanNumberWrapped()
        ImpAssignBooleanText()
        ImpAssignBooleanTextObj()
        ImpAssignBooleanTextObjWrapped()
        ImpAssignBooleanTextWrapped()
//        ImpAssignIntObjBoolObj()
//        ImpAssignIntObjBoolObjWrapped()
        ImpAssignIntObjBoolean()
        ImpAssignIntObjBooleanWrapped()
        ImpAssignIntObjInteger()
        ImpAssignIntObjIntegerWrapped()
//        ImpAssignIntObjNumObj()
//        ImpAssignIntObjNumObjWrapped()
        ImpAssignIntObjNumber()
        ImpAssignIntObjNumberWrapped()
        ImpAssignIntObjText()
        ImpAssignIntObjTextObj()
        ImpAssignIntObjTextObjWrapped()
        ImpAssignIntObjTextWrapped()
//        ImpAssignIntegerBoolObj()
//        ImpAssignIntegerBoolObjWrapped()
        ImpAssignIntegerBoolean()
        ImpAssignIntegerBooleanWrapped()
//        ImpAssignIntegerNumObj()
//        ImpAssignIntegerNumObjWrapped()
        ImpAssignIntegerNumber()
        ImpAssignIntegerNumberWrapped()
        ImpAssignIntegerText()
        ImpAssignIntegerTextObj()
        ImpAssignIntegerTextObjWrapped()
        ImpAssignIntegerTextWrapped()
//        ImpAssignNumObjBoolObj()
//        ImpAssignNumObjBoolObjWrapped()
        ImpAssignNumObjBoolean()
        ImpAssignNumObjBooleanWrapped()
//        ImpAssignNumObjIntObj()
//        ImpAssignNumObjIntObjWrapped()
        ImpAssignNumObjInteger()
        ImpAssignNumObjIntegerWrapped()
        ImpAssignNumObjNumber()
        ImpAssignNumObjNumberWrapped()
        ImpAssignNumObjText()
        ImpAssignNumObjTextObj()
        ImpAssignNumObjTextObjWrapped()
        ImpAssignNumObjTextWrapped()
//        ImpAssignNumberBoolObj()
//        ImpAssignNumberBoolObjWrapped()
        ImpAssignNumberBoolean()
        ImpAssignNumberBooleanWrapped()
        ImpAssignNumberText()
        ImpAssignNumberTextObj()
        ImpAssignNumberTextObjWrapped()
        ImpAssignNumberTextWrapped()
//        ImpAssignTextBoolObj()
//        ImpAssignTextBoolObjWrapped()
        ImpAssignTextBoolean()
        ImpAssignTextBooleanWrapped()
//        ImpAssignTextIntObj()
//        ImpAssignTextIntObjWrapped()
        ImpAssignTextInteger()
        ImpAssignTextIntegerWrapped()
//        ImpAssignTextNumObj()
//        ImpAssignTextNumObjWrapped()
        ImpAssignTextNumber()
        ImpAssignTextNumberWrapped()
//        ImpAssignTextObjBoolObj()
//        ImpAssignTextObjBoolObjWrapped()
        ImpAssignTextObjBoolean()
        ImpAssignTextObjBooleanWrapped()
//        ImpAssignTextObjIntObj()
//        ImpAssignTextObjIntObjWrapped()
        ImpAssignTextObjInteger()
        ImpAssignTextObjIntegerWrapped()
        ImpAssignTextObjNumObj()
        ImpAssignTextObjNumObjWrapped()
        ImpAssignTextObjNumber()
        ImpAssignTextObjNumberWrapped()
        PrimitiveTextGetValue()
        PrimitiveTextSetValue()
        InstanceTypeUnrelatedTypes()
        TypeInferenceDifferentLiteralTypes()
        TypeInferenceDifferentReturnTypes()
        TypeInferenceDifferentTypes()
    end

    action GetName returns text
        return "Type Check Tests"
    end

    action GetCompilerTestSuite returns CompilerTestSuite
        return suite
    end

    action SetCompilerTestSuite(CompilerTestSuite suite)
        me:suite = suite
    end

    action AutoBoxingAndMethodOverloadingInt
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "AutoBoxingAndMethodOverloadingInt.quorum")
        files:Add(main)
        results:Add(0, "2")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

action AutoBoxingAndMethodOverloadingNum
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "AutoBoxingAndMethodOverloadingNum.quorum")
        files:Add(main)
        results:Add(0, "1.0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxBoolObj
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxBoolObj.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxBoolObjSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxBoolObjSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxBoolean
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxBoolean.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxBooleanSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxBooleanSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxIntObj
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxIntObj.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxIntObjSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxIntObjSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxInteger
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxInteger.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxIntegerSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxIntegerSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxNumObj
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxNumObj.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxNumObjSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxNumObjSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxNumber
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxNumber.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxNumberSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxNumberSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxText
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxText.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "text")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxTextObj
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxTextObj.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "text")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxTextObjSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxTextObjSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "text")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action AutoboxTextSemiWrapped
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "AutoboxTextSemiWrapped.quorum")
        dependent1:SetPath(path + "AutoboxTempClass.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "text")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action BooleanCompare 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "BooleanCompare.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action BooleanEquals 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "BooleanEquals.quorum")
        files:Add(main)
        results:Add(0, "false")
        results:Add(1, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action BooleanGetText 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "BooleanGetText.quorum")
        files:Add(main)
        results:Add(0, "false")
        results:Add(1, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastFieldIntObjDest 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastFieldIntObjDest.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastFieldIntObjSource 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastFieldIntObjSource.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastFieldIntObjSourceDest 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastFieldIntObjSourceDest.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastFieldObjIntDest 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastFieldObjIntDest.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastFieldObjIntSource 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastFieldObjIntSource.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastFieldObjIntSourceDest 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastFieldObjIntSourceDest.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastLocalVarIntObj 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastLocalVarIntObj.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastLocalVarObjInt 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastLocalVarObjInt.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastParamIntObj 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastParamIntObj.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CastParamObjInt 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CastParamObjInt.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action CompareBugTest
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "CompareBugTest.quorum")
        files:Add(main)
        results:Add(0, "a")
        results:Add(1, "0")
        results:Add(2, "Equal")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBoolObjBoolObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBoolObjBoolObj.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanBoolObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanBoolObj.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanBoolean
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanBoolean.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanIntObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanIntObj.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanInteger
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanInteger.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanNumObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanNumObj.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanNumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanNumber.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanText.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignBooleanTextObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignBooleanTextObj.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntObjIntObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntObjIntObj.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerBoolObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerBoolObj.quorum")
        files:Add(main)
        results:Add(0, "1")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerBoolean
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerBoolean.quorum")
        files:Add(main)
        results:Add(0, "1")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerIntObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerIntObj.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerInteger
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerInteger.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerNumObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerNumObj.quorum")
        files:Add(main)
        results:Add(0, "7")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerNumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerNumber.quorum")
        files:Add(main)
        results:Add(0, "7")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerText.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignIntegerTextObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerTextObj.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumObjNumObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumObjNumObj.quorum")
        files:Add(main)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberBoolObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberBoolObj.quorum")
        files:Add(main)
        results:Add(0, "1.0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberBoolean
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberBoolean.quorum")
        files:Add(main)
        results:Add(0, "1.0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberIntObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberIntObj.quorum")
        files:Add(main)
        results:Add(0, "5.0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberInteger
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberInteger.quorum")
        files:Add(main)
        results:Add(0, "5.0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberNumObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberNumObj.quorum")
        files:Add(main)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberNumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberNumber.quorum")
        files:Add(main)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberText.quorum")
        files:Add(main)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignNumberTextObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignNumberTextObj.quorum")
        files:Add(main)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextBoolObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextBoolObj.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextBoolean
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextBoolean.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextIntObj 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextIntObj.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextInteger 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextInteger.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextNumObj 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextNumObj.quorum")
        files:Add(main)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextNummber 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextNummber.quorum")
        files:Add(main)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextObjTextObj 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextObjTextObj.quorum")
        files:Add(main)
        results:Add(0, "text")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextText.quorum")
        files:Add(main)
        results:Add(0, "text")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ExpAssignTextTextObj 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignTextTextObj.quorum")
        files:Add(main)
        results:Add(0, "text")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end
    
    action ImpAssignBoolObjBoolObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignBoolObjBoolObj.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignBoolObjBoolObjWrapped
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignBoolObjBoolObjWrapped.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignBooleanBoolObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignBooleanBoolObj.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignBooleanBoolObjWrapped
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignBooleanBoolObjWrapped.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignBooleanBoolean
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignBooleanBoolean.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignBooleanBooleanWrapped
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignBooleanBooleanWrapped.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignIntObjIntObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignIntObjIntObj.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignIntObjIntObjWrapped
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignIntObjIntObjWrapped.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignIntegerIntObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignIntegerIntObj.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignIntegerIntObjWrapped
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignIntegerIntObjWrapped.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignIntegerInteger
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignIntegerInteger.quorum")
        files:Add(main)
        results:Add(0, "5")
        results:Add(1, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignIntegerIntegerWrapped
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignIntegerIntegerWrapped.quorum")
        files:Add(main)
        results:Add(0, "5")
        results:Add(1, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignNumObjNumObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignNumObjNumObj.quorum")
        files:Add(main)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignNumObjNumObjWrapped
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignNumObjNumObjWrapped.quorum")
        files:Add(main)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignNumberIntObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignNumberIntObj.quorum")
        files:Add(main)
        results:Add(0, "5.0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignNumberIntObjWrapped
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignNumberIntObjWrapped.quorum")
        files:Add(main)
        results:Add(0, "5.0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignNumberInteger
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignNumberInteger.quorum")
        files:Add(main)
        results:Add(0, "5.0")
        results:Add(1, "5.0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignNumberIntegerWrapped
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignNumberIntegerWrapped.quorum")
        files:Add(main)
        results:Add(0, "5.0")
        results:Add(1, "5.0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignNumberNumObj
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignNumberNumObj.quorum")
        files:Add(main)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignNumberNumObjWrapped
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignNumberNumObjWrapped.quorum")
        files:Add(main)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignNumberNumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignNumberNumber.quorum")
        files:Add(main)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignNumberNumberWrapped
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignNumberNumberWrapped.quorum")
        files:Add(main)
        results:Add(0, "7.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignTextObjTextObj 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignTextObjTextObj.quorum")
        files:Add(main)
        results:Add(0, "t")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignTextObjTextObjWrapped
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignTextObjTextObjWrapped.quorum")
        files:Add(main)
        results:Add(0, "t")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignTextText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignTextText.quorum")
        files:Add(main)
        results:Add(0, "t")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignTextTextObj 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignTextTextObj.quorum")
        files:Add(main)
        results:Add(0, "t")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignTextTextObjWrapped
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignTextTextObjWrapped.quorum")
        files:Add(main)
        results:Add(0, "t")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ImpAssignTextTextWrapped
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ImpAssignTextTextWrapped.quorum")
        files:Add(main)
        results:Add(0, "t")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IndexOfPrefix 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IndexOfPrefix.quorum")
        files:Add(main)
        results:Add(0, "2")
        results:Add(1, "2")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IndexOfPrefixIndex 
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IndexOfPrefixIndex.quorum")
        files:Add(main)
        results:Add(0, "3")
        results:Add(1, "3")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action InstanceTypeChildOfChild 
        Array<File> files
        Array<text> results
        File main
        File dependent1
        File dependent2
        File dependent3
        main:SetPath(path + "InstanceTypeChildOfChild.quorum")
        dependent1:SetPath(path + "A.quorum")
        dependent2:SetPath(path + "B.quorum")
        dependent3:SetPath(path + "C.quorum")
        files:Add(main)
        files:Add(dependent1)
        files:Add(dependent2)
        files:Add(dependent3)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action InstanceTypeCurrent
        Array<File> files
        Array<text> results
        File main
        File dependent1
        main:SetPath(path + "InstanceTypeCurrent.quorum")
        dependent1:SetPath(path + "A.quorum")
        files:Add(main)
        files:Add(dependent1)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action InstanceTypeDirectChild
        Array<File> files
        Array<text> results
        File main
        File dependent1
        File dependent2
        main:SetPath(path + "InstanceTypeDirectChild.quorum")
        dependent1:SetPath(path + "A.quorum")
        dependent2:SetPath(path + "B.quorum")
        files:Add(main)
        files:Add(dependent1)
        files:Add(dependent2)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action InstanceTypeDirectParent
        Array<File> files
        Array<text> results
        File main
        File dependent1
        File dependent2
        main:SetPath(path + "InstanceTypeDirectParent.quorum")
        files:Add(main)
        dependent1:SetPath(path + "B.quorum")
        dependent2:SetPath(path + "C.quorum")
        files:Add(main)
        files:Add(dependent1)
        files:Add(dependent2)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action InstanceTypeObject
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "InstanceTypeObject.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action InstanceTypeParentOfParent
        Array<File> files
        Array<text> results
        File main
        File dependent1
        File dependent2
        File dependent3
        main:SetPath(path + "InstanceTypeParentOfParent.quorum")
        dependent1:SetPath(path + "A.quorum")
        dependent1:SetPath(path + "B.quorum")
        dependent1:SetPath(path + "C.quorum")
        files:Add(main)
        files:Add(dependent1)
        files:Add(dependent2)
        files:Add(dependent3)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerBitCount
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerBitCount.quorum")
        files:Add(main)
        results:Add(0, "7")
        results:Add(1, "7")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerCompare
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerCompare.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerEquals
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerEquals.quorum")
        files:Add(main)
        results:Add(0, "false")
        results:Add(1, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerGetBinary
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerGetBinary.quorum")
        files:Add(main)
        results:Add(0, "101111101")
        results:Add(1, "101111101")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerGetOctal
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerGetOctal.quorum")
        files:Add(main)
        results:Add(0, "575")
        results:Add(1, "575")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerGetText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerGetText.quorum")
        files:Add(main)
        results:Add(0, "5")
        results:Add(1, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerHighestOneBit
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerHighestOneBit.quorum")
        files:Add(main)
        results:Add(0, "256")
        results:Add(1, "256")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerLeadingZeros
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerLeadingZeros.quorum")
        files:Add(main)
        results:Add(0, "23")
        results:Add(1, "23")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerLowestOneBit
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerLowestOneBit.quorum")
        files:Add(main)
        results:Add(0, "1")
        results:Add(1, "1")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerReverse
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerReverse.quorum")
        files:Add(main)
        results:Add(0, "-1098907648")
        results:Add(1, "-1098907648")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerRotateLeft
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerRotateLeft.quorum")
        files:Add(main)
        results:Add(0, "1524")
        results:Add(1, "1524")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerRotateRight
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerRotateRight.quorum")
        files:Add(main)
        results:Add(0, "1073741919")
        results:Add(1, "1073741919")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action IntegerTrailingZeros
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "IntegerTrailingZeros.quorum")
        files:Add(main)
        results:Add(0, "0")
        results:Add(1, "0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action NumberCompare
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "NumberCompare.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action NumberEquals
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "NumberEquals.quorum")
        files:Add(main)
        results:Add(0, "false")
        results:Add(1, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action NumberGetHex
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "NumberGetHex.quorum")
        files:Add(main)
        results:Add(0, "0x1.4cccccccccccdp2")
        results:Add(1, "0x1.4cccccccccccdp2")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action NumberGetInteger
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "NumberGetInteger.quorum")
        files:Add(main)
        results:Add(0, "5")
        results:Add(1, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action NumberGetText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "NumberGetText.quorum")
        files:Add(main)
        results:Add(0, "5.2")
        results:Add(1, "5.2")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action NumberIsInfinite
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "NumberIsInfinite.quorum")
        files:Add(main)
        results:Add(0, "false")
        results:Add(1, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action NumberIsNotANumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "NumberIsNotANumber.quorum")
        files:Add(main)
        results:Add(0, "false")
        results:Add(1, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action ReturningIntegerInPlaceOfNumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ReturningIntegerInPlaceOfNumber.quorum")
        files:Add(main)
        results:Add(0, "4.0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextAppend
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextAppend.quorum")
        files:Add(main)
        results:Add(0, "hello5")
        results:Add(1, "hello5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextCompare
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextCompare.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextContains
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextContains.quorum")
        files:Add(main)
        results:Add(0, "true")
        results:Add(1, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextEndsWith
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextEndsWith.quorum")
        files:Add(main)
        results:Add(0, "true")
        results:Add(1, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextEquals
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextEquals.quorum")
        files:Add(main)
        results:Add(0, "false")
        results:Add(1, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextEqualsIgnoringCase
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextEqualsIgnoringCase.quorum")
        files:Add(main)
        results:Add(0, "true")
        results:Add(1, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextGetCharacter
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextGetCharacter.quorum")
        files:Add(main)
        results:Add(0, "o")
        results:Add(1, "o")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextGetLength
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextGetLength.quorum")
        files:Add(main)
        results:Add(0, "5")
        results:Add(1, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextGetSubtext
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextGetSubtext.quorum")
        files:Add(main)
        results:Add(0, "he")
        results:Add(1, "he")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextGetSubtextWithEnd
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerNumObj.quorum")
        files:Add(main)
        results:Add(0, "lo")
        results:Add(1, "lo")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextIsEmpty
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextIsEmpty.quorum")
        files:Add(main)
        results:Add(0, "true")
        results:Add(1, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextReplace
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextReplace.quorum")
        files:Add(main)
        results:Add(0, "help")
        results:Add(1, "help")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextSetAndGetValue
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextSetAndGetValue.quorum")
        files:Add(main)
        results:Add(0, "5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextStartsWith
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextStartsWith.quorum")
        files:Add(main)
        results:Add(0, "he")
        results:Add(1, "he")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextToLowerCase
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextToLowerCase.quorum")
        files:Add(main)
        results:Add(0, "hello")
        results:Add(1, "hello")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextToUpperCase
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextToUpperCase.quorum")
        files:Add(main)
        results:Add(0, "HELLO")
        results:Add(1, "HELLO")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TextTrim
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TextTrim.quorum")
        files:Add(main)
        results:Add(0, "hello")
        results:Add(1, "hello")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceBoolean
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceBoolean.quorum")
        files:Add(main)
        results:Add(0, "true")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceBooleanAnd
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceBooleanAnd.quorum")
        files:Add(main)
        results:Add(0, "false")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceCast
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceCast.quorum")
        files:Add(main)
        results:Add(0, "3")
        results:Add(1, "3")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceInteger
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceInteger.quorum")
        files:Add(main)
        results:Add(0, "3")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceLiterals
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceLiterals.quorum")
        files:Add(main)
        results:Add(0, "1")
        results:Add(1, "1.9")
        results:Add(2, "true")
        results:Add(3, "hello")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceNestedFunctionCalls
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceNestedFunctionCalls.quorum")
        files:Add(main)
        results:Add(0, "4")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceNumber
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceNumber.quorum")
        files:Add(main)
        results:Add(0, "3.0")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceReturnTypesInt
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceReturnTypesInt.quorum")
        files:Add(main)
        results:Add(0, "3")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceReturnTypesIntNum
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceReturnTypesIntNum.quorum")
        files:Add(main)
        results:Add(0, "3.4")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceReturnTypesNum
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "TypeInferenceReturnTypesNum.quorum")
        files:Add(main)
        results:Add(0, "3.5")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    action TypeInferenceText
        Array<File> files
        Array<text> results
        File main
        main:SetPath(path + "ExpAssignIntegerNumObj.quorum")
        files:Add(main)
        results:Add(0, "hello world")
        suite:Test(files, results)
        suite:TestJavaScript(files, results)
    end

    //FAIL TESTS

    action ExpAssignBoolObjBoolean
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjIntObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjIntObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjInteger
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjInteger.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjNumObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjNumObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjNumber
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjText
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjText.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignBoolObjTextObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignBoolObjTextObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjBoolObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjBoolObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjBoolean
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjInteger
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjInteger.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjNumObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjNumObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjNumber
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjText
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjText.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignIntObjTextObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignIntObjTextObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjBoolObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjBoolObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjBoolean
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjIntObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjIntObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjInteger
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjInteger.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjNumber
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjText
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjText.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignNumObjTextObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignNumObjTextObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjBoolObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjBoolObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjBoolean
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjIntObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjIntObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjInteger
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjInteger.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjNumbObj
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjNumbObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjNumber
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ExpAssignTextObjText
        Array<File> files
        File main
        main:SetPath(path + "ExpAssignTextObjText.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBoolObjBoolean
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBoolObjBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBoolObjBooleanWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBoolObjBooleanWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBoolObjIntObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBoolObjIntObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBoolObjIntObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBoolObjIntObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBoolObjInteger
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBoolObjInteger.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBoolObjIntegerWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBoolObjIntegerWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBoolObjNumbObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBoolObjNumbObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBoolObjNumbObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBoolObjNumbObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBoolObjNumber
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBoolObjNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBoolObjNumberWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBoolObjNumberWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBoolObjText
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBoolObjText.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBoolObjTextObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBoolObjTextObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBoolObjTextObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBoolObjTextObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBoolObjTextWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBoolObjTextWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBooleanIntObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBooleanIntObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBooleanIntObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBooleanIntObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBooleanInteger
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBooleanInteger.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBooleanIntegerWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBooleanIntegerWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBooleanNumObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBooleanNumObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBooleanNumObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBooleanNumObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBooleanNumber
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBooleanNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBooleanNumberWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBooleanNumberWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBooleanText
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBooleanText.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBooleanTextObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBooleanTextObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBooleanTextObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBooleanTextObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignBooleanTextWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignBooleanTextWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntObjBoolObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntObjBoolObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntObjBoolObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntObjBoolObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntObjBoolean
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntObjBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntObjBooleanWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntObjBooleanWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntObjInteger
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntObjInteger.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntObjIntegerWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntObjIntegerWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntObjNumObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntObjNumObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntObjNumObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntObjNumObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntObjNumber
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntObjNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntObjNumberWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntObjNumberWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntObjText
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntObjText.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntObjTextObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntObjTextObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntObjTextObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntObjTextObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntObjTextWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntObjTextWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntegerBoolObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntegerBoolObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntegerBoolObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntegerBoolObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntegerBoolean
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntegerBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntegerBooleanWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntegerBooleanWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntegerNumObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntegerNumObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntegerNumObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntegerNumObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntegerNumber
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntegerNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntegerNumberWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntegerNumberWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntegerText
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntegerText.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntegerTextObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntegerTextObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntegerTextObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntegerTextObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignIntegerTextWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignIntegerTextWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumObjBoolObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumObjBoolObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumObjBoolObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumObjBoolObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumObjBoolean
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumObjBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumObjBooleanWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumObjBooleanWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumObjIntObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumObjIntObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumObjIntObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumObjIntObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumObjInteger
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumObjInteger.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumObjIntegerWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumObjIntegerWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumObjNumber
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumObjNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumObjNumberWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumObjNumberWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumObjText
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumObjText.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumObjTextObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumObjTextObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumObjTextObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumObjTextObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumObjTextWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumObjTextWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumberBoolObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumberBoolObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumberBoolObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumberBoolObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumberBoolean
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumberBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumberBooleanWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumberBooleanWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumberText
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumberText.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumberTextObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumberTextObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumberTextObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumberTextObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignNumberTextWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignNumberTextWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextBoolObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextBoolObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextBoolObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextBoolObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextBoolean
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextBooleanWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextBooleanWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextIntObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextIntObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextIntObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextIntObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextInteger
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextInteger.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextIntegerWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextIntegerWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextNumObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextNumObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextNumObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextNumObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextNumber
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextNumberWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextNumberWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextObjBoolObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextObjBoolObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextObjBoolObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextObjBoolObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextObjBoolean
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextObjBoolean.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextObjBooleanWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextObjBooleanWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextObjIntObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextObjIntObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextObjIntObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextObjIntObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextObjInteger
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextObjInteger.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextObjIntegerWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextObjIntegerWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextObjNumObj
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextObjNumObj.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextObjNumObjWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextObjNumObjWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextObjNumber
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextObjNumber.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextObjNumberWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextObjNumberWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextObjText
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextObjText.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action ImpAssignTextObjTextWrapped
        Array<File> files
        File main
        main:SetPath(path + "ImpAssignTextObjTextWrapped.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action InstanceTypeUnrelatedTypes
        Array<File> files
        File main
        main:SetPath(path + "InstanceTypeUnrelatedTypes.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action PrimitiveTextGetValue
        Array<File> files
        File main
        main:SetPath(path + "PrimitiveTextGetValue.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action PrimitiveTextSetValue
        Array<File> files
        File main
        main:SetPath(path + "PrimitiveTextSetValue.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action TypeInferenceDifferentLiteralTypes
        Array<File> files
        File main
        main:SetPath(path + "TypeInferenceDifferentLiteralTypes.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action TypeInferenceDifferentReturnTypes
        Array<File> files
        File main
        main:SetPath(path + "TypeInferenceDifferentReturnTypes.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

    action TypeInferenceDifferentTypes
        Array<File> files
        File main
        main:SetPath(path + "TypeInferenceDifferentTypes.quorum")
        files:Add(main)
        suite:TestFail(files)
        suite:TestJavaScriptFail(files)
    end

end

